'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace WS_NCT_INSERT
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WS_NCT_INSERTSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WS_NCT_INSERT
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private NCT_INSERTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NCT_INSERT_YORSOR_4OperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.FDA_FINANCE.My.MySettings.Default.FDA_FINANCE_WS_NCT_INSERT_WS_NCT_INSERT
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event NCT_INSERTCompleted As NCT_INSERTCompletedEventHandler
        
        '''<remarks/>
        Public Event NCT_INSERT_YORSOR_4Completed As NCT_INSERT_YORSOR_4CompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NCT_INSERT", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NCT_INSERT(ByVal IDA As String) As String
            Dim results() As Object = Me.Invoke("NCT_INSERT", New Object() {IDA})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NCT_INSERTAsync(ByVal IDA As String)
            Me.NCT_INSERTAsync(IDA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NCT_INSERTAsync(ByVal IDA As String, ByVal userState As Object)
            If (Me.NCT_INSERTOperationCompleted Is Nothing) Then
                Me.NCT_INSERTOperationCompleted = AddressOf Me.OnNCT_INSERTOperationCompleted
            End If
            Me.InvokeAsync("NCT_INSERT", New Object() {IDA}, Me.NCT_INSERTOperationCompleted, userState)
        End Sub
        
        Private Sub OnNCT_INSERTOperationCompleted(ByVal arg As Object)
            If (Not (Me.NCT_INSERTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NCT_INSERTCompleted(Me, New NCT_INSERTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NCT_INSERT_YORSOR_4", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NCT_INSERT_YORSOR_4(ByVal IDA As String) As String
            Dim results() As Object = Me.Invoke("NCT_INSERT_YORSOR_4", New Object() {IDA})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NCT_INSERT_YORSOR_4Async(ByVal IDA As String)
            Me.NCT_INSERT_YORSOR_4Async(IDA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NCT_INSERT_YORSOR_4Async(ByVal IDA As String, ByVal userState As Object)
            If (Me.NCT_INSERT_YORSOR_4OperationCompleted Is Nothing) Then
                Me.NCT_INSERT_YORSOR_4OperationCompleted = AddressOf Me.OnNCT_INSERT_YORSOR_4OperationCompleted
            End If
            Me.InvokeAsync("NCT_INSERT_YORSOR_4", New Object() {IDA}, Me.NCT_INSERT_YORSOR_4OperationCompleted, userState)
        End Sub
        
        Private Sub OnNCT_INSERT_YORSOR_4OperationCompleted(ByVal arg As Object)
            If (Not (Me.NCT_INSERT_YORSOR_4CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NCT_INSERT_YORSOR_4Completed(Me, New NCT_INSERT_YORSOR_4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub NCT_INSERTCompletedEventHandler(ByVal sender As Object, ByVal e As NCT_INSERTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NCT_INSERTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub NCT_INSERT_YORSOR_4CompletedEventHandler(ByVal sender As Object, ByVal e As NCT_INSERT_YORSOR_4CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NCT_INSERT_YORSOR_4CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
