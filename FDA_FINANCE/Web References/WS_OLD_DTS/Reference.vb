'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace WS_OLD_DTS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WS_OLD_DTSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WS_OLD_DT
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private get_dvcd_autoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private get_lcn_name_type1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private get_lcn_name_type2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SP_GET_FEEDTL_OLDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.FDA_FINANCE.My.MySettings.Default.FDA_FINANCE_WS_OLD_DTS_WS_OLD_DT
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event get_dvcd_autoCompleted As get_dvcd_autoCompletedEventHandler
        
        '''<remarks/>
        Public Event SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2Completed As SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2CompletedEventHandler
        
        '''<remarks/>
        Public Event get_lcn_name_type1Completed As get_lcn_name_type1CompletedEventHandler
        
        '''<remarks/>
        Public Event get_lcn_name_type2Completed As get_lcn_name_type2CompletedEventHandler
        
        '''<remarks/>
        Public Event SP_GET_FEEDTL_OLDCompleted As SP_GET_FEEDTL_OLDCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_dvcd_auto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function get_dvcd_auto(ByVal feeno As String, ByVal feeabbr As String) As String
            Dim results() As Object = Me.Invoke("get_dvcd_auto", New Object() {feeno, feeabbr})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub get_dvcd_autoAsync(ByVal feeno As String, ByVal feeabbr As String)
            Me.get_dvcd_autoAsync(feeno, feeabbr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub get_dvcd_autoAsync(ByVal feeno As String, ByVal feeabbr As String, ByVal userState As Object)
            If (Me.get_dvcd_autoOperationCompleted Is Nothing) Then
                Me.get_dvcd_autoOperationCompleted = AddressOf Me.Onget_dvcd_autoOperationCompleted
            End If
            Me.InvokeAsync("get_dvcd_auto", New Object() {feeno, feeabbr}, Me.get_dvcd_autoOperationCompleted, userState)
        End Sub
        
        Private Sub Onget_dvcd_autoOperationCompleted(ByVal arg As Object)
            If (Not (Me.get_dvcd_autoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent get_dvcd_autoCompleted(Me, New get_dvcd_autoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2(ByVal feeno As String, ByVal dvcd As Integer, ByVal feeabbr As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2", New Object() {feeno, dvcd, feeabbr})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2Async(ByVal feeno As String, ByVal dvcd As Integer, ByVal feeabbr As String)
            Me.SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2Async(feeno, dvcd, feeabbr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2Async(ByVal feeno As String, ByVal dvcd As Integer, ByVal feeabbr As String, ByVal userState As Object)
            If (Me.SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2OperationCompleted Is Nothing) Then
                Me.SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2OperationCompleted = AddressOf Me.OnSP_get_receipt_by_feeabbr_and_feeno_group_sum_old2OperationCompleted
            End If
            Me.InvokeAsync("SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2", New Object() {feeno, dvcd, feeabbr}, Me.SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSP_get_receipt_by_feeabbr_and_feeno_group_sum_old2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2Completed(Me, New SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_lcn_name_type1", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function get_lcn_name_type1(ByVal lcnsid As Integer, ByVal lcnscd As Integer) As String
            Dim results() As Object = Me.Invoke("get_lcn_name_type1", New Object() {lcnsid, lcnscd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub get_lcn_name_type1Async(ByVal lcnsid As Integer, ByVal lcnscd As Integer)
            Me.get_lcn_name_type1Async(lcnsid, lcnscd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub get_lcn_name_type1Async(ByVal lcnsid As Integer, ByVal lcnscd As Integer, ByVal userState As Object)
            If (Me.get_lcn_name_type1OperationCompleted Is Nothing) Then
                Me.get_lcn_name_type1OperationCompleted = AddressOf Me.Onget_lcn_name_type1OperationCompleted
            End If
            Me.InvokeAsync("get_lcn_name_type1", New Object() {lcnsid, lcnscd}, Me.get_lcn_name_type1OperationCompleted, userState)
        End Sub
        
        Private Sub Onget_lcn_name_type1OperationCompleted(ByVal arg As Object)
            If (Not (Me.get_lcn_name_type1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent get_lcn_name_type1Completed(Me, New get_lcn_name_type1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_lcn_name_type2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function get_lcn_name_type2(ByVal lcnsid As Integer, ByVal lcnscd As Integer) As String
            Dim results() As Object = Me.Invoke("get_lcn_name_type2", New Object() {lcnsid, lcnscd})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub get_lcn_name_type2Async(ByVal lcnsid As Integer, ByVal lcnscd As Integer)
            Me.get_lcn_name_type2Async(lcnsid, lcnscd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub get_lcn_name_type2Async(ByVal lcnsid As Integer, ByVal lcnscd As Integer, ByVal userState As Object)
            If (Me.get_lcn_name_type2OperationCompleted Is Nothing) Then
                Me.get_lcn_name_type2OperationCompleted = AddressOf Me.Onget_lcn_name_type2OperationCompleted
            End If
            Me.InvokeAsync("get_lcn_name_type2", New Object() {lcnsid, lcnscd}, Me.get_lcn_name_type2OperationCompleted, userState)
        End Sub
        
        Private Sub Onget_lcn_name_type2OperationCompleted(ByVal arg As Object)
            If (Not (Me.get_lcn_name_type2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent get_lcn_name_type2Completed(Me, New get_lcn_name_type2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SP_GET_FEEDTL_OLD", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SP_GET_FEEDTL_OLD(ByVal feeno As String, ByVal dvcd As Integer, ByVal pvncd As Integer, ByVal feeabbr As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("SP_GET_FEEDTL_OLD", New Object() {feeno, dvcd, pvncd, feeabbr})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SP_GET_FEEDTL_OLDAsync(ByVal feeno As String, ByVal dvcd As Integer, ByVal pvncd As Integer, ByVal feeabbr As String)
            Me.SP_GET_FEEDTL_OLDAsync(feeno, dvcd, pvncd, feeabbr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SP_GET_FEEDTL_OLDAsync(ByVal feeno As String, ByVal dvcd As Integer, ByVal pvncd As Integer, ByVal feeabbr As String, ByVal userState As Object)
            If (Me.SP_GET_FEEDTL_OLDOperationCompleted Is Nothing) Then
                Me.SP_GET_FEEDTL_OLDOperationCompleted = AddressOf Me.OnSP_GET_FEEDTL_OLDOperationCompleted
            End If
            Me.InvokeAsync("SP_GET_FEEDTL_OLD", New Object() {feeno, dvcd, pvncd, feeabbr}, Me.SP_GET_FEEDTL_OLDOperationCompleted, userState)
        End Sub
        
        Private Sub OnSP_GET_FEEDTL_OLDOperationCompleted(ByVal arg As Object)
            If (Not (Me.SP_GET_FEEDTL_OLDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SP_GET_FEEDTL_OLDCompleted(Me, New SP_GET_FEEDTL_OLDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub get_dvcd_autoCompletedEventHandler(ByVal sender As Object, ByVal e As get_dvcd_autoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class get_dvcd_autoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2CompletedEventHandler(ByVal sender As Object, ByVal e As SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SP_get_receipt_by_feeabbr_and_feeno_group_sum_old2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub get_lcn_name_type1CompletedEventHandler(ByVal sender As Object, ByVal e As get_lcn_name_type1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class get_lcn_name_type1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub get_lcn_name_type2CompletedEventHandler(ByVal sender As Object, ByVal e As get_lcn_name_type2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class get_lcn_name_type2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub SP_GET_FEEDTL_OLDCompletedEventHandler(ByVal sender As Object, ByVal e As SP_GET_FEEDTL_OLDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SP_GET_FEEDTL_OLDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
End Namespace
