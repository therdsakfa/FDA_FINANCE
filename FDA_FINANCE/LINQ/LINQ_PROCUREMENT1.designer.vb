'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="PROCURE")>  _
Partial Public Class LINQ_PROCUREMENTDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertPROCUREMENT_GUARANTEE_HEAD(instance As PROCUREMENT_GUARANTEE_HEAD)
    End Sub
  Partial Private Sub UpdatePROCUREMENT_GUARANTEE_HEAD(instance As PROCUREMENT_GUARANTEE_HEAD)
    End Sub
  Partial Private Sub DeletePROCUREMENT_GUARANTEE_HEAD(instance As PROCUREMENT_GUARANTEE_HEAD)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("PROCUREConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property PROCUREMENT_GUARANTEE_HEADs() As System.Data.Linq.Table(Of PROCUREMENT_GUARANTEE_HEAD)
		Get
			Return Me.GetTable(Of PROCUREMENT_GUARANTEE_HEAD)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="PROCUREMENT.PROCUREMENT_GUARANTEE_HEAD")>  _
Partial Public Class PROCUREMENT_GUARANTEE_HEAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _G_ID As Integer
	
	Private _PROJ_ID As System.Nullable(Of Integer)
	
	Private _DOC_CODE As String
	
	Private _DETAIL As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _SUP_ID As System.Nullable(Of Integer)
	
	Private _START_DATE As System.Nullable(Of Date)
	
	Private _END_DATE As System.Nullable(Of Date)
	
	Private _APPROVE_DATE As System.Nullable(Of Date)
	
	Private _ACTION_DATE As System.Nullable(Of Date)
	
	Private _FINE_TYPE As System.Nullable(Of Integer)
	
	Private _FINE_RATE As System.Nullable(Of Double)
	
	Private _FieldValue1 As String
	
	Private _FieldValue2 As String
	
	Private _FieldValue3 As String
	
	Private _FieldValue4 As String
	
	Private _FieldValue5 As String
	
	Private _FieldValue6 As String
	
	Private _FieldValue7 As String
	
	Private _FieldValue8 As String
	
	Private _FieldValue9 As String
	
	Private _FieldValue10 As String
	
	Private _FieldValue11 As String
	
	Private _FieldValue12 As String
	
	Private _G_Type As System.Nullable(Of Integer)
	
	Private _G_Year As System.Nullable(Of Integer)
	
	Private _G_Month As System.Nullable(Of Integer)
	
	Private _G_Day As System.Nullable(Of Integer)
	
	Private _LOCATION As String
	
	Private _INSTRUMENT_CHECK As System.Nullable(Of Integer)
	
	Private _INSTRUMENT_DATE As System.Nullable(Of Date)
	
	Private _INSTRUMENT_NAME As String
	
	Private _LEGEL_NO As String
	
	Private _LEGELSEND_DATE As System.Nullable(Of Date)
	
	Private _LEGEL_DATE As System.Nullable(Of Date)
	
	Private _G_RETURNDATE As System.Nullable(Of Date)
	
	Private _G_RETURNNO As String
	
	Private _G_RETURNMONEY As System.Nullable(Of Decimal)
	
	Private _G_RETUENBIT As System.Nullable(Of Integer)
	
	Private _G_RETURNREMARK As String
	
	Private _G_RETURNAPPROVE As System.Nullable(Of Date)
	
	Private _G_RETURNNAME As String
	
	Private _G_RETURNDATEDOC As System.Nullable(Of Date)
	
	Private _G_FINE_TYPE As System.Nullable(Of Integer)
	
	Private _Proj_No As String
	
	Private _G_No As String
	
	Private _Percents As System.Nullable(Of Double)
	
	Private _Result As System.Nullable(Of Double)
	
	Private _PO_No As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnG_IDChanged()
    End Sub
    Partial Private Sub OnPROJ_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROJ_IDChanged()
    End Sub
    Partial Private Sub OnDOC_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDOC_CODEChanged()
    End Sub
    Partial Private Sub OnDETAILChanging(value As String)
    End Sub
    Partial Private Sub OnDETAILChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnSUP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUP_IDChanged()
    End Sub
    Partial Private Sub OnSTART_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTART_DATEChanged()
    End Sub
    Partial Private Sub OnEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEND_DATEChanged()
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanged()
    End Sub
    Partial Private Sub OnACTION_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnACTION_DATEChanged()
    End Sub
    Partial Private Sub OnFINE_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINE_TYPEChanged()
    End Sub
    Partial Private Sub OnFINE_RATEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnFINE_RATEChanged()
    End Sub
    Partial Private Sub OnFieldValue1Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue1Changed()
    End Sub
    Partial Private Sub OnFieldValue2Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue2Changed()
    End Sub
    Partial Private Sub OnFieldValue3Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue3Changed()
    End Sub
    Partial Private Sub OnFieldValue4Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue4Changed()
    End Sub
    Partial Private Sub OnFieldValue5Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue5Changed()
    End Sub
    Partial Private Sub OnFieldValue6Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue6Changed()
    End Sub
    Partial Private Sub OnFieldValue7Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue7Changed()
    End Sub
    Partial Private Sub OnFieldValue8Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue8Changed()
    End Sub
    Partial Private Sub OnFieldValue9Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue9Changed()
    End Sub
    Partial Private Sub OnFieldValue10Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue10Changed()
    End Sub
    Partial Private Sub OnFieldValue11Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue11Changed()
    End Sub
    Partial Private Sub OnFieldValue12Changing(value As String)
    End Sub
    Partial Private Sub OnFieldValue12Changed()
    End Sub
    Partial Private Sub OnG_TypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnG_TypeChanged()
    End Sub
    Partial Private Sub OnG_YearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnG_YearChanged()
    End Sub
    Partial Private Sub OnG_MonthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnG_MonthChanged()
    End Sub
    Partial Private Sub OnG_DayChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnG_DayChanged()
    End Sub
    Partial Private Sub OnLOCATIONChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATIONChanged()
    End Sub
    Partial Private Sub OnINSTRUMENT_CHECKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINSTRUMENT_CHECKChanged()
    End Sub
    Partial Private Sub OnINSTRUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSTRUMENT_DATEChanged()
    End Sub
    Partial Private Sub OnINSTRUMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnINSTRUMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnLEGEL_NOChanging(value As String)
    End Sub
    Partial Private Sub OnLEGEL_NOChanged()
    End Sub
    Partial Private Sub OnLEGELSEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLEGELSEND_DATEChanged()
    End Sub
    Partial Private Sub OnLEGEL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLEGEL_DATEChanged()
    End Sub
    Partial Private Sub OnG_RETURNDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnG_RETURNDATEChanged()
    End Sub
    Partial Private Sub OnG_RETURNNOChanging(value As String)
    End Sub
    Partial Private Sub OnG_RETURNNOChanged()
    End Sub
    Partial Private Sub OnG_RETURNMONEYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnG_RETURNMONEYChanged()
    End Sub
    Partial Private Sub OnG_RETUENBITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnG_RETUENBITChanged()
    End Sub
    Partial Private Sub OnG_RETURNREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnG_RETURNREMARKChanged()
    End Sub
    Partial Private Sub OnG_RETURNAPPROVEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnG_RETURNAPPROVEChanged()
    End Sub
    Partial Private Sub OnG_RETURNNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnG_RETURNNAMEChanged()
    End Sub
    Partial Private Sub OnG_RETURNDATEDOCChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnG_RETURNDATEDOCChanged()
    End Sub
    Partial Private Sub OnG_FINE_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnG_FINE_TYPEChanged()
    End Sub
    Partial Private Sub OnProj_NoChanging(value As String)
    End Sub
    Partial Private Sub OnProj_NoChanged()
    End Sub
    Partial Private Sub OnG_NoChanging(value As String)
    End Sub
    Partial Private Sub OnG_NoChanged()
    End Sub
    Partial Private Sub OnPercentsChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPercentsChanged()
    End Sub
    Partial Private Sub OnResultChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnResultChanged()
    End Sub
    Partial Private Sub OnPO_NoChanging(value As String)
    End Sub
    Partial Private Sub OnPO_NoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property G_ID() As Integer
		Get
			Return Me._G_ID
		End Get
		Set
			If ((Me._G_ID = value)  _
						= false) Then
				Me.OnG_IDChanging(value)
				Me.SendPropertyChanging
				Me._G_ID = value
				Me.SendPropertyChanged("G_ID")
				Me.OnG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROJ_ID", DbType:="Int")>  _
	Public Property PROJ_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROJ_ID
		End Get
		Set
			If (Me._PROJ_ID.Equals(value) = false) Then
				Me.OnPROJ_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROJ_ID = value
				Me.SendPropertyChanged("PROJ_ID")
				Me.OnPROJ_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property DOC_CODE() As String
		Get
			Return Me._DOC_CODE
		End Get
		Set
			If (String.Equals(Me._DOC_CODE, value) = false) Then
				Me.OnDOC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DOC_CODE = value
				Me.SendPropertyChanged("DOC_CODE")
				Me.OnDOC_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property DETAIL() As String
		Get
			Return Me._DETAIL
		End Get
		Set
			If (String.Equals(Me._DETAIL, value) = false) Then
				Me.OnDETAILChanging(value)
				Me.SendPropertyChanging
				Me._DETAIL = value
				Me.SendPropertyChanged("DETAIL")
				Me.OnDETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUP_ID", DbType:="Int")>  _
	Public Property SUP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SUP_ID
		End Get
		Set
			If (Me._SUP_ID.Equals(value) = false) Then
				Me.OnSUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._SUP_ID = value
				Me.SendPropertyChanged("SUP_ID")
				Me.OnSUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_START_DATE", DbType:="DateTime")>  _
	Public Property START_DATE() As System.Nullable(Of Date)
		Get
			Return Me._START_DATE
		End Get
		Set
			If (Me._START_DATE.Equals(value) = false) Then
				Me.OnSTART_DATEChanging(value)
				Me.SendPropertyChanging
				Me._START_DATE = value
				Me.SendPropertyChanged("START_DATE")
				Me.OnSTART_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_END_DATE", DbType:="DateTime")>  _
	Public Property END_DATE() As System.Nullable(Of Date)
		Get
			Return Me._END_DATE
		End Get
		Set
			If (Me._END_DATE.Equals(value) = false) Then
				Me.OnEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._END_DATE = value
				Me.SendPropertyChanged("END_DATE")
				Me.OnEND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_DATE", DbType:="DateTime")>  _
	Public Property APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APPROVE_DATE
		End Get
		Set
			If (Me._APPROVE_DATE.Equals(value) = false) Then
				Me.OnAPPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_DATE = value
				Me.SendPropertyChanged("APPROVE_DATE")
				Me.OnAPPROVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTION_DATE", DbType:="DateTime")>  _
	Public Property ACTION_DATE() As System.Nullable(Of Date)
		Get
			Return Me._ACTION_DATE
		End Get
		Set
			If (Me._ACTION_DATE.Equals(value) = false) Then
				Me.OnACTION_DATEChanging(value)
				Me.SendPropertyChanging
				Me._ACTION_DATE = value
				Me.SendPropertyChanged("ACTION_DATE")
				Me.OnACTION_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINE_TYPE", DbType:="Int")>  _
	Public Property FINE_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._FINE_TYPE
		End Get
		Set
			If (Me._FINE_TYPE.Equals(value) = false) Then
				Me.OnFINE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._FINE_TYPE = value
				Me.SendPropertyChanged("FINE_TYPE")
				Me.OnFINE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINE_RATE", DbType:="Float")>  _
	Public Property FINE_RATE() As System.Nullable(Of Double)
		Get
			Return Me._FINE_RATE
		End Get
		Set
			If (Me._FINE_RATE.Equals(value) = false) Then
				Me.OnFINE_RATEChanging(value)
				Me.SendPropertyChanging
				Me._FINE_RATE = value
				Me.SendPropertyChanged("FINE_RATE")
				Me.OnFINE_RATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue1", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue1() As String
		Get
			Return Me._FieldValue1
		End Get
		Set
			If (String.Equals(Me._FieldValue1, value) = false) Then
				Me.OnFieldValue1Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue1 = value
				Me.SendPropertyChanged("FieldValue1")
				Me.OnFieldValue1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue2", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue2() As String
		Get
			Return Me._FieldValue2
		End Get
		Set
			If (String.Equals(Me._FieldValue2, value) = false) Then
				Me.OnFieldValue2Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue2 = value
				Me.SendPropertyChanged("FieldValue2")
				Me.OnFieldValue2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue3", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue3() As String
		Get
			Return Me._FieldValue3
		End Get
		Set
			If (String.Equals(Me._FieldValue3, value) = false) Then
				Me.OnFieldValue3Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue3 = value
				Me.SendPropertyChanged("FieldValue3")
				Me.OnFieldValue3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue4", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue4() As String
		Get
			Return Me._FieldValue4
		End Get
		Set
			If (String.Equals(Me._FieldValue4, value) = false) Then
				Me.OnFieldValue4Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue4 = value
				Me.SendPropertyChanged("FieldValue4")
				Me.OnFieldValue4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue5", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue5() As String
		Get
			Return Me._FieldValue5
		End Get
		Set
			If (String.Equals(Me._FieldValue5, value) = false) Then
				Me.OnFieldValue5Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue5 = value
				Me.SendPropertyChanged("FieldValue5")
				Me.OnFieldValue5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue6", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue6() As String
		Get
			Return Me._FieldValue6
		End Get
		Set
			If (String.Equals(Me._FieldValue6, value) = false) Then
				Me.OnFieldValue6Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue6 = value
				Me.SendPropertyChanged("FieldValue6")
				Me.OnFieldValue6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue7", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue7() As String
		Get
			Return Me._FieldValue7
		End Get
		Set
			If (String.Equals(Me._FieldValue7, value) = false) Then
				Me.OnFieldValue7Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue7 = value
				Me.SendPropertyChanged("FieldValue7")
				Me.OnFieldValue7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue8", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue8() As String
		Get
			Return Me._FieldValue8
		End Get
		Set
			If (String.Equals(Me._FieldValue8, value) = false) Then
				Me.OnFieldValue8Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue8 = value
				Me.SendPropertyChanged("FieldValue8")
				Me.OnFieldValue8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue9", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue9() As String
		Get
			Return Me._FieldValue9
		End Get
		Set
			If (String.Equals(Me._FieldValue9, value) = false) Then
				Me.OnFieldValue9Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue9 = value
				Me.SendPropertyChanged("FieldValue9")
				Me.OnFieldValue9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue10", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue10() As String
		Get
			Return Me._FieldValue10
		End Get
		Set
			If (String.Equals(Me._FieldValue10, value) = false) Then
				Me.OnFieldValue10Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue10 = value
				Me.SendPropertyChanged("FieldValue10")
				Me.OnFieldValue10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue11", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue11() As String
		Get
			Return Me._FieldValue11
		End Get
		Set
			If (String.Equals(Me._FieldValue11, value) = false) Then
				Me.OnFieldValue11Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue11 = value
				Me.SendPropertyChanged("FieldValue11")
				Me.OnFieldValue11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue12", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue12() As String
		Get
			Return Me._FieldValue12
		End Get
		Set
			If (String.Equals(Me._FieldValue12, value) = false) Then
				Me.OnFieldValue12Changing(value)
				Me.SendPropertyChanging
				Me._FieldValue12 = value
				Me.SendPropertyChanged("FieldValue12")
				Me.OnFieldValue12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_Type", DbType:="Int")>  _
	Public Property G_Type() As System.Nullable(Of Integer)
		Get
			Return Me._G_Type
		End Get
		Set
			If (Me._G_Type.Equals(value) = false) Then
				Me.OnG_TypeChanging(value)
				Me.SendPropertyChanging
				Me._G_Type = value
				Me.SendPropertyChanged("G_Type")
				Me.OnG_TypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_Year", DbType:="Int")>  _
	Public Property G_Year() As System.Nullable(Of Integer)
		Get
			Return Me._G_Year
		End Get
		Set
			If (Me._G_Year.Equals(value) = false) Then
				Me.OnG_YearChanging(value)
				Me.SendPropertyChanging
				Me._G_Year = value
				Me.SendPropertyChanged("G_Year")
				Me.OnG_YearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_Month", DbType:="Int")>  _
	Public Property G_Month() As System.Nullable(Of Integer)
		Get
			Return Me._G_Month
		End Get
		Set
			If (Me._G_Month.Equals(value) = false) Then
				Me.OnG_MonthChanging(value)
				Me.SendPropertyChanging
				Me._G_Month = value
				Me.SendPropertyChanged("G_Month")
				Me.OnG_MonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_Day", DbType:="Int")>  _
	Public Property G_Day() As System.Nullable(Of Integer)
		Get
			Return Me._G_Day
		End Get
		Set
			If (Me._G_Day.Equals(value) = false) Then
				Me.OnG_DayChanging(value)
				Me.SendPropertyChanging
				Me._G_Day = value
				Me.SendPropertyChanged("G_Day")
				Me.OnG_DayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION() As String
		Get
			Return Me._LOCATION
		End Get
		Set
			If (String.Equals(Me._LOCATION, value) = false) Then
				Me.OnLOCATIONChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION = value
				Me.SendPropertyChanged("LOCATION")
				Me.OnLOCATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTRUMENT_CHECK", DbType:="Int")>  _
	Public Property INSTRUMENT_CHECK() As System.Nullable(Of Integer)
		Get
			Return Me._INSTRUMENT_CHECK
		End Get
		Set
			If (Me._INSTRUMENT_CHECK.Equals(value) = false) Then
				Me.OnINSTRUMENT_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._INSTRUMENT_CHECK = value
				Me.SendPropertyChanged("INSTRUMENT_CHECK")
				Me.OnINSTRUMENT_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTRUMENT_DATE", DbType:="DateTime")>  _
	Public Property INSTRUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._INSTRUMENT_DATE
		End Get
		Set
			If (Me._INSTRUMENT_DATE.Equals(value) = false) Then
				Me.OnINSTRUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._INSTRUMENT_DATE = value
				Me.SendPropertyChanged("INSTRUMENT_DATE")
				Me.OnINSTRUMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTRUMENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property INSTRUMENT_NAME() As String
		Get
			Return Me._INSTRUMENT_NAME
		End Get
		Set
			If (String.Equals(Me._INSTRUMENT_NAME, value) = false) Then
				Me.OnINSTRUMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._INSTRUMENT_NAME = value
				Me.SendPropertyChanged("INSTRUMENT_NAME")
				Me.OnINSTRUMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEGEL_NO", DbType:="NVarChar(MAX)")>  _
	Public Property LEGEL_NO() As String
		Get
			Return Me._LEGEL_NO
		End Get
		Set
			If (String.Equals(Me._LEGEL_NO, value) = false) Then
				Me.OnLEGEL_NOChanging(value)
				Me.SendPropertyChanging
				Me._LEGEL_NO = value
				Me.SendPropertyChanged("LEGEL_NO")
				Me.OnLEGEL_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEGELSEND_DATE", DbType:="DateTime")>  _
	Public Property LEGELSEND_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LEGELSEND_DATE
		End Get
		Set
			If (Me._LEGELSEND_DATE.Equals(value) = false) Then
				Me.OnLEGELSEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LEGELSEND_DATE = value
				Me.SendPropertyChanged("LEGELSEND_DATE")
				Me.OnLEGELSEND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEGEL_DATE", DbType:="DateTime")>  _
	Public Property LEGEL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LEGEL_DATE
		End Get
		Set
			If (Me._LEGEL_DATE.Equals(value) = false) Then
				Me.OnLEGEL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LEGEL_DATE = value
				Me.SendPropertyChanged("LEGEL_DATE")
				Me.OnLEGEL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_RETURNDATE", DbType:="DateTime")>  _
	Public Property G_RETURNDATE() As System.Nullable(Of Date)
		Get
			Return Me._G_RETURNDATE
		End Get
		Set
			If (Me._G_RETURNDATE.Equals(value) = false) Then
				Me.OnG_RETURNDATEChanging(value)
				Me.SendPropertyChanging
				Me._G_RETURNDATE = value
				Me.SendPropertyChanged("G_RETURNDATE")
				Me.OnG_RETURNDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_RETURNNO", DbType:="NVarChar(MAX)")>  _
	Public Property G_RETURNNO() As String
		Get
			Return Me._G_RETURNNO
		End Get
		Set
			If (String.Equals(Me._G_RETURNNO, value) = false) Then
				Me.OnG_RETURNNOChanging(value)
				Me.SendPropertyChanging
				Me._G_RETURNNO = value
				Me.SendPropertyChanged("G_RETURNNO")
				Me.OnG_RETURNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_RETURNMONEY", DbType:="Money")>  _
	Public Property G_RETURNMONEY() As System.Nullable(Of Decimal)
		Get
			Return Me._G_RETURNMONEY
		End Get
		Set
			If (Me._G_RETURNMONEY.Equals(value) = false) Then
				Me.OnG_RETURNMONEYChanging(value)
				Me.SendPropertyChanging
				Me._G_RETURNMONEY = value
				Me.SendPropertyChanged("G_RETURNMONEY")
				Me.OnG_RETURNMONEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_RETUENBIT", DbType:="Int")>  _
	Public Property G_RETUENBIT() As System.Nullable(Of Integer)
		Get
			Return Me._G_RETUENBIT
		End Get
		Set
			If (Me._G_RETUENBIT.Equals(value) = false) Then
				Me.OnG_RETUENBITChanging(value)
				Me.SendPropertyChanging
				Me._G_RETUENBIT = value
				Me.SendPropertyChanged("G_RETUENBIT")
				Me.OnG_RETUENBITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_RETURNREMARK", DbType:="NVarChar(MAX)")>  _
	Public Property G_RETURNREMARK() As String
		Get
			Return Me._G_RETURNREMARK
		End Get
		Set
			If (String.Equals(Me._G_RETURNREMARK, value) = false) Then
				Me.OnG_RETURNREMARKChanging(value)
				Me.SendPropertyChanging
				Me._G_RETURNREMARK = value
				Me.SendPropertyChanged("G_RETURNREMARK")
				Me.OnG_RETURNREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_RETURNAPPROVE", DbType:="DateTime")>  _
	Public Property G_RETURNAPPROVE() As System.Nullable(Of Date)
		Get
			Return Me._G_RETURNAPPROVE
		End Get
		Set
			If (Me._G_RETURNAPPROVE.Equals(value) = false) Then
				Me.OnG_RETURNAPPROVEChanging(value)
				Me.SendPropertyChanging
				Me._G_RETURNAPPROVE = value
				Me.SendPropertyChanged("G_RETURNAPPROVE")
				Me.OnG_RETURNAPPROVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_RETURNNAME", DbType:="NVarChar(MAX)")>  _
	Public Property G_RETURNNAME() As String
		Get
			Return Me._G_RETURNNAME
		End Get
		Set
			If (String.Equals(Me._G_RETURNNAME, value) = false) Then
				Me.OnG_RETURNNAMEChanging(value)
				Me.SendPropertyChanging
				Me._G_RETURNNAME = value
				Me.SendPropertyChanged("G_RETURNNAME")
				Me.OnG_RETURNNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_RETURNDATEDOC", DbType:="DateTime")>  _
	Public Property G_RETURNDATEDOC() As System.Nullable(Of Date)
		Get
			Return Me._G_RETURNDATEDOC
		End Get
		Set
			If (Me._G_RETURNDATEDOC.Equals(value) = false) Then
				Me.OnG_RETURNDATEDOCChanging(value)
				Me.SendPropertyChanging
				Me._G_RETURNDATEDOC = value
				Me.SendPropertyChanged("G_RETURNDATEDOC")
				Me.OnG_RETURNDATEDOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_FINE_TYPE", DbType:="Int")>  _
	Public Property G_FINE_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._G_FINE_TYPE
		End Get
		Set
			If (Me._G_FINE_TYPE.Equals(value) = false) Then
				Me.OnG_FINE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._G_FINE_TYPE = value
				Me.SendPropertyChanged("G_FINE_TYPE")
				Me.OnG_FINE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Proj_No", DbType:="NVarChar(MAX)")>  _
	Public Property Proj_No() As String
		Get
			Return Me._Proj_No
		End Get
		Set
			If (String.Equals(Me._Proj_No, value) = false) Then
				Me.OnProj_NoChanging(value)
				Me.SendPropertyChanging
				Me._Proj_No = value
				Me.SendPropertyChanged("Proj_No")
				Me.OnProj_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_No", DbType:="NVarChar(MAX)")>  _
	Public Property G_No() As String
		Get
			Return Me._G_No
		End Get
		Set
			If (String.Equals(Me._G_No, value) = false) Then
				Me.OnG_NoChanging(value)
				Me.SendPropertyChanging
				Me._G_No = value
				Me.SendPropertyChanged("G_No")
				Me.OnG_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Percents", DbType:="Float")>  _
	Public Property Percents() As System.Nullable(Of Double)
		Get
			Return Me._Percents
		End Get
		Set
			If (Me._Percents.Equals(value) = false) Then
				Me.OnPercentsChanging(value)
				Me.SendPropertyChanging
				Me._Percents = value
				Me.SendPropertyChanged("Percents")
				Me.OnPercentsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Result", DbType:="Float")>  _
	Public Property Result() As System.Nullable(Of Double)
		Get
			Return Me._Result
		End Get
		Set
			If (Me._Result.Equals(value) = false) Then
				Me.OnResultChanging(value)
				Me.SendPropertyChanging
				Me._Result = value
				Me.SendPropertyChanged("Result")
				Me.OnResultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PO_No", DbType:="NVarChar(MAX)")>  _
	Public Property PO_No() As String
		Get
			Return Me._PO_No
		End Get
		Set
			If (String.Equals(Me._PO_No, value) = false) Then
				Me.OnPO_NoChanging(value)
				Me.SendPropertyChanging
				Me._PO_No = value
				Me.SendPropertyChanged("PO_No")
				Me.OnPO_NoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
