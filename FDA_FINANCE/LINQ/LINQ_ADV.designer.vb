'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FDA_ADV")>  _
Partial Public Class LINQ_ADVDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertFDATransaction(instance As FDATransaction)
    End Sub
  Partial Private Sub UpdateFDATransaction(instance As FDATransaction)
    End Sub
  Partial Private Sub DeleteFDATransaction(instance As FDATransaction)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("FDA_ADVConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property FDATransactions() As System.Data.Linq.Table(Of FDATransaction)
		Get
			Return Me.GetTable(Of FDATransaction)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FDATransaction")>  _
Partial Public Class FDATransaction
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Long
	
	Private _ApplicationNumber As System.Nullable(Of Integer)
	
	Private _Active As System.Nullable(Of Boolean)
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _UpdateDate As System.Nullable(Of Date)
	
	Private _AccountTypeId As System.Nullable(Of Integer)
	
	Private _CreateBy As String
	
	Private _AccountStatusId As System.Nullable(Of Integer)
	
	Private _AccountFileName As String
	
	Private _SendFDADate As System.Nullable(Of Date)
	
	Private _FDAReceiveDate As System.Nullable(Of Date)
	
	Private _Citizen_id As String
	
	Private _Latitude As String
	
	Private _Longitude As String
	
	Private _DepartmentID As System.Nullable(Of Integer)
	
	Private _Authorize_id As String
	
	Private _Officer_Infest As String
	
	Private _U1 As String
	
	Private _Ownner_id As String
	
	Private _pvcode As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnApplicationNumberChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApplicationNumberChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnUpdateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpdateDateChanged()
    End Sub
    Partial Private Sub OnAccountTypeIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAccountTypeIdChanged()
    End Sub
    Partial Private Sub OnCreateByChanging(value As String)
    End Sub
    Partial Private Sub OnCreateByChanged()
    End Sub
    Partial Private Sub OnAccountStatusIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAccountStatusIdChanged()
    End Sub
    Partial Private Sub OnAccountFileNameChanging(value As String)
    End Sub
    Partial Private Sub OnAccountFileNameChanged()
    End Sub
    Partial Private Sub OnSendFDADateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSendFDADateChanged()
    End Sub
    Partial Private Sub OnFDAReceiveDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFDAReceiveDateChanged()
    End Sub
    Partial Private Sub OnCitizen_idChanging(value As String)
    End Sub
    Partial Private Sub OnCitizen_idChanged()
    End Sub
    Partial Private Sub OnLatitudeChanging(value As String)
    End Sub
    Partial Private Sub OnLatitudeChanged()
    End Sub
    Partial Private Sub OnLongitudeChanging(value As String)
    End Sub
    Partial Private Sub OnLongitudeChanged()
    End Sub
    Partial Private Sub OnDepartmentIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDepartmentIDChanged()
    End Sub
    Partial Private Sub OnAuthorize_idChanging(value As String)
    End Sub
    Partial Private Sub OnAuthorize_idChanged()
    End Sub
    Partial Private Sub OnOfficer_InfestChanging(value As String)
    End Sub
    Partial Private Sub OnOfficer_InfestChanged()
    End Sub
    Partial Private Sub OnU1Changing(value As String)
    End Sub
    Partial Private Sub OnU1Changed()
    End Sub
    Partial Private Sub OnOwnner_idChanging(value As String)
    End Sub
    Partial Private Sub OnOwnner_idChanged()
    End Sub
    Partial Private Sub OnpvcodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvcodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApplicationNumber", DbType:="Int")>  _
	Public Property ApplicationNumber() As System.Nullable(Of Integer)
		Get
			Return Me._ApplicationNumber
		End Get
		Set
			If (Me._ApplicationNumber.Equals(value) = false) Then
				Me.OnApplicationNumberChanging(value)
				Me.SendPropertyChanging
				Me._ApplicationNumber = value
				Me.SendPropertyChanged("ApplicationNumber")
				Me.OnApplicationNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit")>  _
	Public Property Active() As System.Nullable(Of Boolean)
		Get
			Return Me._Active
		End Get
		Set
			If (Me._Active.Equals(value) = false) Then
				Me.OnActiveChanging(value)
				Me.SendPropertyChanging
				Me._Active = value
				Me.SendPropertyChanged("Active")
				Me.OnActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="Date")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateDate", DbType:="Date")>  _
	Public Property UpdateDate() As System.Nullable(Of Date)
		Get
			Return Me._UpdateDate
		End Get
		Set
			If (Me._UpdateDate.Equals(value) = false) Then
				Me.OnUpdateDateChanging(value)
				Me.SendPropertyChanging
				Me._UpdateDate = value
				Me.SendPropertyChanged("UpdateDate")
				Me.OnUpdateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountTypeId", DbType:="Int")>  _
	Public Property AccountTypeId() As System.Nullable(Of Integer)
		Get
			Return Me._AccountTypeId
		End Get
		Set
			If (Me._AccountTypeId.Equals(value) = false) Then
				Me.OnAccountTypeIdChanging(value)
				Me.SendPropertyChanging
				Me._AccountTypeId = value
				Me.SendPropertyChanged("AccountTypeId")
				Me.OnAccountTypeIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateBy", DbType:="NVarChar(MAX)")>  _
	Public Property CreateBy() As String
		Get
			Return Me._CreateBy
		End Get
		Set
			If (String.Equals(Me._CreateBy, value) = false) Then
				Me.OnCreateByChanging(value)
				Me.SendPropertyChanging
				Me._CreateBy = value
				Me.SendPropertyChanged("CreateBy")
				Me.OnCreateByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountStatusId", DbType:="Int")>  _
	Public Property AccountStatusId() As System.Nullable(Of Integer)
		Get
			Return Me._AccountStatusId
		End Get
		Set
			If (Me._AccountStatusId.Equals(value) = false) Then
				Me.OnAccountStatusIdChanging(value)
				Me.SendPropertyChanging
				Me._AccountStatusId = value
				Me.SendPropertyChanged("AccountStatusId")
				Me.OnAccountStatusIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountFileName", DbType:="NVarChar(MAX)")>  _
	Public Property AccountFileName() As String
		Get
			Return Me._AccountFileName
		End Get
		Set
			If (String.Equals(Me._AccountFileName, value) = false) Then
				Me.OnAccountFileNameChanging(value)
				Me.SendPropertyChanging
				Me._AccountFileName = value
				Me.SendPropertyChanged("AccountFileName")
				Me.OnAccountFileNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendFDADate", DbType:="Date")>  _
	Public Property SendFDADate() As System.Nullable(Of Date)
		Get
			Return Me._SendFDADate
		End Get
		Set
			If (Me._SendFDADate.Equals(value) = false) Then
				Me.OnSendFDADateChanging(value)
				Me.SendPropertyChanging
				Me._SendFDADate = value
				Me.SendPropertyChanged("SendFDADate")
				Me.OnSendFDADateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FDAReceiveDate", DbType:="DateTime")>  _
	Public Property FDAReceiveDate() As System.Nullable(Of Date)
		Get
			Return Me._FDAReceiveDate
		End Get
		Set
			If (Me._FDAReceiveDate.Equals(value) = false) Then
				Me.OnFDAReceiveDateChanging(value)
				Me.SendPropertyChanging
				Me._FDAReceiveDate = value
				Me.SendPropertyChanged("FDAReceiveDate")
				Me.OnFDAReceiveDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Citizen_id", DbType:="NVarChar(50)")>  _
	Public Property Citizen_id() As String
		Get
			Return Me._Citizen_id
		End Get
		Set
			If (String.Equals(Me._Citizen_id, value) = false) Then
				Me.OnCitizen_idChanging(value)
				Me.SendPropertyChanging
				Me._Citizen_id = value
				Me.SendPropertyChanged("Citizen_id")
				Me.OnCitizen_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Latitude", DbType:="NVarChar(MAX)")>  _
	Public Property Latitude() As String
		Get
			Return Me._Latitude
		End Get
		Set
			If (String.Equals(Me._Latitude, value) = false) Then
				Me.OnLatitudeChanging(value)
				Me.SendPropertyChanging
				Me._Latitude = value
				Me.SendPropertyChanged("Latitude")
				Me.OnLatitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Longitude", DbType:="NVarChar(MAX)")>  _
	Public Property Longitude() As String
		Get
			Return Me._Longitude
		End Get
		Set
			If (String.Equals(Me._Longitude, value) = false) Then
				Me.OnLongitudeChanging(value)
				Me.SendPropertyChanging
				Me._Longitude = value
				Me.SendPropertyChanged("Longitude")
				Me.OnLongitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepartmentID", DbType:="Int")>  _
	Public Property DepartmentID() As System.Nullable(Of Integer)
		Get
			Return Me._DepartmentID
		End Get
		Set
			If (Me._DepartmentID.Equals(value) = false) Then
				Me.OnDepartmentIDChanging(value)
				Me.SendPropertyChanging
				Me._DepartmentID = value
				Me.SendPropertyChanged("DepartmentID")
				Me.OnDepartmentIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Authorize_id", DbType:="NVarChar(50)")>  _
	Public Property Authorize_id() As String
		Get
			Return Me._Authorize_id
		End Get
		Set
			If (String.Equals(Me._Authorize_id, value) = false) Then
				Me.OnAuthorize_idChanging(value)
				Me.SendPropertyChanging
				Me._Authorize_id = value
				Me.SendPropertyChanged("Authorize_id")
				Me.OnAuthorize_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Officer_Infest", DbType:="NVarChar(50)")>  _
	Public Property Officer_Infest() As String
		Get
			Return Me._Officer_Infest
		End Get
		Set
			If (String.Equals(Me._Officer_Infest, value) = false) Then
				Me.OnOfficer_InfestChanging(value)
				Me.SendPropertyChanging
				Me._Officer_Infest = value
				Me.SendPropertyChanged("Officer_Infest")
				Me.OnOfficer_InfestChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_U1", DbType:="NVarChar(MAX)")>  _
	Public Property U1() As String
		Get
			Return Me._U1
		End Get
		Set
			If (String.Equals(Me._U1, value) = false) Then
				Me.OnU1Changing(value)
				Me.SendPropertyChanging
				Me._U1 = value
				Me.SendPropertyChanged("U1")
				Me.OnU1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ownner_id", DbType:="NVarChar(50)")>  _
	Public Property Ownner_id() As String
		Get
			Return Me._Ownner_id
		End Get
		Set
			If (String.Equals(Me._Ownner_id, value) = false) Then
				Me.OnOwnner_idChanging(value)
				Me.SendPropertyChanging
				Me._Ownner_id = value
				Me.SendPropertyChanged("Ownner_id")
				Me.OnOwnner_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvcode", DbType:="Int")>  _
	Public Property pvcode() As System.Nullable(Of Integer)
		Get
			Return Me._pvcode
		End Get
		Set
			If (Me._pvcode.Equals(value) = false) Then
				Me.OnpvcodeChanging(value)
				Me.SendPropertyChanging
				Me._pvcode = value
				Me.SendPropertyChanged("pvcode")
				Me.OnpvcodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
