'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FDA_FEE")>  _
Partial Public Class LINQ_FEEDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertfeegenno(instance As feegenno)
    End Sub
  Partial Private Sub Updatefeegenno(instance As feegenno)
    End Sub
  Partial Private Sub Deletefeegenno(instance As feegenno)
    End Sub
  Partial Private Sub Insertfeebank(instance As feebank)
    End Sub
  Partial Private Sub Updatefeebank(instance As feebank)
    End Sub
  Partial Private Sub Deletefeebank(instance As feebank)
    End Sub
  Partial Private Sub Insertfeetype(instance As feetype)
    End Sub
  Partial Private Sub Updatefeetype(instance As feetype)
    End Sub
  Partial Private Sub Deletefeetype(instance As feetype)
    End Sub
  Partial Private Sub Insertfeegenref01(instance As feegenref01)
    End Sub
  Partial Private Sub Updatefeegenref01(instance As feegenref01)
    End Sub
  Partial Private Sub Deletefeegenref01(instance As feegenref01)
    End Sub
  Partial Private Sub Insertfee_log(instance As fee_log)
    End Sub
  Partial Private Sub Updatefee_log(instance As fee_log)
    End Sub
  Partial Private Sub Deletefee_log(instance As fee_log)
    End Sub
  Partial Private Sub Insertfeedtl_fine(instance As feedtl_fine)
    End Sub
  Partial Private Sub Updatefeedtl_fine(instance As feedtl_fine)
    End Sub
  Partial Private Sub Deletefeedtl_fine(instance As feedtl_fine)
    End Sub
  Partial Private Sub Insertfeedtl(instance As feedtl)
    End Sub
  Partial Private Sub Updatefeedtl(instance As feedtl)
    End Sub
  Partial Private Sub Deletefeedtl(instance As feedtl)
    End Sub
  Partial Private Sub Insertfee(instance As fee)
    End Sub
  Partial Private Sub Updatefee(instance As fee)
    End Sub
  Partial Private Sub Deletefee(instance As fee)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("FDA_FEEConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property feegennos() As System.Data.Linq.Table(Of feegenno)
		Get
			Return Me.GetTable(Of feegenno)
		End Get
	End Property
	
	Public ReadOnly Property feebanks() As System.Data.Linq.Table(Of feebank)
		Get
			Return Me.GetTable(Of feebank)
		End Get
	End Property
	
	Public ReadOnly Property feetypes() As System.Data.Linq.Table(Of feetype)
		Get
			Return Me.GetTable(Of feetype)
		End Get
	End Property
	
	Public ReadOnly Property feegenref01s() As System.Data.Linq.Table(Of feegenref01)
		Get
			Return Me.GetTable(Of feegenref01)
		End Get
	End Property
	
	Public ReadOnly Property fee_logs() As System.Data.Linq.Table(Of fee_log)
		Get
			Return Me.GetTable(Of fee_log)
		End Get
	End Property
	
	Public ReadOnly Property feedtl_fines() As System.Data.Linq.Table(Of feedtl_fine)
		Get
			Return Me.GetTable(Of feedtl_fine)
		End Get
	End Property
	
	Public ReadOnly Property feedtls() As System.Data.Linq.Table(Of feedtl)
		Get
			Return Me.GetTable(Of feedtl)
		End Get
	End Property
	
	Public ReadOnly Property fees() As System.Data.Linq.Table(Of fee)
		Get
			Return Me.GetTable(Of fee)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.feegenno")>  _
Partial Public Class feegenno
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _dvcd As System.Nullable(Of Integer)
	
	Private _feetpcd As System.Nullable(Of Integer)
	
	Private _year As System.Nullable(Of Integer)
	
	Private _genno As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub OnfeetpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfeetpcdChanged()
    End Sub
    Partial Private Sub OnyearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnyearChanged()
    End Sub
    Partial Private Sub OngennoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngennoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="Int")>  _
	Public Property dvcd() As System.Nullable(Of Integer)
		Get
			Return Me._dvcd
		End Get
		Set
			If (Me._dvcd.Equals(value) = false) Then
				Me.OndvcdChanging(value)
				Me.SendPropertyChanging
				Me._dvcd = value
				Me.SendPropertyChanged("dvcd")
				Me.OndvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feetpcd", DbType:="Int")>  _
	Public Property feetpcd() As System.Nullable(Of Integer)
		Get
			Return Me._feetpcd
		End Get
		Set
			If (Me._feetpcd.Equals(value) = false) Then
				Me.OnfeetpcdChanging(value)
				Me.SendPropertyChanging
				Me._feetpcd = value
				Me.SendPropertyChanged("feetpcd")
				Me.OnfeetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_year", DbType:="Int")>  _
	Public Property year() As System.Nullable(Of Integer)
		Get
			Return Me._year
		End Get
		Set
			If (Me._year.Equals(value) = false) Then
				Me.OnyearChanging(value)
				Me.SendPropertyChanging
				Me._year = value
				Me.SendPropertyChanged("year")
				Me.OnyearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_genno", DbType:="Int")>  _
	Public Property genno() As System.Nullable(Of Integer)
		Get
			Return Me._genno
		End Get
		Set
			If (Me._genno.Equals(value) = false) Then
				Me.OngennoChanging(value)
				Me.SendPropertyChanging
				Me._genno = value
				Me.SendPropertyChanged("genno")
				Me.OngennoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.feebank")>  _
Partial Public Class feebank
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _dvcd As System.Nullable(Of Short)
	
	Private _ref01 As String
	
	Private _ref02 As String
	
	Private _feedate As System.Nullable(Of Date)
	
	Private _enddate As System.Nullable(Of Date)
	
	Private _lcnprnst As System.Nullable(Of Short)
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _fk_fee As System.Nullable(Of Integer)
	
	Private _fee_pay As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub Onref01Changing(value As String)
    End Sub
    Partial Private Sub Onref01Changed()
    End Sub
    Partial Private Sub Onref02Changing(value As String)
    End Sub
    Partial Private Sub Onref02Changed()
    End Sub
    Partial Private Sub OnfeedateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfeedateChanged()
    End Sub
    Partial Private Sub OnenddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnenddateChanged()
    End Sub
    Partial Private Sub OnlcnprnstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlcnprnstChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub Onfk_feeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfk_feeChanged()
    End Sub
    Partial Private Sub Onfee_payChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfee_payChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="SmallInt")>  _
	Public Property dvcd() As System.Nullable(Of Short)
		Get
			Return Me._dvcd
		End Get
		Set
			If (Me._dvcd.Equals(value) = false) Then
				Me.OndvcdChanging(value)
				Me.SendPropertyChanging
				Me._dvcd = value
				Me.SendPropertyChanged("dvcd")
				Me.OndvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref01", DbType:="VarChar(17)")>  _
	Public Property ref01() As String
		Get
			Return Me._ref01
		End Get
		Set
			If (String.Equals(Me._ref01, value) = false) Then
				Me.Onref01Changing(value)
				Me.SendPropertyChanging
				Me._ref01 = value
				Me.SendPropertyChanged("ref01")
				Me.Onref01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref02", DbType:="VarChar(17)")>  _
	Public Property ref02() As String
		Get
			Return Me._ref02
		End Get
		Set
			If (String.Equals(Me._ref02, value) = false) Then
				Me.Onref02Changing(value)
				Me.SendPropertyChanging
				Me._ref02 = value
				Me.SendPropertyChanged("ref02")
				Me.Onref02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feedate", DbType:="DateTime2")>  _
	Public Property feedate() As System.Nullable(Of Date)
		Get
			Return Me._feedate
		End Get
		Set
			If (Me._feedate.Equals(value) = false) Then
				Me.OnfeedateChanging(value)
				Me.SendPropertyChanging
				Me._feedate = value
				Me.SendPropertyChanged("feedate")
				Me.OnfeedateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_enddate", DbType:="Date")>  _
	Public Property enddate() As System.Nullable(Of Date)
		Get
			Return Me._enddate
		End Get
		Set
			If (Me._enddate.Equals(value) = false) Then
				Me.OnenddateChanging(value)
				Me.SendPropertyChanging
				Me._enddate = value
				Me.SendPropertyChanged("enddate")
				Me.OnenddateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnprnst", DbType:="SmallInt")>  _
	Public Property lcnprnst() As System.Nullable(Of Short)
		Get
			Return Me._lcnprnst
		End Get
		Set
			If (Me._lcnprnst.Equals(value) = false) Then
				Me.OnlcnprnstChanging(value)
				Me.SendPropertyChanging
				Me._lcnprnst = value
				Me.SendPropertyChanged("lcnprnst")
				Me.OnlcnprnstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fk_fee", DbType:="Int")>  _
	Public Property fk_fee() As System.Nullable(Of Integer)
		Get
			Return Me._fk_fee
		End Get
		Set
			If (Me._fk_fee.Equals(value) = false) Then
				Me.Onfk_feeChanging(value)
				Me.SendPropertyChanging
				Me._fk_fee = value
				Me.SendPropertyChanged("fk_fee")
				Me.Onfk_feeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fee_pay", DbType:="Int")>  _
	Public Property fee_pay() As System.Nullable(Of Integer)
		Get
			Return Me._fee_pay
		End Get
		Set
			If (Me._fee_pay.Equals(value) = false) Then
				Me.Onfee_payChanging(value)
				Me.SendPropertyChanging
				Me._fee_pay = value
				Me.SendPropertyChanged("fee_pay")
				Me.Onfee_payChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.feetype")>  _
Partial Public Class feetype
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _dvcd As System.Nullable(Of Short)
	
	Private _feetpcd As System.Nullable(Of Integer)
	
	Private _feetpnm As String
	
	Private _feest As System.Nullable(Of Short)
	
	Private _value As System.Nullable(Of Decimal)
	
	Private _feeabbr As String
	
	Private _feedtl As String
	
	Private _feegpcd As System.Nullable(Of Short)
	
	Private _system_name As String
	
	Private _process_id As String
	
	Private _fda_type As String
	
	Private _fda_status As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub OnfeetpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfeetpcdChanged()
    End Sub
    Partial Private Sub OnfeetpnmChanging(value As String)
    End Sub
    Partial Private Sub OnfeetpnmChanged()
    End Sub
    Partial Private Sub OnfeestChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfeestChanged()
    End Sub
    Partial Private Sub OnvalueChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnvalueChanged()
    End Sub
    Partial Private Sub OnfeeabbrChanging(value As String)
    End Sub
    Partial Private Sub OnfeeabbrChanged()
    End Sub
    Partial Private Sub OnfeedtlChanging(value As String)
    End Sub
    Partial Private Sub OnfeedtlChanged()
    End Sub
    Partial Private Sub OnfeegpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfeegpcdChanged()
    End Sub
    Partial Private Sub Onsystem_nameChanging(value As String)
    End Sub
    Partial Private Sub Onsystem_nameChanged()
    End Sub
    Partial Private Sub Onprocess_idChanging(value As String)
    End Sub
    Partial Private Sub Onprocess_idChanged()
    End Sub
    Partial Private Sub Onfda_typeChanging(value As String)
    End Sub
    Partial Private Sub Onfda_typeChanged()
    End Sub
    Partial Private Sub Onfda_statusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfda_statusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="SmallInt")>  _
	Public Property dvcd() As System.Nullable(Of Short)
		Get
			Return Me._dvcd
		End Get
		Set
			If (Me._dvcd.Equals(value) = false) Then
				Me.OndvcdChanging(value)
				Me.SendPropertyChanging
				Me._dvcd = value
				Me.SendPropertyChanged("dvcd")
				Me.OndvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feetpcd", DbType:="Int")>  _
	Public Property feetpcd() As System.Nullable(Of Integer)
		Get
			Return Me._feetpcd
		End Get
		Set
			If (Me._feetpcd.Equals(value) = false) Then
				Me.OnfeetpcdChanging(value)
				Me.SendPropertyChanging
				Me._feetpcd = value
				Me.SendPropertyChanged("feetpcd")
				Me.OnfeetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feetpnm", DbType:="VarChar(200)")>  _
	Public Property feetpnm() As String
		Get
			Return Me._feetpnm
		End Get
		Set
			If (String.Equals(Me._feetpnm, value) = false) Then
				Me.OnfeetpnmChanging(value)
				Me.SendPropertyChanging
				Me._feetpnm = value
				Me.SendPropertyChanged("feetpnm")
				Me.OnfeetpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feest", DbType:="SmallInt")>  _
	Public Property feest() As System.Nullable(Of Short)
		Get
			Return Me._feest
		End Get
		Set
			If (Me._feest.Equals(value) = false) Then
				Me.OnfeestChanging(value)
				Me.SendPropertyChanging
				Me._feest = value
				Me.SendPropertyChanged("feest")
				Me.OnfeestChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_value", DbType:="Decimal(8,2)")>  _
	Public Property value() As System.Nullable(Of Decimal)
		Get
			Return Me._value
		End Get
		Set
			If (Me._value.Equals(value) = false) Then
				Me.OnvalueChanging(value)
				Me.SendPropertyChanging
				Me._value = value
				Me.SendPropertyChanged("value")
				Me.OnvalueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feeabbr", DbType:="VarChar(4)")>  _
	Public Property feeabbr() As String
		Get
			Return Me._feeabbr
		End Get
		Set
			If (String.Equals(Me._feeabbr, value) = false) Then
				Me.OnfeeabbrChanging(value)
				Me.SendPropertyChanging
				Me._feeabbr = value
				Me.SendPropertyChanged("feeabbr")
				Me.OnfeeabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feedtl", DbType:="VarChar(40)")>  _
	Public Property feedtl() As String
		Get
			Return Me._feedtl
		End Get
		Set
			If (String.Equals(Me._feedtl, value) = false) Then
				Me.OnfeedtlChanging(value)
				Me.SendPropertyChanging
				Me._feedtl = value
				Me.SendPropertyChanged("feedtl")
				Me.OnfeedtlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feegpcd", DbType:="SmallInt")>  _
	Public Property feegpcd() As System.Nullable(Of Short)
		Get
			Return Me._feegpcd
		End Get
		Set
			If (Me._feegpcd.Equals(value) = false) Then
				Me.OnfeegpcdChanging(value)
				Me.SendPropertyChanging
				Me._feegpcd = value
				Me.SendPropertyChanged("feegpcd")
				Me.OnfeegpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_system_name", DbType:="VarChar(50)")>  _
	Public Property system_name() As String
		Get
			Return Me._system_name
		End Get
		Set
			If (String.Equals(Me._system_name, value) = false) Then
				Me.Onsystem_nameChanging(value)
				Me.SendPropertyChanging
				Me._system_name = value
				Me.SendPropertyChanged("system_name")
				Me.Onsystem_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_process_id", DbType:="VarChar(50)")>  _
	Public Property process_id() As String
		Get
			Return Me._process_id
		End Get
		Set
			If (String.Equals(Me._process_id, value) = false) Then
				Me.Onprocess_idChanging(value)
				Me.SendPropertyChanging
				Me._process_id = value
				Me.SendPropertyChanged("process_id")
				Me.Onprocess_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fda_type", DbType:="VarChar(50)")>  _
	Public Property fda_type() As String
		Get
			Return Me._fda_type
		End Get
		Set
			If (String.Equals(Me._fda_type, value) = false) Then
				Me.Onfda_typeChanging(value)
				Me.SendPropertyChanging
				Me._fda_type = value
				Me.SendPropertyChanged("fda_type")
				Me.Onfda_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fda_status", DbType:="Int")>  _
	Public Property fda_status() As System.Nullable(Of Integer)
		Get
			Return Me._fda_status
		End Get
		Set
			If (Me._fda_status.Equals(value) = false) Then
				Me.Onfda_statusChanging(value)
				Me.SendPropertyChanging
				Me._fda_status = value
				Me.SendPropertyChanged("fda_status")
				Me.Onfda_statusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.feegenref01")>  _
Partial Public Class feegenref01
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _year As System.Nullable(Of Integer)
	
	Private _genno As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnyearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnyearChanged()
    End Sub
    Partial Private Sub OngennoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngennoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_year", DbType:="Int")>  _
	Public Property year() As System.Nullable(Of Integer)
		Get
			Return Me._year
		End Get
		Set
			If (Me._year.Equals(value) = false) Then
				Me.OnyearChanging(value)
				Me.SendPropertyChanging
				Me._year = value
				Me.SendPropertyChanged("year")
				Me.OnyearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_genno", DbType:="Int")>  _
	Public Property genno() As System.Nullable(Of Integer)
		Get
			Return Me._genno
		End Get
		Set
			If (Me._genno.Equals(value) = false) Then
				Me.OngennoChanging(value)
				Me.SendPropertyChanging
				Me._genno = value
				Me.SendPropertyChanged("genno")
				Me.OngennoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.fee_logs")>  _
Partial Public Class fee_log
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ref1 As String
	
	Private _ref2 As String
	
	Private _CREATEDATE As System.Nullable(Of Date)
	
	Private _RESULT As String
	
	Private _STEP As String
	
	Private _XML_PATH As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _ACCOUNT_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub Onref1Changing(value As String)
    End Sub
    Partial Private Sub Onref1Changed()
    End Sub
    Partial Private Sub Onref2Changing(value As String)
    End Sub
    Partial Private Sub Onref2Changed()
    End Sub
    Partial Private Sub OnCREATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATEDATEChanged()
    End Sub
    Partial Private Sub OnRESULTChanging(value As String)
    End Sub
    Partial Private Sub OnRESULTChanged()
    End Sub
    Partial Private Sub OnSTEPChanging(value As String)
    End Sub
    Partial Private Sub OnSTEPChanged()
    End Sub
    Partial Private Sub OnXML_PATHChanging(value As String)
    End Sub
    Partial Private Sub OnXML_PATHChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnACCOUNT_IDChanging(value As String)
    End Sub
    Partial Private Sub OnACCOUNT_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref1", DbType:="NVarChar(MAX)")>  _
	Public Property ref1() As String
		Get
			Return Me._ref1
		End Get
		Set
			If (String.Equals(Me._ref1, value) = false) Then
				Me.Onref1Changing(value)
				Me.SendPropertyChanging
				Me._ref1 = value
				Me.SendPropertyChanged("ref1")
				Me.Onref1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref2", DbType:="NVarChar(MAX)")>  _
	Public Property ref2() As String
		Get
			Return Me._ref2
		End Get
		Set
			If (String.Equals(Me._ref2, value) = false) Then
				Me.Onref2Changing(value)
				Me.SendPropertyChanging
				Me._ref2 = value
				Me.SendPropertyChanged("ref2")
				Me.Onref2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATEDATE", DbType:="DateTime")>  _
	Public Property CREATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATEDATE
		End Get
		Set
			If (Me._CREATEDATE.Equals(value) = false) Then
				Me.OnCREATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATEDATE = value
				Me.SendPropertyChanged("CREATEDATE")
				Me.OnCREATEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESULT", DbType:="NVarChar(MAX)")>  _
	Public Property RESULT() As String
		Get
			Return Me._RESULT
		End Get
		Set
			If (String.Equals(Me._RESULT, value) = false) Then
				Me.OnRESULTChanging(value)
				Me.SendPropertyChanging
				Me._RESULT = value
				Me.SendPropertyChanged("RESULT")
				Me.OnRESULTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="STEP", Storage:="_STEP", DbType:="NVarChar(MAX)")>  _
	Public Property [STEP]() As String
		Get
			Return Me._STEP
		End Get
		Set
			If (String.Equals(Me._STEP, value) = false) Then
				Me.OnSTEPChanging(value)
				Me.SendPropertyChanging
				Me._STEP = value
				Me.SendPropertyChanged("[STEP]")
				Me.OnSTEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property XML_PATH() As String
		Get
			Return Me._XML_PATH
		End Get
		Set
			If (String.Equals(Me._XML_PATH, value) = false) Then
				Me.OnXML_PATHChanging(value)
				Me.SendPropertyChanging
				Me._XML_PATH = value
				Me.SendPropertyChanged("XML_PATH")
				Me.OnXML_PATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCOUNT_ID", DbType:="NVarChar(MAX)")>  _
	Public Property ACCOUNT_ID() As String
		Get
			Return Me._ACCOUNT_ID
		End Get
		Set
			If (String.Equals(Me._ACCOUNT_ID, value) = false) Then
				Me.OnACCOUNT_IDChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNT_ID = value
				Me.SendPropertyChanged("ACCOUNT_ID")
				Me.OnACCOUNT_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.feedtl_fine")>  _
Partial Public Class feedtl_fine
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ida As Integer
	
	Private _fk_fee As System.Nullable(Of Integer)
	
	Private _fk_id As System.Nullable(Of Integer)
	
	Private _dvcd As System.Nullable(Of Integer)
	
	Private _rcvno As String
	
	Private _lcnno As String
	
	Private _rcvno_convert As String
	
	Private _lcnno_convert As String
	
	Private _process_name As String
	
	Private _descriptions As String
	
	Private _remark As String
	
	Private _amt As System.Nullable(Of Decimal)
	
	Private _process_id As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidaChanging(value As Integer)
    End Sub
    Partial Private Sub OnidaChanged()
    End Sub
    Partial Private Sub Onfk_feeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfk_feeChanged()
    End Sub
    Partial Private Sub Onfk_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfk_idChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub Onrcvno_convertChanging(value As String)
    End Sub
    Partial Private Sub Onrcvno_convertChanged()
    End Sub
    Partial Private Sub Onlcnno_convertChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_convertChanged()
    End Sub
    Partial Private Sub Onprocess_nameChanging(value As String)
    End Sub
    Partial Private Sub Onprocess_nameChanged()
    End Sub
    Partial Private Sub OndescriptionsChanging(value As String)
    End Sub
    Partial Private Sub OndescriptionsChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub OnamtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnamtChanged()
    End Sub
    Partial Private Sub Onprocess_idChanging(value As String)
    End Sub
    Partial Private Sub Onprocess_idChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ida", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ida() As Integer
		Get
			Return Me._ida
		End Get
		Set
			If ((Me._ida = value)  _
						= false) Then
				Me.OnidaChanging(value)
				Me.SendPropertyChanging
				Me._ida = value
				Me.SendPropertyChanged("ida")
				Me.OnidaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fk_fee", DbType:="Int")>  _
	Public Property fk_fee() As System.Nullable(Of Integer)
		Get
			Return Me._fk_fee
		End Get
		Set
			If (Me._fk_fee.Equals(value) = false) Then
				Me.Onfk_feeChanging(value)
				Me.SendPropertyChanging
				Me._fk_fee = value
				Me.SendPropertyChanged("fk_fee")
				Me.Onfk_feeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fk_id", DbType:="Int")>  _
	Public Property fk_id() As System.Nullable(Of Integer)
		Get
			Return Me._fk_id
		End Get
		Set
			If (Me._fk_id.Equals(value) = false) Then
				Me.Onfk_idChanging(value)
				Me.SendPropertyChanging
				Me._fk_id = value
				Me.SendPropertyChanged("fk_id")
				Me.Onfk_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="Int")>  _
	Public Property dvcd() As System.Nullable(Of Integer)
		Get
			Return Me._dvcd
		End Get
		Set
			If (Me._dvcd.Equals(value) = false) Then
				Me.OndvcdChanging(value)
				Me.SendPropertyChanging
				Me._dvcd = value
				Me.SendPropertyChanged("dvcd")
				Me.OndvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="VarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="VarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno_convert", DbType:="VarChar(MAX)")>  _
	Public Property rcvno_convert() As String
		Get
			Return Me._rcvno_convert
		End Get
		Set
			If (String.Equals(Me._rcvno_convert, value) = false) Then
				Me.Onrcvno_convertChanging(value)
				Me.SendPropertyChanging
				Me._rcvno_convert = value
				Me.SendPropertyChanged("rcvno_convert")
				Me.Onrcvno_convertChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_convert", DbType:="VarChar(MAX)")>  _
	Public Property lcnno_convert() As String
		Get
			Return Me._lcnno_convert
		End Get
		Set
			If (String.Equals(Me._lcnno_convert, value) = false) Then
				Me.Onlcnno_convertChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_convert = value
				Me.SendPropertyChanged("lcnno_convert")
				Me.Onlcnno_convertChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_process_name", DbType:="VarChar(MAX)")>  _
	Public Property process_name() As String
		Get
			Return Me._process_name
		End Get
		Set
			If (String.Equals(Me._process_name, value) = false) Then
				Me.Onprocess_nameChanging(value)
				Me.SendPropertyChanging
				Me._process_name = value
				Me.SendPropertyChanged("process_name")
				Me.Onprocess_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descriptions", DbType:="VarChar(MAX)")>  _
	Public Property descriptions() As String
		Get
			Return Me._descriptions
		End Get
		Set
			If (String.Equals(Me._descriptions, value) = false) Then
				Me.OndescriptionsChanging(value)
				Me.SendPropertyChanging
				Me._descriptions = value
				Me.SendPropertyChanged("descriptions")
				Me.OndescriptionsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(MAX)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amt", DbType:="Decimal(12,2)")>  _
	Public Property amt() As System.Nullable(Of Decimal)
		Get
			Return Me._amt
		End Get
		Set
			If (Me._amt.Equals(value) = false) Then
				Me.OnamtChanging(value)
				Me.SendPropertyChanging
				Me._amt = value
				Me.SendPropertyChanged("amt")
				Me.OnamtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_process_id", DbType:="VarChar(50)")>  _
	Public Property process_id() As String
		Get
			Return Me._process_id
		End Get
		Set
			If (String.Equals(Me._process_id, value) = false) Then
				Me.Onprocess_idChanging(value)
				Me.SendPropertyChanging
				Me._process_id = value
				Me.SendPropertyChanged("process_id")
				Me.Onprocess_idChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.feedtl")>  _
Partial Public Class feedtl
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _dvcd As System.Nullable(Of Short)
	
	Private _feetpcd As System.Nullable(Of Integer)
	
	Private _feeno As System.Nullable(Of Integer)
	
	Private _rid As System.Nullable(Of Integer)
	
	Private _rcvabbr As String
	
	Private _rcvcd As String
	
	Private _rcvno As String
	
	Private _apppvncd As System.Nullable(Of Short)
	
	Private _appabbr As String
	
	Private _appvcd As String
	
	Private _appvno As String
	
	Private _timeno As System.Nullable(Of Integer)
	
	Private _amt As System.Nullable(Of Decimal)
	
	Private _finevalue As System.Nullable(Of Integer)
	
	Private _fk_fee As System.Nullable(Of Integer)
	
	Private _fk_id As System.Nullable(Of Integer)
	
	Private _system_name As String
	
	Private _process_id As String
	
	Private _lcnno As String
	
	Private _fk_reftype As System.Nullable(Of Integer)
	
	Private _fk_refstatus As System.Nullable(Of Integer)
	
	Private _rcvno_convert As String
	
	Private _lcnno_convert As String
	
	Private _fee_description As String
	
	Private _amt_real As System.Nullable(Of Decimal)
	
	Private _REMARK As String
	
	Private _acctype As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub OnfeetpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfeetpcdChanged()
    End Sub
    Partial Private Sub OnfeenoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfeenoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnrcvabbrChanging(value As String)
    End Sub
    Partial Private Sub OnrcvabbrChanged()
    End Sub
    Partial Private Sub OnrcvcdChanging(value As String)
    End Sub
    Partial Private Sub OnrcvcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnapppvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnapppvncdChanged()
    End Sub
    Partial Private Sub OnappabbrChanging(value As String)
    End Sub
    Partial Private Sub OnappabbrChanged()
    End Sub
    Partial Private Sub OnappvcdChanging(value As String)
    End Sub
    Partial Private Sub OnappvcdChanged()
    End Sub
    Partial Private Sub OnappvnoChanging(value As String)
    End Sub
    Partial Private Sub OnappvnoChanged()
    End Sub
    Partial Private Sub OntimenoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntimenoChanged()
    End Sub
    Partial Private Sub OnamtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnamtChanged()
    End Sub
    Partial Private Sub OnfinevalueChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfinevalueChanged()
    End Sub
    Partial Private Sub Onfk_feeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfk_feeChanged()
    End Sub
    Partial Private Sub Onfk_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfk_idChanged()
    End Sub
    Partial Private Sub Onsystem_nameChanging(value As String)
    End Sub
    Partial Private Sub Onsystem_nameChanged()
    End Sub
    Partial Private Sub Onprocess_idChanging(value As String)
    End Sub
    Partial Private Sub Onprocess_idChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub Onfk_reftypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfk_reftypeChanged()
    End Sub
    Partial Private Sub Onfk_refstatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfk_refstatusChanged()
    End Sub
    Partial Private Sub Onrcvno_convertChanging(value As String)
    End Sub
    Partial Private Sub Onrcvno_convertChanged()
    End Sub
    Partial Private Sub Onlcnno_convertChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_convertChanged()
    End Sub
    Partial Private Sub Onfee_descriptionChanging(value As String)
    End Sub
    Partial Private Sub Onfee_descriptionChanged()
    End Sub
    Partial Private Sub Onamt_realChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onamt_realChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnacctypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnacctypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="SmallInt")>  _
	Public Property dvcd() As System.Nullable(Of Short)
		Get
			Return Me._dvcd
		End Get
		Set
			If (Me._dvcd.Equals(value) = false) Then
				Me.OndvcdChanging(value)
				Me.SendPropertyChanging
				Me._dvcd = value
				Me.SendPropertyChanged("dvcd")
				Me.OndvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feetpcd", DbType:="Int")>  _
	Public Property feetpcd() As System.Nullable(Of Integer)
		Get
			Return Me._feetpcd
		End Get
		Set
			If (Me._feetpcd.Equals(value) = false) Then
				Me.OnfeetpcdChanging(value)
				Me.SendPropertyChanging
				Me._feetpcd = value
				Me.SendPropertyChanged("feetpcd")
				Me.OnfeetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feeno", DbType:="Int")>  _
	Public Property feeno() As System.Nullable(Of Integer)
		Get
			Return Me._feeno
		End Get
		Set
			If (Me._feeno.Equals(value) = false) Then
				Me.OnfeenoChanging(value)
				Me.SendPropertyChanging
				Me._feeno = value
				Me.SendPropertyChanged("feeno")
				Me.OnfeenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="Int")>  _
	Public Property rid() As System.Nullable(Of Integer)
		Get
			Return Me._rid
		End Get
		Set
			If (Me._rid.Equals(value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvabbr", DbType:="VarChar(10)")>  _
	Public Property rcvabbr() As String
		Get
			Return Me._rcvabbr
		End Get
		Set
			If (String.Equals(Me._rcvabbr, value) = false) Then
				Me.OnrcvabbrChanging(value)
				Me.SendPropertyChanging
				Me._rcvabbr = value
				Me.SendPropertyChanged("rcvabbr")
				Me.OnrcvabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvcd", DbType:="VarChar(10)")>  _
	Public Property rcvcd() As String
		Get
			Return Me._rcvcd
		End Get
		Set
			If (String.Equals(Me._rcvcd, value) = false) Then
				Me.OnrcvcdChanging(value)
				Me.SendPropertyChanging
				Me._rcvcd = value
				Me.SendPropertyChanged("rcvcd")
				Me.OnrcvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="VarChar(50)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apppvncd", DbType:="SmallInt")>  _
	Public Property apppvncd() As System.Nullable(Of Short)
		Get
			Return Me._apppvncd
		End Get
		Set
			If (Me._apppvncd.Equals(value) = false) Then
				Me.OnapppvncdChanging(value)
				Me.SendPropertyChanging
				Me._apppvncd = value
				Me.SendPropertyChanged("apppvncd")
				Me.OnapppvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appabbr", DbType:="VarChar(10)")>  _
	Public Property appabbr() As String
		Get
			Return Me._appabbr
		End Get
		Set
			If (String.Equals(Me._appabbr, value) = false) Then
				Me.OnappabbrChanging(value)
				Me.SendPropertyChanging
				Me._appabbr = value
				Me.SendPropertyChanged("appabbr")
				Me.OnappabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appvcd", DbType:="VarChar(10)")>  _
	Public Property appvcd() As String
		Get
			Return Me._appvcd
		End Get
		Set
			If (String.Equals(Me._appvcd, value) = false) Then
				Me.OnappvcdChanging(value)
				Me.SendPropertyChanging
				Me._appvcd = value
				Me.SendPropertyChanged("appvcd")
				Me.OnappvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appvno", DbType:="VarChar(MAX)")>  _
	Public Property appvno() As String
		Get
			Return Me._appvno
		End Get
		Set
			If (String.Equals(Me._appvno, value) = false) Then
				Me.OnappvnoChanging(value)
				Me.SendPropertyChanging
				Me._appvno = value
				Me.SendPropertyChanged("appvno")
				Me.OnappvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_timeno", DbType:="Int")>  _
	Public Property timeno() As System.Nullable(Of Integer)
		Get
			Return Me._timeno
		End Get
		Set
			If (Me._timeno.Equals(value) = false) Then
				Me.OntimenoChanging(value)
				Me.SendPropertyChanging
				Me._timeno = value
				Me.SendPropertyChanged("timeno")
				Me.OntimenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amt", DbType:="Decimal(12,2)")>  _
	Public Property amt() As System.Nullable(Of Decimal)
		Get
			Return Me._amt
		End Get
		Set
			If (Me._amt.Equals(value) = false) Then
				Me.OnamtChanging(value)
				Me.SendPropertyChanging
				Me._amt = value
				Me.SendPropertyChanged("amt")
				Me.OnamtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_finevalue", DbType:="Int")>  _
	Public Property finevalue() As System.Nullable(Of Integer)
		Get
			Return Me._finevalue
		End Get
		Set
			If (Me._finevalue.Equals(value) = false) Then
				Me.OnfinevalueChanging(value)
				Me.SendPropertyChanging
				Me._finevalue = value
				Me.SendPropertyChanged("finevalue")
				Me.OnfinevalueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fk_fee", DbType:="Int")>  _
	Public Property fk_fee() As System.Nullable(Of Integer)
		Get
			Return Me._fk_fee
		End Get
		Set
			If (Me._fk_fee.Equals(value) = false) Then
				Me.Onfk_feeChanging(value)
				Me.SendPropertyChanging
				Me._fk_fee = value
				Me.SendPropertyChanged("fk_fee")
				Me.Onfk_feeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fk_id", DbType:="Int")>  _
	Public Property fk_id() As System.Nullable(Of Integer)
		Get
			Return Me._fk_id
		End Get
		Set
			If (Me._fk_id.Equals(value) = false) Then
				Me.Onfk_idChanging(value)
				Me.SendPropertyChanging
				Me._fk_id = value
				Me.SendPropertyChanged("fk_id")
				Me.Onfk_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_system_name", DbType:="VarChar(50)")>  _
	Public Property system_name() As String
		Get
			Return Me._system_name
		End Get
		Set
			If (String.Equals(Me._system_name, value) = false) Then
				Me.Onsystem_nameChanging(value)
				Me.SendPropertyChanging
				Me._system_name = value
				Me.SendPropertyChanged("system_name")
				Me.Onsystem_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_process_id", DbType:="VarChar(50)")>  _
	Public Property process_id() As String
		Get
			Return Me._process_id
		End Get
		Set
			If (String.Equals(Me._process_id, value) = false) Then
				Me.Onprocess_idChanging(value)
				Me.SendPropertyChanging
				Me._process_id = value
				Me.SendPropertyChanged("process_id")
				Me.Onprocess_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="VarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fk_reftype", DbType:="Int")>  _
	Public Property fk_reftype() As System.Nullable(Of Integer)
		Get
			Return Me._fk_reftype
		End Get
		Set
			If (Me._fk_reftype.Equals(value) = false) Then
				Me.Onfk_reftypeChanging(value)
				Me.SendPropertyChanging
				Me._fk_reftype = value
				Me.SendPropertyChanged("fk_reftype")
				Me.Onfk_reftypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fk_refstatus", DbType:="Int")>  _
	Public Property fk_refstatus() As System.Nullable(Of Integer)
		Get
			Return Me._fk_refstatus
		End Get
		Set
			If (Me._fk_refstatus.Equals(value) = false) Then
				Me.Onfk_refstatusChanging(value)
				Me.SendPropertyChanging
				Me._fk_refstatus = value
				Me.SendPropertyChanged("fk_refstatus")
				Me.Onfk_refstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno_convert", DbType:="VarChar(MAX)")>  _
	Public Property rcvno_convert() As String
		Get
			Return Me._rcvno_convert
		End Get
		Set
			If (String.Equals(Me._rcvno_convert, value) = false) Then
				Me.Onrcvno_convertChanging(value)
				Me.SendPropertyChanging
				Me._rcvno_convert = value
				Me.SendPropertyChanged("rcvno_convert")
				Me.Onrcvno_convertChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_convert", DbType:="VarChar(MAX)")>  _
	Public Property lcnno_convert() As String
		Get
			Return Me._lcnno_convert
		End Get
		Set
			If (String.Equals(Me._lcnno_convert, value) = false) Then
				Me.Onlcnno_convertChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_convert = value
				Me.SendPropertyChanged("lcnno_convert")
				Me.Onlcnno_convertChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fee_description", DbType:="VarChar(MAX)")>  _
	Public Property fee_description() As String
		Get
			Return Me._fee_description
		End Get
		Set
			If (String.Equals(Me._fee_description, value) = false) Then
				Me.Onfee_descriptionChanging(value)
				Me.SendPropertyChanging
				Me._fee_description = value
				Me.SendPropertyChanged("fee_description")
				Me.Onfee_descriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amt_real", DbType:="Decimal(12,2)")>  _
	Public Property amt_real() As System.Nullable(Of Decimal)
		Get
			Return Me._amt_real
		End Get
		Set
			If (Me._amt_real.Equals(value) = false) Then
				Me.Onamt_realChanging(value)
				Me.SendPropertyChanging
				Me._amt_real = value
				Me.SendPropertyChanged("amt_real")
				Me.Onamt_realChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_acctype", DbType:="Int")>  _
	Public Property acctype() As System.Nullable(Of Integer)
		Get
			Return Me._acctype
		End Get
		Set
			If (Me._acctype.Equals(value) = false) Then
				Me.OnacctypeChanging(value)
				Me.SendPropertyChanging
				Me._acctype = value
				Me.SendPropertyChanged("acctype")
				Me.OnacctypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.fee")>  _
Partial Public Class fee
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _dvcd As System.Nullable(Of Short)
	
	Private _feetpcd As System.Nullable(Of Integer)
	
	Private _feeno As System.Nullable(Of Integer)
	
	Private _feeabbr As String
	
	Private _feedate As System.Nullable(Of Date)
	
	Private _ref01 As String
	
	Private _ref02 As String
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _lctnmcd As System.Nullable(Of Integer)
	
	Private _lcnscd As System.Nullable(Of Integer)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _prnfeest As System.Nullable(Of Short)
	
	Private _rcptst As System.Nullable(Of Short)
	
	Private _rcptyear As System.Nullable(Of Integer)
	
	Private _rcptno As System.Nullable(Of Integer)
	
	Private _rcptdate As System.Nullable(Of Date)
	
	Private _feestfcd As System.Nullable(Of Integer)
	
	Private _remark As String
	
	Private _expdate As System.Nullable(Of Date)
	
	Private _enddate As System.Nullable(Of Date)
	
	Private _cncstfcd As System.Nullable(Of Integer)
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _pvnbookno As String
	
	Private _pvnrcptno As String
	
	Private _feest As System.Nullable(Of Short)
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _file_feename As String
	
	Private _identify As String
	
	Private _company_name As String
	
	Private _company_addr As String
	
	Private _company_type As System.Nullable(Of Integer)
	
	Private _acc_type As System.Nullable(Of Integer)
	
	Private _create_identify As String
	
	Private _create_date As System.Nullable(Of Date)
	
	Private _staff_identify As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub OnfeetpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfeetpcdChanged()
    End Sub
    Partial Private Sub OnfeenoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfeenoChanged()
    End Sub
    Partial Private Sub OnfeeabbrChanging(value As String)
    End Sub
    Partial Private Sub OnfeeabbrChanged()
    End Sub
    Partial Private Sub OnfeedateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfeedateChanged()
    End Sub
    Partial Private Sub Onref01Changing(value As String)
    End Sub
    Partial Private Sub Onref01Changed()
    End Sub
    Partial Private Sub Onref02Changing(value As String)
    End Sub
    Partial Private Sub Onref02Changed()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnprnfeestChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnprnfeestChanged()
    End Sub
    Partial Private Sub OnrcptstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnrcptstChanged()
    End Sub
    Partial Private Sub OnrcptyearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcptyearChanged()
    End Sub
    Partial Private Sub OnrcptnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcptnoChanged()
    End Sub
    Partial Private Sub OnrcptdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcptdateChanged()
    End Sub
    Partial Private Sub OnfeestfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfeestfcdChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub OnexpdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnexpdateChanged()
    End Sub
    Partial Private Sub OnenddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnenddateChanged()
    End Sub
    Partial Private Sub OncncstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncncstfcdChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OnpvnbooknoChanging(value As String)
    End Sub
    Partial Private Sub OnpvnbooknoChanged()
    End Sub
    Partial Private Sub OnpvnrcptnoChanging(value As String)
    End Sub
    Partial Private Sub OnpvnrcptnoChanged()
    End Sub
    Partial Private Sub OnfeestChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfeestChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub Onfile_feenameChanging(value As String)
    End Sub
    Partial Private Sub Onfile_feenameChanged()
    End Sub
    Partial Private Sub OnidentifyChanging(value As String)
    End Sub
    Partial Private Sub OnidentifyChanged()
    End Sub
    Partial Private Sub Oncompany_nameChanging(value As String)
    End Sub
    Partial Private Sub Oncompany_nameChanged()
    End Sub
    Partial Private Sub Oncompany_addrChanging(value As String)
    End Sub
    Partial Private Sub Oncompany_addrChanged()
    End Sub
    Partial Private Sub Oncompany_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncompany_typeChanged()
    End Sub
    Partial Private Sub Onacc_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onacc_typeChanged()
    End Sub
    Partial Private Sub Oncreate_identifyChanging(value As String)
    End Sub
    Partial Private Sub Oncreate_identifyChanged()
    End Sub
    Partial Private Sub Oncreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreate_dateChanged()
    End Sub
    Partial Private Sub Onstaff_identifyChanging(value As String)
    End Sub
    Partial Private Sub Onstaff_identifyChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="SmallInt")>  _
	Public Property dvcd() As System.Nullable(Of Short)
		Get
			Return Me._dvcd
		End Get
		Set
			If (Me._dvcd.Equals(value) = false) Then
				Me.OndvcdChanging(value)
				Me.SendPropertyChanging
				Me._dvcd = value
				Me.SendPropertyChanged("dvcd")
				Me.OndvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feetpcd", DbType:="Int")>  _
	Public Property feetpcd() As System.Nullable(Of Integer)
		Get
			Return Me._feetpcd
		End Get
		Set
			If (Me._feetpcd.Equals(value) = false) Then
				Me.OnfeetpcdChanging(value)
				Me.SendPropertyChanging
				Me._feetpcd = value
				Me.SendPropertyChanged("feetpcd")
				Me.OnfeetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feeno", DbType:="Int")>  _
	Public Property feeno() As System.Nullable(Of Integer)
		Get
			Return Me._feeno
		End Get
		Set
			If (Me._feeno.Equals(value) = false) Then
				Me.OnfeenoChanging(value)
				Me.SendPropertyChanging
				Me._feeno = value
				Me.SendPropertyChanged("feeno")
				Me.OnfeenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feeabbr", DbType:="VarChar(4)")>  _
	Public Property feeabbr() As String
		Get
			Return Me._feeabbr
		End Get
		Set
			If (String.Equals(Me._feeabbr, value) = false) Then
				Me.OnfeeabbrChanging(value)
				Me.SendPropertyChanging
				Me._feeabbr = value
				Me.SendPropertyChanged("feeabbr")
				Me.OnfeeabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feedate", DbType:="DateTime2")>  _
	Public Property feedate() As System.Nullable(Of Date)
		Get
			Return Me._feedate
		End Get
		Set
			If (Me._feedate.Equals(value) = false) Then
				Me.OnfeedateChanging(value)
				Me.SendPropertyChanging
				Me._feedate = value
				Me.SendPropertyChanged("feedate")
				Me.OnfeedateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref01", DbType:="VarChar(18)")>  _
	Public Property ref01() As String
		Get
			Return Me._ref01
		End Get
		Set
			If (String.Equals(Me._ref01, value) = false) Then
				Me.Onref01Changing(value)
				Me.SendPropertyChanging
				Me._ref01 = value
				Me.SendPropertyChanged("ref01")
				Me.Onref01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref02", DbType:="VarChar(18)")>  _
	Public Property ref02() As String
		Get
			Return Me._ref02
		End Get
		Set
			If (String.Equals(Me._ref02, value) = false) Then
				Me.Onref02Changing(value)
				Me.SendPropertyChanging
				Me._ref02 = value
				Me.SendPropertyChanged("ref02")
				Me.Onref02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int")>  _
	Public Property lctnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (Me._lctnmcd.Equals(value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int")>  _
	Public Property lcnscd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnscd
		End Get
		Set
			If (Me._lcnscd.Equals(value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prnfeest", DbType:="SmallInt")>  _
	Public Property prnfeest() As System.Nullable(Of Short)
		Get
			Return Me._prnfeest
		End Get
		Set
			If (Me._prnfeest.Equals(value) = false) Then
				Me.OnprnfeestChanging(value)
				Me.SendPropertyChanging
				Me._prnfeest = value
				Me.SendPropertyChanged("prnfeest")
				Me.OnprnfeestChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcptst", DbType:="SmallInt")>  _
	Public Property rcptst() As System.Nullable(Of Short)
		Get
			Return Me._rcptst
		End Get
		Set
			If (Me._rcptst.Equals(value) = false) Then
				Me.OnrcptstChanging(value)
				Me.SendPropertyChanging
				Me._rcptst = value
				Me.SendPropertyChanged("rcptst")
				Me.OnrcptstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcptyear", DbType:="Int")>  _
	Public Property rcptyear() As System.Nullable(Of Integer)
		Get
			Return Me._rcptyear
		End Get
		Set
			If (Me._rcptyear.Equals(value) = false) Then
				Me.OnrcptyearChanging(value)
				Me.SendPropertyChanging
				Me._rcptyear = value
				Me.SendPropertyChanged("rcptyear")
				Me.OnrcptyearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcptno", DbType:="Int")>  _
	Public Property rcptno() As System.Nullable(Of Integer)
		Get
			Return Me._rcptno
		End Get
		Set
			If (Me._rcptno.Equals(value) = false) Then
				Me.OnrcptnoChanging(value)
				Me.SendPropertyChanging
				Me._rcptno = value
				Me.SendPropertyChanged("rcptno")
				Me.OnrcptnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcptdate", DbType:="Date")>  _
	Public Property rcptdate() As System.Nullable(Of Date)
		Get
			Return Me._rcptdate
		End Get
		Set
			If (Me._rcptdate.Equals(value) = false) Then
				Me.OnrcptdateChanging(value)
				Me.SendPropertyChanging
				Me._rcptdate = value
				Me.SendPropertyChanged("rcptdate")
				Me.OnrcptdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feestfcd", DbType:="Int")>  _
	Public Property feestfcd() As System.Nullable(Of Integer)
		Get
			Return Me._feestfcd
		End Get
		Set
			If (Me._feestfcd.Equals(value) = false) Then
				Me.OnfeestfcdChanging(value)
				Me.SendPropertyChanging
				Me._feestfcd = value
				Me.SendPropertyChanged("feestfcd")
				Me.OnfeestfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(40)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expdate", DbType:="Date")>  _
	Public Property expdate() As System.Nullable(Of Date)
		Get
			Return Me._expdate
		End Get
		Set
			If (Me._expdate.Equals(value) = false) Then
				Me.OnexpdateChanging(value)
				Me.SendPropertyChanging
				Me._expdate = value
				Me.SendPropertyChanged("expdate")
				Me.OnexpdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_enddate", DbType:="Date")>  _
	Public Property enddate() As System.Nullable(Of Date)
		Get
			Return Me._enddate
		End Get
		Set
			If (Me._enddate.Equals(value) = false) Then
				Me.OnenddateChanging(value)
				Me.SendPropertyChanging
				Me._enddate = value
				Me.SendPropertyChanged("enddate")
				Me.OnenddateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncstfcd", DbType:="Int")>  _
	Public Property cncstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._cncstfcd
		End Get
		Set
			If (Me._cncstfcd.Equals(value) = false) Then
				Me.OncncstfcdChanging(value)
				Me.SendPropertyChanging
				Me._cncstfcd = value
				Me.SendPropertyChanged("cncstfcd")
				Me.OncncstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="Date")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnbookno", DbType:="VarChar(20)")>  _
	Public Property pvnbookno() As String
		Get
			Return Me._pvnbookno
		End Get
		Set
			If (String.Equals(Me._pvnbookno, value) = false) Then
				Me.OnpvnbooknoChanging(value)
				Me.SendPropertyChanging
				Me._pvnbookno = value
				Me.SendPropertyChanged("pvnbookno")
				Me.OnpvnbooknoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnrcptno", DbType:="VarChar(20)")>  _
	Public Property pvnrcptno() As String
		Get
			Return Me._pvnrcptno
		End Get
		Set
			If (String.Equals(Me._pvnrcptno, value) = false) Then
				Me.OnpvnrcptnoChanging(value)
				Me.SendPropertyChanging
				Me._pvnrcptno = value
				Me.SendPropertyChanged("pvnrcptno")
				Me.OnpvnrcptnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feest", DbType:="SmallInt")>  _
	Public Property feest() As System.Nullable(Of Short)
		Get
			Return Me._feest
		End Get
		Set
			If (Me._feest.Equals(value) = false) Then
				Me.OnfeestChanging(value)
				Me.SendPropertyChanging
				Me._feest = value
				Me.SendPropertyChanged("feest")
				Me.OnfeestChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_file_feename", DbType:="VarChar(MAX)")>  _
	Public Property file_feename() As String
		Get
			Return Me._file_feename
		End Get
		Set
			If (String.Equals(Me._file_feename, value) = false) Then
				Me.Onfile_feenameChanging(value)
				Me.SendPropertyChanging
				Me._file_feename = value
				Me.SendPropertyChanged("file_feename")
				Me.Onfile_feenameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_identify", DbType:="VarChar(50)")>  _
	Public Property identify() As String
		Get
			Return Me._identify
		End Get
		Set
			If (String.Equals(Me._identify, value) = false) Then
				Me.OnidentifyChanging(value)
				Me.SendPropertyChanging
				Me._identify = value
				Me.SendPropertyChanged("identify")
				Me.OnidentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_company_name", DbType:="VarChar(MAX)")>  _
	Public Property company_name() As String
		Get
			Return Me._company_name
		End Get
		Set
			If (String.Equals(Me._company_name, value) = false) Then
				Me.Oncompany_nameChanging(value)
				Me.SendPropertyChanging
				Me._company_name = value
				Me.SendPropertyChanged("company_name")
				Me.Oncompany_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_company_addr", DbType:="VarChar(MAX)")>  _
	Public Property company_addr() As String
		Get
			Return Me._company_addr
		End Get
		Set
			If (String.Equals(Me._company_addr, value) = false) Then
				Me.Oncompany_addrChanging(value)
				Me.SendPropertyChanging
				Me._company_addr = value
				Me.SendPropertyChanged("company_addr")
				Me.Oncompany_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_company_type", DbType:="Int")>  _
	Public Property company_type() As System.Nullable(Of Integer)
		Get
			Return Me._company_type
		End Get
		Set
			If (Me._company_type.Equals(value) = false) Then
				Me.Oncompany_typeChanging(value)
				Me.SendPropertyChanging
				Me._company_type = value
				Me.SendPropertyChanged("company_type")
				Me.Oncompany_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_acc_type", DbType:="Int")>  _
	Public Property acc_type() As System.Nullable(Of Integer)
		Get
			Return Me._acc_type
		End Get
		Set
			If (Me._acc_type.Equals(value) = false) Then
				Me.Onacc_typeChanging(value)
				Me.SendPropertyChanging
				Me._acc_type = value
				Me.SendPropertyChanged("acc_type")
				Me.Onacc_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_create_identify", DbType:="VarChar(50)")>  _
	Public Property create_identify() As String
		Get
			Return Me._create_identify
		End Get
		Set
			If (String.Equals(Me._create_identify, value) = false) Then
				Me.Oncreate_identifyChanging(value)
				Me.SendPropertyChanging
				Me._create_identify = value
				Me.SendPropertyChanged("create_identify")
				Me.Oncreate_identifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_create_date", DbType:="DateTime")>  _
	Public Property create_date() As System.Nullable(Of Date)
		Get
			Return Me._create_date
		End Get
		Set
			If (Me._create_date.Equals(value) = false) Then
				Me.Oncreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._create_date = value
				Me.SendPropertyChanged("create_date")
				Me.Oncreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staff_identify", DbType:="VarChar(50)")>  _
	Public Property staff_identify() As String
		Get
			Return Me._staff_identify
		End Get
		Set
			If (String.Equals(Me._staff_identify, value) = false) Then
				Me.Onstaff_identifyChanging(value)
				Me.SendPropertyChanging
				Me._staff_identify = value
				Me.SendPropertyChanged("staff_identify")
				Me.Onstaff_identifyChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
