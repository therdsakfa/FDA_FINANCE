'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FDA_BG")>  _
Partial Public Class LINQ_MASDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMAS_OPERATION_TYPE(instance As MAS_OPERATION_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_OPERATION_TYPE(instance As MAS_OPERATION_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_OPERATION_TYPE(instance As MAS_OPERATION_TYPE)
    End Sub
  Partial Private Sub InsertMAS_SEND_MONEY_DEPARTMENT(instance As MAS_SEND_MONEY_DEPARTMENT)
    End Sub
  Partial Private Sub UpdateMAS_SEND_MONEY_DEPARTMENT(instance As MAS_SEND_MONEY_DEPARTMENT)
    End Sub
  Partial Private Sub DeleteMAS_SEND_MONEY_DEPARTMENT(instance As MAS_SEND_MONEY_DEPARTMENT)
    End Sub
  Partial Private Sub InsertMAS_USER_PERMISSION_DETAIL(instance As MAS_USER_PERMISSION_DETAIL)
    End Sub
  Partial Private Sub UpdateMAS_USER_PERMISSION_DETAIL(instance As MAS_USER_PERMISSION_DETAIL)
    End Sub
  Partial Private Sub DeleteMAS_USER_PERMISSION_DETAIL(instance As MAS_USER_PERMISSION_DETAIL)
    End Sub
  Partial Private Sub InsertOVERLAP_DETAIL(instance As OVERLAP_DETAIL)
    End Sub
  Partial Private Sub UpdateOVERLAP_DETAIL(instance As OVERLAP_DETAIL)
    End Sub
  Partial Private Sub DeleteOVERLAP_DETAIL(instance As OVERLAP_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_PAYLIST(instance As MAS_PAYLIST)
    End Sub
  Partial Private Sub UpdateMAS_PAYLIST(instance As MAS_PAYLIST)
    End Sub
  Partial Private Sub DeleteMAS_PAYLIST(instance As MAS_PAYLIST)
    End Sub
  Partial Private Sub InsertMAS_WELFARE(instance As MAS_WELFARE)
    End Sub
  Partial Private Sub UpdateMAS_WELFARE(instance As MAS_WELFARE)
    End Sub
  Partial Private Sub DeleteMAS_WELFARE(instance As MAS_WELFARE)
    End Sub
  Partial Private Sub InsertMAS_USER(instance As MAS_USER)
    End Sub
  Partial Private Sub UpdateMAS_USER(instance As MAS_USER)
    End Sub
  Partial Private Sub DeleteMAS_USER(instance As MAS_USER)
    End Sub
  Partial Private Sub InsertMAS_MONEY_TYPE_NODE(instance As MAS_MONEY_TYPE_NODE)
    End Sub
  Partial Private Sub UpdateMAS_MONEY_TYPE_NODE(instance As MAS_MONEY_TYPE_NODE)
    End Sub
  Partial Private Sub DeleteMAS_MONEY_TYPE_NODE(instance As MAS_MONEY_TYPE_NODE)
    End Sub
  Partial Private Sub InsertMAS_MONEY_TYPE(instance As MAS_MONEY_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_MONEY_TYPE(instance As MAS_MONEY_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_MONEY_TYPE(instance As MAS_MONEY_TYPE)
    End Sub
  Partial Private Sub InsertMAS_K_TYPE(instance As MAS_K_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_K_TYPE(instance As MAS_K_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_K_TYPE(instance As MAS_K_TYPE)
    End Sub
  Partial Private Sub InsertMAS_DEPARTMENT_NODE(instance As MAS_DEPARTMENT_NODE)
    End Sub
  Partial Private Sub UpdateMAS_DEPARTMENT_NODE(instance As MAS_DEPARTMENT_NODE)
    End Sub
  Partial Private Sub DeleteMAS_DEPARTMENT_NODE(instance As MAS_DEPARTMENT_NODE)
    End Sub
  Partial Private Sub InsertMAS_DEPARTMENT(instance As MAS_DEPARTMENT)
    End Sub
  Partial Private Sub UpdateMAS_DEPARTMENT(instance As MAS_DEPARTMENT)
    End Sub
  Partial Private Sub DeleteMAS_DEPARTMENT(instance As MAS_DEPARTMENT)
    End Sub
  Partial Private Sub InsertOVERLAP_HEAD(instance As OVERLAP_HEAD)
    End Sub
  Partial Private Sub UpdateOVERLAP_HEAD(instance As OVERLAP_HEAD)
    End Sub
  Partial Private Sub DeleteOVERLAP_HEAD(instance As OVERLAP_HEAD)
    End Sub
  Partial Private Sub InsertMAS_RETURN_DESCRIPTION(instance As MAS_RETURN_DESCRIPTION)
    End Sub
  Partial Private Sub UpdateMAS_RETURN_DESCRIPTION(instance As MAS_RETURN_DESCRIPTION)
    End Sub
  Partial Private Sub DeleteMAS_RETURN_DESCRIPTION(instance As MAS_RETURN_DESCRIPTION)
    End Sub
  Partial Private Sub InsertMAS_SUB_BUDGET(instance As MAS_SUB_BUDGET)
    End Sub
  Partial Private Sub UpdateMAS_SUB_BUDGET(instance As MAS_SUB_BUDGET)
    End Sub
  Partial Private Sub DeleteMAS_SUB_BUDGET(instance As MAS_SUB_BUDGET)
    End Sub
  Partial Private Sub InsertMAS_IMPORTANT_USER(instance As MAS_IMPORTANT_USER)
    End Sub
  Partial Private Sub UpdateMAS_IMPORTANT_USER(instance As MAS_IMPORTANT_USER)
    End Sub
  Partial Private Sub DeleteMAS_IMPORTANT_USER(instance As MAS_IMPORTANT_USER)
    End Sub
  Partial Private Sub InsertMAS_MENU(instance As MAS_MENU)
    End Sub
  Partial Private Sub UpdateMAS_MENU(instance As MAS_MENU)
    End Sub
  Partial Private Sub DeleteMAS_MENU(instance As MAS_MENU)
    End Sub
  Partial Private Sub InsertTBL_PRINT_CHECK_HISTORY(instance As TBL_PRINT_CHECK_HISTORY)
    End Sub
  Partial Private Sub UpdateTBL_PRINT_CHECK_HISTORY(instance As TBL_PRINT_CHECK_HISTORY)
    End Sub
  Partial Private Sub DeleteTBL_PRINT_CHECK_HISTORY(instance As TBL_PRINT_CHECK_HISTORY)
    End Sub
  Partial Private Sub InsertMAS_CUSTOMER_TYPE(instance As MAS_CUSTOMER_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_CUSTOMER_TYPE(instance As MAS_CUSTOMER_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_CUSTOMER_TYPE(instance As MAS_CUSTOMER_TYPE)
    End Sub
  Partial Private Sub InsertTBL_LOG(instance As TBL_LOG)
    End Sub
  Partial Private Sub UpdateTBL_LOG(instance As TBL_LOG)
    End Sub
  Partial Private Sub DeleteTBL_LOG(instance As TBL_LOG)
    End Sub
  Partial Private Sub InsertTBL_TEMP_BG(instance As TBL_TEMP_BG)
    End Sub
  Partial Private Sub UpdateTBL_TEMP_BG(instance As TBL_TEMP_BG)
    End Sub
  Partial Private Sub DeleteTBL_TEMP_BG(instance As TBL_TEMP_BG)
    End Sub
  Partial Private Sub InsertMAS_MARGIN_RECEIVE(instance As MAS_MARGIN_RECEIVE)
    End Sub
  Partial Private Sub UpdateMAS_MARGIN_RECEIVE(instance As MAS_MARGIN_RECEIVE)
    End Sub
  Partial Private Sub DeleteMAS_MARGIN_RECEIVE(instance As MAS_MARGIN_RECEIVE)
    End Sub
  Partial Private Sub InsertBUDGET_PLAN_NODE(instance As BUDGET_PLAN_NODE)
    End Sub
  Partial Private Sub UpdateBUDGET_PLAN_NODE(instance As BUDGET_PLAN_NODE)
    End Sub
  Partial Private Sub DeleteBUDGET_PLAN_NODE(instance As BUDGET_PLAN_NODE)
    End Sub
  Partial Private Sub InsertBUDGET_PLAN(instance As BUDGET_PLAN)
    End Sub
  Partial Private Sub UpdateBUDGET_PLAN(instance As BUDGET_PLAN)
    End Sub
  Partial Private Sub DeleteBUDGET_PLAN(instance As BUDGET_PLAN)
    End Sub
  Partial Private Sub InsertTBL_PERSON_IN_REPORT(instance As TBL_PERSON_IN_REPORT)
    End Sub
  Partial Private Sub UpdateTBL_PERSON_IN_REPORT(instance As TBL_PERSON_IN_REPORT)
    End Sub
  Partial Private Sub DeleteTBL_PERSON_IN_REPORT(instance As TBL_PERSON_IN_REPORT)
    End Sub
  Partial Private Sub InsertMAS_LEVEL(instance As MAS_LEVEL)
    End Sub
  Partial Private Sub UpdateMAS_LEVEL(instance As MAS_LEVEL)
    End Sub
  Partial Private Sub DeleteMAS_LEVEL(instance As MAS_LEVEL)
    End Sub
  Partial Private Sub InsertMAS_PERSON_TYPE(instance As MAS_PERSON_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_PERSON_TYPE(instance As MAS_PERSON_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_PERSON_TYPE(instance As MAS_PERSON_TYPE)
    End Sub
  Partial Private Sub InsertMAS_PERSONAL_Tb2(instance As MAS_PERSONAL_Tb2)
    End Sub
  Partial Private Sub UpdateMAS_PERSONAL_Tb2(instance As MAS_PERSONAL_Tb2)
    End Sub
  Partial Private Sub DeleteMAS_PERSONAL_Tb2(instance As MAS_PERSONAL_Tb2)
    End Sub
  Partial Private Sub InsertMAS_POSITION(instance As MAS_POSITION)
    End Sub
  Partial Private Sub UpdateMAS_POSITION(instance As MAS_POSITION)
    End Sub
  Partial Private Sub DeleteMAS_POSITION(instance As MAS_POSITION)
    End Sub
  Partial Private Sub InsertMAS_PREFIX(instance As MAS_PREFIX)
    End Sub
  Partial Private Sub UpdateMAS_PREFIX(instance As MAS_PREFIX)
    End Sub
  Partial Private Sub DeleteMAS_PREFIX(instance As MAS_PREFIX)
    End Sub
  Partial Private Sub InsertMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub UpdateMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub DeleteMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub InsertTRANSACTION_DOWNLOAD(instance As TRANSACTION_DOWNLOAD)
    End Sub
  Partial Private Sub UpdateTRANSACTION_DOWNLOAD(instance As TRANSACTION_DOWNLOAD)
    End Sub
  Partial Private Sub DeleteTRANSACTION_DOWNLOAD(instance As TRANSACTION_DOWNLOAD)
    End Sub
  Partial Private Sub InsertTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  Partial Private Sub UpdateTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  Partial Private Sub DeleteTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  Partial Private Sub InsertMAS_FAMILY(instance As MAS_FAMILY)
    End Sub
  Partial Private Sub UpdateMAS_FAMILY(instance As MAS_FAMILY)
    End Sub
  Partial Private Sub DeleteMAS_FAMILY(instance As MAS_FAMILY)
    End Sub
  Partial Private Sub InsertMAS_MENU_AUTO(instance As MAS_MENU_AUTO)
    End Sub
  Partial Private Sub UpdateMAS_MENU_AUTO(instance As MAS_MENU_AUTO)
    End Sub
  Partial Private Sub DeleteMAS_MENU_AUTO(instance As MAS_MENU_AUTO)
    End Sub
  Partial Private Sub InsertMAS_STATUS_BILL_DETAIL(instance As MAS_STATUS_BILL_DETAIL)
    End Sub
  Partial Private Sub UpdateMAS_STATUS_BILL_DETAIL(instance As MAS_STATUS_BILL_DETAIL)
    End Sub
  Partial Private Sub DeleteMAS_STATUS_BILL_DETAIL(instance As MAS_STATUS_BILL_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_REASON_REJECT_BILL(instance As MAS_REASON_REJECT_BILL)
    End Sub
  Partial Private Sub UpdateMAS_REASON_REJECT_BILL(instance As MAS_REASON_REJECT_BILL)
    End Sub
  Partial Private Sub DeleteMAS_REASON_REJECT_BILL(instance As MAS_REASON_REJECT_BILL)
    End Sub
  Partial Private Sub InsertTRANSFER_PAYMENT_LOG(instance As TRANSFER_PAYMENT_LOG)
    End Sub
  Partial Private Sub UpdateTRANSFER_PAYMENT_LOG(instance As TRANSFER_PAYMENT_LOG)
    End Sub
  Partial Private Sub DeleteTRANSFER_PAYMENT_LOG(instance As TRANSFER_PAYMENT_LOG)
    End Sub
  Partial Private Sub InsertMAS_INCOME(instance As MAS_INCOME)
    End Sub
  Partial Private Sub UpdateMAS_INCOME(instance As MAS_INCOME)
    End Sub
  Partial Private Sub DeleteMAS_INCOME(instance As MAS_INCOME)
    End Sub
  Partial Private Sub InsertMAS_BANK(instance As MAS_BANK)
    End Sub
  Partial Private Sub UpdateMAS_BANK(instance As MAS_BANK)
    End Sub
  Partial Private Sub DeleteMAS_BANK(instance As MAS_BANK)
    End Sub
  Partial Private Sub InsertMAS_CHECKER(instance As MAS_CHECKER)
    End Sub
  Partial Private Sub UpdateMAS_CHECKER(instance As MAS_CHECKER)
    End Sub
  Partial Private Sub DeleteMAS_CHECKER(instance As MAS_CHECKER)
    End Sub
  Partial Private Sub InsertMAS_CUSTOMER(instance As MAS_CUSTOMER)
    End Sub
  Partial Private Sub UpdateMAS_CUSTOMER(instance As MAS_CUSTOMER)
    End Sub
  Partial Private Sub DeleteMAS_CUSTOMER(instance As MAS_CUSTOMER)
    End Sub
  Partial Private Sub InsertMAS_PRE_CUSTOMER(instance As MAS_PRE_CUSTOMER)
    End Sub
  Partial Private Sub UpdateMAS_PRE_CUSTOMER(instance As MAS_PRE_CUSTOMER)
    End Sub
  Partial Private Sub DeleteMAS_PRE_CUSTOMER(instance As MAS_PRE_CUSTOMER)
    End Sub
  Partial Private Sub InsertMAS_PREFIX_v2(instance As MAS_PREFIX_v2)
    End Sub
  Partial Private Sub UpdateMAS_PREFIX_v2(instance As MAS_PREFIX_v2)
    End Sub
  Partial Private Sub DeleteMAS_PREFIX_v2(instance As MAS_PREFIX_v2)
    End Sub
  Partial Private Sub InsertMAS_CUSTOMER_ADD_CER(instance As MAS_CUSTOMER_ADD_CER)
    End Sub
  Partial Private Sub UpdateMAS_CUSTOMER_ADD_CER(instance As MAS_CUSTOMER_ADD_CER)
    End Sub
  Partial Private Sub DeleteMAS_CUSTOMER_ADD_CER(instance As MAS_CUSTOMER_ADD_CER)
    End Sub
  Partial Private Sub InsertLOG_PAY_FROM_SCB(instance As LOG_PAY_FROM_SCB)
    End Sub
  Partial Private Sub UpdateLOG_PAY_FROM_SCB(instance As LOG_PAY_FROM_SCB)
    End Sub
  Partial Private Sub DeleteLOG_PAY_FROM_SCB(instance As LOG_PAY_FROM_SCB)
    End Sub
  Partial Private Sub InsertBUDGET_PLAN_ACTIVITY(instance As BUDGET_PLAN_ACTIVITY)
    End Sub
  Partial Private Sub UpdateBUDGET_PLAN_ACTIVITY(instance As BUDGET_PLAN_ACTIVITY)
    End Sub
  Partial Private Sub DeleteBUDGET_PLAN_ACTIVITY(instance As BUDGET_PLAN_ACTIVITY)
    End Sub
  Partial Private Sub InsertMAS_GL(instance As MAS_GL)
    End Sub
  Partial Private Sub UpdateMAS_GL(instance As MAS_GL)
    End Sub
  Partial Private Sub DeleteMAS_GL(instance As MAS_GL)
    End Sub
  Partial Private Sub InsertLOG_PAY_HOST_TO_HOST(instance As LOG_PAY_HOST_TO_HOST)
    End Sub
  Partial Private Sub UpdateLOG_PAY_HOST_TO_HOST(instance As LOG_PAY_HOST_TO_HOST)
    End Sub
  Partial Private Sub DeleteLOG_PAY_HOST_TO_HOST(instance As LOG_PAY_HOST_TO_HOST)
    End Sub
  Partial Private Sub InsertLOG_RE_UPDATE(instance As LOG_RE_UPDATE)
    End Sub
  Partial Private Sub UpdateLOG_RE_UPDATE(instance As LOG_RE_UPDATE)
    End Sub
  Partial Private Sub DeleteLOG_RE_UPDATE(instance As LOG_RE_UPDATE)
    End Sub
  Partial Private Sub InsertMAS_RE_UPDATE_USER(instance As MAS_RE_UPDATE_USER)
    End Sub
  Partial Private Sub UpdateMAS_RE_UPDATE_USER(instance As MAS_RE_UPDATE_USER)
    End Sub
  Partial Private Sub DeleteMAS_RE_UPDATE_USER(instance As MAS_RE_UPDATE_USER)
    End Sub
  Partial Private Sub InsertLOG_RECEIPT_ERROR(instance As LOG_RECEIPT_ERROR)
    End Sub
  Partial Private Sub UpdateLOG_RECEIPT_ERROR(instance As LOG_RECEIPT_ERROR)
    End Sub
  Partial Private Sub DeleteLOG_RECEIPT_ERROR(instance As LOG_RECEIPT_ERROR)
    End Sub
  Partial Private Sub InsertMAS_ACCOUNT_BANK(instance As MAS_ACCOUNT_BANK)
    End Sub
  Partial Private Sub UpdateMAS_ACCOUNT_BANK(instance As MAS_ACCOUNT_BANK)
    End Sub
  Partial Private Sub DeleteMAS_ACCOUNT_BANK(instance As MAS_ACCOUNT_BANK)
    End Sub
  Partial Private Sub InsertMAS_PERSONAL(instance As MAS_PERSONAL)
    End Sub
  Partial Private Sub UpdateMAS_PERSONAL(instance As MAS_PERSONAL)
    End Sub
  Partial Private Sub DeleteMAS_PERSONAL(instance As MAS_PERSONAL)
    End Sub
  Partial Private Sub InsertLOG_H2H_ERROR(instance As LOG_H2H_ERROR)
    End Sub
  Partial Private Sub UpdateLOG_H2H_ERROR(instance As LOG_H2H_ERROR)
    End Sub
  Partial Private Sub DeleteLOG_H2H_ERROR(instance As LOG_H2H_ERROR)
    End Sub
  Partial Private Sub InsertLOG_CONFIRM(instance As LOG_CONFIRM)
    End Sub
  Partial Private Sub UpdateLOG_CONFIRM(instance As LOG_CONFIRM)
    End Sub
  Partial Private Sub DeleteLOG_CONFIRM(instance As LOG_CONFIRM)
    End Sub
  Partial Private Sub InsertMAS_PURCHASE(instance As MAS_PURCHASE)
    End Sub
  Partial Private Sub UpdateMAS_PURCHASE(instance As MAS_PURCHASE)
    End Sub
  Partial Private Sub DeleteMAS_PURCHASE(instance As MAS_PURCHASE)
    End Sub
  Partial Private Sub InsertMAS_DEKA_DETAIL_BUDGET(instance As MAS_DEKA_DETAIL_BUDGET)
    End Sub
  Partial Private Sub UpdateMAS_DEKA_DETAIL_BUDGET(instance As MAS_DEKA_DETAIL_BUDGET)
    End Sub
  Partial Private Sub DeleteMAS_DEKA_DETAIL_BUDGET(instance As MAS_DEKA_DETAIL_BUDGET)
    End Sub
  Partial Private Sub InsertMAS_MONEY_RECEIVER(instance As MAS_MONEY_RECEIVER)
    End Sub
  Partial Private Sub UpdateMAS_MONEY_RECEIVER(instance As MAS_MONEY_RECEIVER)
    End Sub
  Partial Private Sub DeleteMAS_MONEY_RECEIVER(instance As MAS_MONEY_RECEIVER)
    End Sub
  Partial Private Sub Insertgenno_temp(instance As genno_temp)
    End Sub
  Partial Private Sub Updategenno_temp(instance As genno_temp)
    End Sub
  Partial Private Sub Deletegenno_temp(instance As genno_temp)
    End Sub
  Partial Private Sub InsertLOG_11PM(instance As LOG_11PM)
    End Sub
  Partial Private Sub UpdateLOG_11PM(instance As LOG_11PM)
    End Sub
  Partial Private Sub DeleteLOG_11PM(instance As LOG_11PM)
    End Sub
  Partial Private Sub InsertTEMP_UPDATE_QR(instance As TEMP_UPDATE_QR)
    End Sub
  Partial Private Sub UpdateTEMP_UPDATE_QR(instance As TEMP_UPDATE_QR)
    End Sub
  Partial Private Sub DeleteTEMP_UPDATE_QR(instance As TEMP_UPDATE_QR)
    End Sub
  Partial Private Sub InsertLOG_CONFIRM_SCB(instance As LOG_CONFIRM_SCB)
    End Sub
  Partial Private Sub UpdateLOG_CONFIRM_SCB(instance As LOG_CONFIRM_SCB)
    End Sub
  Partial Private Sub DeleteLOG_CONFIRM_SCB(instance As LOG_CONFIRM_SCB)
    End Sub
  Partial Private Sub InsertLOG_WAIT_RECEIPT(instance As LOG_WAIT_RECEIPT)
    End Sub
  Partial Private Sub UpdateLOG_WAIT_RECEIPT(instance As LOG_WAIT_RECEIPT)
    End Sub
  Partial Private Sub DeleteLOG_WAIT_RECEIPT(instance As LOG_WAIT_RECEIPT)
    End Sub
  Partial Private Sub InsertLOG_WAIT_QUEUE_LIST(instance As LOG_WAIT_QUEUE_LIST)
    End Sub
  Partial Private Sub UpdateLOG_WAIT_QUEUE_LIST(instance As LOG_WAIT_QUEUE_LIST)
    End Sub
  Partial Private Sub DeleteLOG_WAIT_QUEUE_LIST(instance As LOG_WAIT_QUEUE_LIST)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("DTAMConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property MAS_OPERATION_TYPEs() As System.Data.Linq.Table(Of MAS_OPERATION_TYPE)
		Get
			Return Me.GetTable(Of MAS_OPERATION_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SEND_MONEY_DEPARTMENTs() As System.Data.Linq.Table(Of MAS_SEND_MONEY_DEPARTMENT)
		Get
			Return Me.GetTable(Of MAS_SEND_MONEY_DEPARTMENT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_USER_PERMISSION_DETAILs() As System.Data.Linq.Table(Of MAS_USER_PERMISSION_DETAIL)
		Get
			Return Me.GetTable(Of MAS_USER_PERMISSION_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property OVERLAP_DETAILs() As System.Data.Linq.Table(Of OVERLAP_DETAIL)
		Get
			Return Me.GetTable(Of OVERLAP_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PAYLISTs() As System.Data.Linq.Table(Of MAS_PAYLIST)
		Get
			Return Me.GetTable(Of MAS_PAYLIST)
		End Get
	End Property
	
	Public ReadOnly Property MAS_WELFAREs() As System.Data.Linq.Table(Of MAS_WELFARE)
		Get
			Return Me.GetTable(Of MAS_WELFARE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_USERs() As System.Data.Linq.Table(Of MAS_USER)
		Get
			Return Me.GetTable(Of MAS_USER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MONEY_TYPE_NODEs() As System.Data.Linq.Table(Of MAS_MONEY_TYPE_NODE)
		Get
			Return Me.GetTable(Of MAS_MONEY_TYPE_NODE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MONEY_TYPEs() As System.Data.Linq.Table(Of MAS_MONEY_TYPE)
		Get
			Return Me.GetTable(Of MAS_MONEY_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_K_TYPEs() As System.Data.Linq.Table(Of MAS_K_TYPE)
		Get
			Return Me.GetTable(Of MAS_K_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DEPARTMENT_NODEs() As System.Data.Linq.Table(Of MAS_DEPARTMENT_NODE)
		Get
			Return Me.GetTable(Of MAS_DEPARTMENT_NODE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DEPARTMENTs() As System.Data.Linq.Table(Of MAS_DEPARTMENT)
		Get
			Return Me.GetTable(Of MAS_DEPARTMENT)
		End Get
	End Property
	
	Public ReadOnly Property OVERLAP_HEADs() As System.Data.Linq.Table(Of OVERLAP_HEAD)
		Get
			Return Me.GetTable(Of OVERLAP_HEAD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RETURN_DESCRIPTIONs() As System.Data.Linq.Table(Of MAS_RETURN_DESCRIPTION)
		Get
			Return Me.GetTable(Of MAS_RETURN_DESCRIPTION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SUB_BUDGETs() As System.Data.Linq.Table(Of MAS_SUB_BUDGET)
		Get
			Return Me.GetTable(Of MAS_SUB_BUDGET)
		End Get
	End Property
	
	Public ReadOnly Property MAS_IMPORTANT_USERs() As System.Data.Linq.Table(Of MAS_IMPORTANT_USER)
		Get
			Return Me.GetTable(Of MAS_IMPORTANT_USER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MENUs() As System.Data.Linq.Table(Of MAS_MENU)
		Get
			Return Me.GetTable(Of MAS_MENU)
		End Get
	End Property
	
	Public ReadOnly Property TBL_PRINT_CHECK_HISTORies() As System.Data.Linq.Table(Of TBL_PRINT_CHECK_HISTORY)
		Get
			Return Me.GetTable(Of TBL_PRINT_CHECK_HISTORY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CUSTOMER_TYPEs() As System.Data.Linq.Table(Of MAS_CUSTOMER_TYPE)
		Get
			Return Me.GetTable(Of MAS_CUSTOMER_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property TBL_LOGs() As System.Data.Linq.Table(Of TBL_LOG)
		Get
			Return Me.GetTable(Of TBL_LOG)
		End Get
	End Property
	
	Public ReadOnly Property TBL_TEMP_BGs() As System.Data.Linq.Table(Of TBL_TEMP_BG)
		Get
			Return Me.GetTable(Of TBL_TEMP_BG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MARGIN_RECEIVEs() As System.Data.Linq.Table(Of MAS_MARGIN_RECEIVE)
		Get
			Return Me.GetTable(Of MAS_MARGIN_RECEIVE)
		End Get
	End Property
	
	Public ReadOnly Property BUDGET_PLAN_NODEs() As System.Data.Linq.Table(Of BUDGET_PLAN_NODE)
		Get
			Return Me.GetTable(Of BUDGET_PLAN_NODE)
		End Get
	End Property
	
	Public ReadOnly Property BUDGET_PLANs() As System.Data.Linq.Table(Of BUDGET_PLAN)
		Get
			Return Me.GetTable(Of BUDGET_PLAN)
		End Get
	End Property
	
	Public ReadOnly Property TBL_PERSON_IN_REPORTs() As System.Data.Linq.Table(Of TBL_PERSON_IN_REPORT)
		Get
			Return Me.GetTable(Of TBL_PERSON_IN_REPORT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LEVELs() As System.Data.Linq.Table(Of MAS_LEVEL)
		Get
			Return Me.GetTable(Of MAS_LEVEL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PERSON_TYPEs() As System.Data.Linq.Table(Of MAS_PERSON_TYPE)
		Get
			Return Me.GetTable(Of MAS_PERSON_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PERSONAL_Tb2s() As System.Data.Linq.Table(Of MAS_PERSONAL_Tb2)
		Get
			Return Me.GetTable(Of MAS_PERSONAL_Tb2)
		End Get
	End Property
	
	Public ReadOnly Property MAS_POSITIONs() As System.Data.Linq.Table(Of MAS_POSITION)
		Get
			Return Me.GetTable(Of MAS_POSITION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PREFIXes() As System.Data.Linq.Table(Of MAS_PREFIX)
		Get
			Return Me.GetTable(Of MAS_PREFIX)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STATUS() As System.Data.Linq.Table(Of MAS_STATUS)
		Get
			Return Me.GetTable(Of MAS_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property TRANSACTION_DOWNLOADs() As System.Data.Linq.Table(Of TRANSACTION_DOWNLOAD)
		Get
			Return Me.GetTable(Of TRANSACTION_DOWNLOAD)
		End Get
	End Property
	
	Public ReadOnly Property TRANSACTION_UPLOADs() As System.Data.Linq.Table(Of TRANSACTION_UPLOAD)
		Get
			Return Me.GetTable(Of TRANSACTION_UPLOAD)
		End Get
	End Property
	
	Public ReadOnly Property MAS_FAMILies() As System.Data.Linq.Table(Of MAS_FAMILY)
		Get
			Return Me.GetTable(Of MAS_FAMILY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MENU_AUTOs() As System.Data.Linq.Table(Of MAS_MENU_AUTO)
		Get
			Return Me.GetTable(Of MAS_MENU_AUTO)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STATUS_BILL_DETAILs() As System.Data.Linq.Table(Of MAS_STATUS_BILL_DETAIL)
		Get
			Return Me.GetTable(Of MAS_STATUS_BILL_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_REASON_REJECT_BILLs() As System.Data.Linq.Table(Of MAS_REASON_REJECT_BILL)
		Get
			Return Me.GetTable(Of MAS_REASON_REJECT_BILL)
		End Get
	End Property
	
	Public ReadOnly Property TRANSFER_PAYMENT_LOGs() As System.Data.Linq.Table(Of TRANSFER_PAYMENT_LOG)
		Get
			Return Me.GetTable(Of TRANSFER_PAYMENT_LOG)
		End Get
	End Property
	
	Public ReadOnly Property MAS_INCOMEs() As System.Data.Linq.Table(Of MAS_INCOME)
		Get
			Return Me.GetTable(Of MAS_INCOME)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BANKs() As System.Data.Linq.Table(Of MAS_BANK)
		Get
			Return Me.GetTable(Of MAS_BANK)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CHECKERs() As System.Data.Linq.Table(Of MAS_CHECKER)
		Get
			Return Me.GetTable(Of MAS_CHECKER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CUSTOMERs() As System.Data.Linq.Table(Of MAS_CUSTOMER)
		Get
			Return Me.GetTable(Of MAS_CUSTOMER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PRE_CUSTOMERs() As System.Data.Linq.Table(Of MAS_PRE_CUSTOMER)
		Get
			Return Me.GetTable(Of MAS_PRE_CUSTOMER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PREFIX_v2s() As System.Data.Linq.Table(Of MAS_PREFIX_v2)
		Get
			Return Me.GetTable(Of MAS_PREFIX_v2)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CUSTOMER_ADD_CERs() As System.Data.Linq.Table(Of MAS_CUSTOMER_ADD_CER)
		Get
			Return Me.GetTable(Of MAS_CUSTOMER_ADD_CER)
		End Get
	End Property
	
	Public ReadOnly Property LOG_PAY_FROM_SCBs() As System.Data.Linq.Table(Of LOG_PAY_FROM_SCB)
		Get
			Return Me.GetTable(Of LOG_PAY_FROM_SCB)
		End Get
	End Property
	
	Public ReadOnly Property BUDGET_PLAN_ACTIVITies() As System.Data.Linq.Table(Of BUDGET_PLAN_ACTIVITY)
		Get
			Return Me.GetTable(Of BUDGET_PLAN_ACTIVITY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_GLs() As System.Data.Linq.Table(Of MAS_GL)
		Get
			Return Me.GetTable(Of MAS_GL)
		End Get
	End Property
	
	Public ReadOnly Property LOG_PAY_HOST_TO_HOSTs() As System.Data.Linq.Table(Of LOG_PAY_HOST_TO_HOST)
		Get
			Return Me.GetTable(Of LOG_PAY_HOST_TO_HOST)
		End Get
	End Property
	
	Public ReadOnly Property LOG_RE_UPDATEs() As System.Data.Linq.Table(Of LOG_RE_UPDATE)
		Get
			Return Me.GetTable(Of LOG_RE_UPDATE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RE_UPDATE_USERs() As System.Data.Linq.Table(Of MAS_RE_UPDATE_USER)
		Get
			Return Me.GetTable(Of MAS_RE_UPDATE_USER)
		End Get
	End Property
	
	Public ReadOnly Property LOG_RECEIPT_ERRORs() As System.Data.Linq.Table(Of LOG_RECEIPT_ERROR)
		Get
			Return Me.GetTable(Of LOG_RECEIPT_ERROR)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ACCOUNT_BANKs() As System.Data.Linq.Table(Of MAS_ACCOUNT_BANK)
		Get
			Return Me.GetTable(Of MAS_ACCOUNT_BANK)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PERSONALs() As System.Data.Linq.Table(Of MAS_PERSONAL)
		Get
			Return Me.GetTable(Of MAS_PERSONAL)
		End Get
	End Property
	
	Public ReadOnly Property LOG_H2H_ERRORs() As System.Data.Linq.Table(Of LOG_H2H_ERROR)
		Get
			Return Me.GetTable(Of LOG_H2H_ERROR)
		End Get
	End Property
	
	Public ReadOnly Property LOG_CONFIRMs() As System.Data.Linq.Table(Of LOG_CONFIRM)
		Get
			Return Me.GetTable(Of LOG_CONFIRM)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PURCHASEs() As System.Data.Linq.Table(Of MAS_PURCHASE)
		Get
			Return Me.GetTable(Of MAS_PURCHASE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DEKA_DETAIL_BUDGETs() As System.Data.Linq.Table(Of MAS_DEKA_DETAIL_BUDGET)
		Get
			Return Me.GetTable(Of MAS_DEKA_DETAIL_BUDGET)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MONEY_RECEIVERs() As System.Data.Linq.Table(Of MAS_MONEY_RECEIVER)
		Get
			Return Me.GetTable(Of MAS_MONEY_RECEIVER)
		End Get
	End Property
	
	Public ReadOnly Property genno_temps() As System.Data.Linq.Table(Of genno_temp)
		Get
			Return Me.GetTable(Of genno_temp)
		End Get
	End Property
	
	Public ReadOnly Property LOG_11PMs() As System.Data.Linq.Table(Of LOG_11PM)
		Get
			Return Me.GetTable(Of LOG_11PM)
		End Get
	End Property
	
	Public ReadOnly Property TEMP_UPDATE_QRs() As System.Data.Linq.Table(Of TEMP_UPDATE_QR)
		Get
			Return Me.GetTable(Of TEMP_UPDATE_QR)
		End Get
	End Property
	
	Public ReadOnly Property LOG_CONFIRM_SCBs() As System.Data.Linq.Table(Of LOG_CONFIRM_SCB)
		Get
			Return Me.GetTable(Of LOG_CONFIRM_SCB)
		End Get
	End Property
	
	Public ReadOnly Property LOG_WAIT_RECEIPTs() As System.Data.Linq.Table(Of LOG_WAIT_RECEIPT)
		Get
			Return Me.GetTable(Of LOG_WAIT_RECEIPT)
		End Get
	End Property
	
	Public ReadOnly Property LOG_WAIT_QUEUE_LISTs() As System.Data.Linq.Table(Of LOG_WAIT_QUEUE_LIST)
		Get
			Return Me.GetTable(Of LOG_WAIT_QUEUE_LIST)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_OPERATION_TYPE")>  _
Partial Public Class MAS_OPERATION_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OPERATION_TYPE_ID As Integer
	
	Private _OPERATION_TYPE_CODE As System.Nullable(Of Integer)
	
	Private _OPERATION_TYPE_DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOPERATION_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOPERATION_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnOPERATION_TYPE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOPERATION_TYPE_CODEChanged()
    End Sub
    Partial Private Sub OnOPERATION_TYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnOPERATION_TYPE_DESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPERATION_TYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property OPERATION_TYPE_ID() As Integer
		Get
			Return Me._OPERATION_TYPE_ID
		End Get
		Set
			If ((Me._OPERATION_TYPE_ID = value)  _
						= false) Then
				Me.OnOPERATION_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._OPERATION_TYPE_ID = value
				Me.SendPropertyChanged("OPERATION_TYPE_ID")
				Me.OnOPERATION_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPERATION_TYPE_CODE", DbType:="Int")>  _
	Public Property OPERATION_TYPE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._OPERATION_TYPE_CODE
		End Get
		Set
			If (Me._OPERATION_TYPE_CODE.Equals(value) = false) Then
				Me.OnOPERATION_TYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._OPERATION_TYPE_CODE = value
				Me.SendPropertyChanged("OPERATION_TYPE_CODE")
				Me.OnOPERATION_TYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPERATION_TYPE_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property OPERATION_TYPE_DESCRIPTION() As String
		Get
			Return Me._OPERATION_TYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._OPERATION_TYPE_DESCRIPTION, value) = false) Then
				Me.OnOPERATION_TYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._OPERATION_TYPE_DESCRIPTION = value
				Me.SendPropertyChanged("OPERATION_TYPE_DESCRIPTION")
				Me.OnOPERATION_TYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SEND_MONEY_DEPARTMENT")>  _
Partial Public Class MAS_SEND_MONEY_DEPARTMENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SEND_MONEY_DEPARTMENT_ID As Integer
	
	Private _BANK_ACCOUNT As String
	
	Private _DEPARTMENT_OR_BANK_NAME As String
	
	Private _BRANCH_NAME As String
	
	Private _SHORT_DEPARTMENT_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSEND_MONEY_DEPARTMENT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSEND_MONEY_DEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnBANK_ACCOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnBANK_ACCOUNTChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_OR_BANK_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_OR_BANK_NAMEChanged()
    End Sub
    Partial Private Sub OnBRANCH_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBRANCH_NAMEChanged()
    End Sub
    Partial Private Sub OnSHORT_DEPARTMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSHORT_DEPARTMENT_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEND_MONEY_DEPARTMENT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SEND_MONEY_DEPARTMENT_ID() As Integer
		Get
			Return Me._SEND_MONEY_DEPARTMENT_ID
		End Get
		Set
			If ((Me._SEND_MONEY_DEPARTMENT_ID = value)  _
						= false) Then
				Me.OnSEND_MONEY_DEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._SEND_MONEY_DEPARTMENT_ID = value
				Me.SendPropertyChanged("SEND_MONEY_DEPARTMENT_ID")
				Me.OnSEND_MONEY_DEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_ACCOUNT", DbType:="NVarChar(50)")>  _
	Public Property BANK_ACCOUNT() As String
		Get
			Return Me._BANK_ACCOUNT
		End Get
		Set
			If (String.Equals(Me._BANK_ACCOUNT, value) = false) Then
				Me.OnBANK_ACCOUNTChanging(value)
				Me.SendPropertyChanging
				Me._BANK_ACCOUNT = value
				Me.SendPropertyChanged("BANK_ACCOUNT")
				Me.OnBANK_ACCOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_OR_BANK_NAME", DbType:="NVarChar(255)")>  _
	Public Property DEPARTMENT_OR_BANK_NAME() As String
		Get
			Return Me._DEPARTMENT_OR_BANK_NAME
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_OR_BANK_NAME, value) = false) Then
				Me.OnDEPARTMENT_OR_BANK_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_OR_BANK_NAME = value
				Me.SendPropertyChanged("DEPARTMENT_OR_BANK_NAME")
				Me.OnDEPARTMENT_OR_BANK_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCH_NAME", DbType:="NVarChar(255)")>  _
	Public Property BRANCH_NAME() As String
		Get
			Return Me._BRANCH_NAME
		End Get
		Set
			If (String.Equals(Me._BRANCH_NAME, value) = false) Then
				Me.OnBRANCH_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BRANCH_NAME = value
				Me.SendPropertyChanged("BRANCH_NAME")
				Me.OnBRANCH_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHORT_DEPARTMENT_NAME", DbType:="NVarChar(100)")>  _
	Public Property SHORT_DEPARTMENT_NAME() As String
		Get
			Return Me._SHORT_DEPARTMENT_NAME
		End Get
		Set
			If (String.Equals(Me._SHORT_DEPARTMENT_NAME, value) = false) Then
				Me.OnSHORT_DEPARTMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SHORT_DEPARTMENT_NAME = value
				Me.SendPropertyChanged("SHORT_DEPARTMENT_NAME")
				Me.OnSHORT_DEPARTMENT_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_USER_PERMISSION_DETAIL")>  _
Partial Public Class MAS_USER_PERMISSION_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Parent_ID As System.Nullable(Of Integer)
	
	Private _Child_ID As System.Nullable(Of Integer)
	
	Private _ModuleID As System.Nullable(Of Integer)
	
	Private _bitenable As System.Nullable(Of Boolean)
	
	Private _USER_ID As System.Nullable(Of Integer)
	
	Private _MAS_USER As EntityRef(Of MAS_USER)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnParent_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnParent_IDChanged()
    End Sub
    Partial Private Sub OnChild_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnChild_IDChanged()
    End Sub
    Partial Private Sub OnModuleIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnModuleIDChanged()
    End Sub
    Partial Private Sub OnbitenableChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnbitenableChanged()
    End Sub
    Partial Private Sub OnUSER_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUSER_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._MAS_USER = CType(Nothing, EntityRef(Of MAS_USER))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Parent_ID", DbType:="Int")>  _
	Public Property Parent_ID() As System.Nullable(Of Integer)
		Get
			Return Me._Parent_ID
		End Get
		Set
			If (Me._Parent_ID.Equals(value) = false) Then
				Me.OnParent_IDChanging(value)
				Me.SendPropertyChanging
				Me._Parent_ID = value
				Me.SendPropertyChanged("Parent_ID")
				Me.OnParent_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Child_ID", DbType:="Int")>  _
	Public Property Child_ID() As System.Nullable(Of Integer)
		Get
			Return Me._Child_ID
		End Get
		Set
			If (Me._Child_ID.Equals(value) = false) Then
				Me.OnChild_IDChanging(value)
				Me.SendPropertyChanging
				Me._Child_ID = value
				Me.SendPropertyChanged("Child_ID")
				Me.OnChild_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleID", DbType:="Int")>  _
	Public Property ModuleID() As System.Nullable(Of Integer)
		Get
			Return Me._ModuleID
		End Get
		Set
			If (Me._ModuleID.Equals(value) = false) Then
				Me.OnModuleIDChanging(value)
				Me.SendPropertyChanging
				Me._ModuleID = value
				Me.SendPropertyChanged("ModuleID")
				Me.OnModuleIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bitenable", DbType:="Bit")>  _
	Public Property bitenable() As System.Nullable(Of Boolean)
		Get
			Return Me._bitenable
		End Get
		Set
			If (Me._bitenable.Equals(value) = false) Then
				Me.OnbitenableChanging(value)
				Me.SendPropertyChanging
				Me._bitenable = value
				Me.SendPropertyChanged("bitenable")
				Me.OnbitenableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USER_ID", DbType:="Int")>  _
	Public Property USER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._USER_ID
		End Get
		Set
			If (Me._USER_ID.Equals(value) = false) Then
				If Me._MAS_USER.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnUSER_IDChanging(value)
				Me.SendPropertyChanging
				Me._USER_ID = value
				Me.SendPropertyChanged("USER_ID")
				Me.OnUSER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MAS_USER_MAS_USER_PERMISSION_DETAIL", Storage:="_MAS_USER", ThisKey:="USER_ID", OtherKey:="USER_ID", IsForeignKey:=true)>  _
	Public Property MAS_USER() As MAS_USER
		Get
			Return Me._MAS_USER.Entity
		End Get
		Set
			Dim previousValue As MAS_USER = Me._MAS_USER.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._MAS_USER.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._MAS_USER.Entity = Nothing
					previousValue.MAS_USER_PERMISSION_DETAILs.Remove(Me)
				End If
				Me._MAS_USER.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.MAS_USER_PERMISSION_DETAILs.Add(Me)
					Me._USER_ID = value.USER_ID
				Else
					Me._USER_ID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("MAS_USER")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OVERLAP_DETAIL")>  _
Partial Public Class OVERLAP_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OVERLAP_DETAIL_ID As Integer
	
	Private _OVERLAP_HEAD_ID As System.Nullable(Of Integer)
	
	Private _OVERLAP_DETAIL_AMOUNT As System.Nullable(Of Decimal)
	
	Private _OVERLAP_DETAIL_IS_ENABLE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOVERLAP_DETAIL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOVERLAP_DETAIL_IDChanged()
    End Sub
    Partial Private Sub OnOVERLAP_HEAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOVERLAP_HEAD_IDChanged()
    End Sub
    Partial Private Sub OnOVERLAP_DETAIL_AMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOVERLAP_DETAIL_AMOUNTChanged()
    End Sub
    Partial Private Sub OnOVERLAP_DETAIL_IS_ENABLEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOVERLAP_DETAIL_IS_ENABLEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OVERLAP_DETAIL_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property OVERLAP_DETAIL_ID() As Integer
		Get
			Return Me._OVERLAP_DETAIL_ID
		End Get
		Set
			If ((Me._OVERLAP_DETAIL_ID = value)  _
						= false) Then
				Me.OnOVERLAP_DETAIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._OVERLAP_DETAIL_ID = value
				Me.SendPropertyChanged("OVERLAP_DETAIL_ID")
				Me.OnOVERLAP_DETAIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OVERLAP_HEAD_ID", DbType:="Int")>  _
	Public Property OVERLAP_HEAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._OVERLAP_HEAD_ID
		End Get
		Set
			If (Me._OVERLAP_HEAD_ID.Equals(value) = false) Then
				Me.OnOVERLAP_HEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._OVERLAP_HEAD_ID = value
				Me.SendPropertyChanged("OVERLAP_HEAD_ID")
				Me.OnOVERLAP_HEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OVERLAP_DETAIL_AMOUNT", DbType:="Money")>  _
	Public Property OVERLAP_DETAIL_AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._OVERLAP_DETAIL_AMOUNT
		End Get
		Set
			If (Me._OVERLAP_DETAIL_AMOUNT.Equals(value) = false) Then
				Me.OnOVERLAP_DETAIL_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._OVERLAP_DETAIL_AMOUNT = value
				Me.SendPropertyChanged("OVERLAP_DETAIL_AMOUNT")
				Me.OnOVERLAP_DETAIL_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OVERLAP_DETAIL_IS_ENABLE", DbType:="Bit")>  _
	Public Property OVERLAP_DETAIL_IS_ENABLE() As System.Nullable(Of Boolean)
		Get
			Return Me._OVERLAP_DETAIL_IS_ENABLE
		End Get
		Set
			If (Me._OVERLAP_DETAIL_IS_ENABLE.Equals(value) = false) Then
				Me.OnOVERLAP_DETAIL_IS_ENABLEChanging(value)
				Me.SendPropertyChanging
				Me._OVERLAP_DETAIL_IS_ENABLE = value
				Me.SendPropertyChanged("OVERLAP_DETAIL_IS_ENABLE")
				Me.OnOVERLAP_DETAIL_IS_ENABLEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PAYLIST")>  _
Partial Public Class MAS_PAYLIST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PATLIST_ID As Integer
	
	Private _PAYLIST_DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPATLIST_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPATLIST_IDChanged()
    End Sub
    Partial Private Sub OnPAYLIST_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPAYLIST_DESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATLIST_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PATLIST_ID() As Integer
		Get
			Return Me._PATLIST_ID
		End Get
		Set
			If ((Me._PATLIST_ID = value)  _
						= false) Then
				Me.OnPATLIST_IDChanging(value)
				Me.SendPropertyChanging
				Me._PATLIST_ID = value
				Me.SendPropertyChanged("PATLIST_ID")
				Me.OnPATLIST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYLIST_DESCRIPTION", DbType:="NVarChar(255)")>  _
	Public Property PAYLIST_DESCRIPTION() As String
		Get
			Return Me._PAYLIST_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._PAYLIST_DESCRIPTION, value) = false) Then
				Me.OnPAYLIST_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._PAYLIST_DESCRIPTION = value
				Me.SendPropertyChanged("PAYLIST_DESCRIPTION")
				Me.OnPAYLIST_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_WELFARE")>  _
Partial Public Class MAS_WELFARE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WELFARE_ID As Integer
	
	Private _WELFARE_TYPE_CODE As String
	
	Private _WELFARE_TYPE_DESCRIPTION As String
	
	Private _WELFARE_TYPE_SHORT_DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWELFARE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWELFARE_IDChanged()
    End Sub
    Partial Private Sub OnWELFARE_TYPE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnWELFARE_TYPE_CODEChanged()
    End Sub
    Partial Private Sub OnWELFARE_TYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnWELFARE_TYPE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnWELFARE_TYPE_SHORT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnWELFARE_TYPE_SHORT_DESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WELFARE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property WELFARE_ID() As Integer
		Get
			Return Me._WELFARE_ID
		End Get
		Set
			If ((Me._WELFARE_ID = value)  _
						= false) Then
				Me.OnWELFARE_IDChanging(value)
				Me.SendPropertyChanging
				Me._WELFARE_ID = value
				Me.SendPropertyChanged("WELFARE_ID")
				Me.OnWELFARE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WELFARE_TYPE_CODE", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property WELFARE_TYPE_CODE() As String
		Get
			Return Me._WELFARE_TYPE_CODE
		End Get
		Set
			If (String.Equals(Me._WELFARE_TYPE_CODE, value) = false) Then
				Me.OnWELFARE_TYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._WELFARE_TYPE_CODE = value
				Me.SendPropertyChanged("WELFARE_TYPE_CODE")
				Me.OnWELFARE_TYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WELFARE_TYPE_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property WELFARE_TYPE_DESCRIPTION() As String
		Get
			Return Me._WELFARE_TYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._WELFARE_TYPE_DESCRIPTION, value) = false) Then
				Me.OnWELFARE_TYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._WELFARE_TYPE_DESCRIPTION = value
				Me.SendPropertyChanged("WELFARE_TYPE_DESCRIPTION")
				Me.OnWELFARE_TYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WELFARE_TYPE_SHORT_DESCRIPTION", DbType:="NVarChar(255)")>  _
	Public Property WELFARE_TYPE_SHORT_DESCRIPTION() As String
		Get
			Return Me._WELFARE_TYPE_SHORT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._WELFARE_TYPE_SHORT_DESCRIPTION, value) = false) Then
				Me.OnWELFARE_TYPE_SHORT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._WELFARE_TYPE_SHORT_DESCRIPTION = value
				Me.SendPropertyChanged("WELFARE_TYPE_SHORT_DESCRIPTION")
				Me.OnWELFARE_TYPE_SHORT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_USER")>  _
Partial Public Class MAS_USER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _USER_ID As Integer
	
	Private _PERSONAL_ID As String
	
	Private _PREFIX_NAME As String
	
	Private _NAME As String
	
	Private _SURNAME As String
	
	Private _USER_TYPE As System.Nullable(Of Integer)
	
	Private _DEPARTMENT_DESCRIPTION As String
	
	Private _PERMISSION_ID As System.Nullable(Of Integer)
	
	Private _USER_AD As String
	
	Private _MAS_USER_PERMISSION_DETAILs As EntitySet(Of MAS_USER_PERMISSION_DETAIL)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUSER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUSER_IDChanged()
    End Sub
    Partial Private Sub OnPERSONAL_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPERSONAL_IDChanged()
    End Sub
    Partial Private Sub OnPREFIX_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPREFIX_NAMEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnSURNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSURNAMEChanged()
    End Sub
    Partial Private Sub OnUSER_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUSER_TYPEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPERMISSION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERMISSION_IDChanged()
    End Sub
    Partial Private Sub OnUSER_ADChanging(value As String)
    End Sub
    Partial Private Sub OnUSER_ADChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._MAS_USER_PERMISSION_DETAILs = New EntitySet(Of MAS_USER_PERMISSION_DETAIL)(AddressOf Me.attach_MAS_USER_PERMISSION_DETAILs, AddressOf Me.detach_MAS_USER_PERMISSION_DETAILs)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property USER_ID() As Integer
		Get
			Return Me._USER_ID
		End Get
		Set
			If ((Me._USER_ID = value)  _
						= false) Then
				Me.OnUSER_IDChanging(value)
				Me.SendPropertyChanging
				Me._USER_ID = value
				Me.SendPropertyChanged("USER_ID")
				Me.OnUSER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSONAL_ID", DbType:="NVarChar(255)")>  _
	Public Property PERSONAL_ID() As String
		Get
			Return Me._PERSONAL_ID
		End Get
		Set
			If (String.Equals(Me._PERSONAL_ID, value) = false) Then
				Me.OnPERSONAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._PERSONAL_ID = value
				Me.SendPropertyChanged("PERSONAL_ID")
				Me.OnPERSONAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX_NAME", DbType:="NVarChar(100)")>  _
	Public Property PREFIX_NAME() As String
		Get
			Return Me._PREFIX_NAME
		End Get
		Set
			If (String.Equals(Me._PREFIX_NAME, value) = false) Then
				Me.OnPREFIX_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX_NAME = value
				Me.SendPropertyChanged("PREFIX_NAME")
				Me.OnPREFIX_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(255)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURNAME", DbType:="NVarChar(255)")>  _
	Public Property SURNAME() As String
		Get
			Return Me._SURNAME
		End Get
		Set
			If (String.Equals(Me._SURNAME, value) = false) Then
				Me.OnSURNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SURNAME = value
				Me.SendPropertyChanged("SURNAME")
				Me.OnSURNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USER_TYPE", DbType:="Int")>  _
	Public Property USER_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._USER_TYPE
		End Get
		Set
			If (Me._USER_TYPE.Equals(value) = false) Then
				Me.OnUSER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._USER_TYPE = value
				Me.SendPropertyChanged("USER_TYPE")
				Me.OnUSER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_DESCRIPTION", DbType:="NVarChar(255)")>  _
	Public Property DEPARTMENT_DESCRIPTION() As String
		Get
			Return Me._DEPARTMENT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_DESCRIPTION, value) = false) Then
				Me.OnDEPARTMENT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_DESCRIPTION = value
				Me.SendPropertyChanged("DEPARTMENT_DESCRIPTION")
				Me.OnDEPARTMENT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERMISSION_ID", DbType:="Int")>  _
	Public Property PERMISSION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PERMISSION_ID
		End Get
		Set
			If (Me._PERMISSION_ID.Equals(value) = false) Then
				Me.OnPERMISSION_IDChanging(value)
				Me.SendPropertyChanging
				Me._PERMISSION_ID = value
				Me.SendPropertyChanged("PERMISSION_ID")
				Me.OnPERMISSION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USER_AD", DbType:="NVarChar(MAX)")>  _
	Public Property USER_AD() As String
		Get
			Return Me._USER_AD
		End Get
		Set
			If (String.Equals(Me._USER_AD, value) = false) Then
				Me.OnUSER_ADChanging(value)
				Me.SendPropertyChanging
				Me._USER_AD = value
				Me.SendPropertyChanged("USER_AD")
				Me.OnUSER_ADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MAS_USER_MAS_USER_PERMISSION_DETAIL", Storage:="_MAS_USER_PERMISSION_DETAILs", ThisKey:="USER_ID", OtherKey:="USER_ID")>  _
	Public Property MAS_USER_PERMISSION_DETAILs() As EntitySet(Of MAS_USER_PERMISSION_DETAIL)
		Get
			Return Me._MAS_USER_PERMISSION_DETAILs
		End Get
		Set
			Me._MAS_USER_PERMISSION_DETAILs.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_MAS_USER_PERMISSION_DETAILs(ByVal entity As MAS_USER_PERMISSION_DETAIL)
		Me.SendPropertyChanging
		entity.MAS_USER = Me
	End Sub
	
	Private Sub detach_MAS_USER_PERMISSION_DETAILs(ByVal entity As MAS_USER_PERMISSION_DETAIL)
		Me.SendPropertyChanging
		entity.MAS_USER = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MONEY_TYPE_NODE")>  _
Partial Public Class MAS_MONEY_TYPE_NODE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MONEY_TYPE_NODE_ID As Integer
	
	Private _HEAD_ID As System.Nullable(Of Integer)
	
	Private _CHILD_ID As System.Nullable(Of Integer)
	
	Private _IS_ENABLE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMONEY_TYPE_NODE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMONEY_TYPE_NODE_IDChanged()
    End Sub
    Partial Private Sub OnHEAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_IDChanged()
    End Sub
    Partial Private Sub OnCHILD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHILD_IDChanged()
    End Sub
    Partial Private Sub OnIS_ENABLEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_ENABLEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONEY_TYPE_NODE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MONEY_TYPE_NODE_ID() As Integer
		Get
			Return Me._MONEY_TYPE_NODE_ID
		End Get
		Set
			If ((Me._MONEY_TYPE_NODE_ID = value)  _
						= false) Then
				Me.OnMONEY_TYPE_NODE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MONEY_TYPE_NODE_ID = value
				Me.SendPropertyChanged("MONEY_TYPE_NODE_ID")
				Me.OnMONEY_TYPE_NODE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_ID", DbType:="Int")>  _
	Public Property HEAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_ID
		End Get
		Set
			If (Me._HEAD_ID.Equals(value) = false) Then
				Me.OnHEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_ID = value
				Me.SendPropertyChanged("HEAD_ID")
				Me.OnHEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHILD_ID", DbType:="Int")>  _
	Public Property CHILD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CHILD_ID
		End Get
		Set
			If (Me._CHILD_ID.Equals(value) = false) Then
				Me.OnCHILD_IDChanging(value)
				Me.SendPropertyChanging
				Me._CHILD_ID = value
				Me.SendPropertyChanged("CHILD_ID")
				Me.OnCHILD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ENABLE", DbType:="Bit")>  _
	Public Property IS_ENABLE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_ENABLE
		End Get
		Set
			If (Me._IS_ENABLE.Equals(value) = false) Then
				Me.OnIS_ENABLEChanging(value)
				Me.SendPropertyChanging
				Me._IS_ENABLE = value
				Me.SendPropertyChanged("IS_ENABLE")
				Me.OnIS_ENABLEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MONEY_TYPE")>  _
Partial Public Class MAS_MONEY_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MONEY_TYPE_ID As Integer
	
	Private _HEAD_MONEY_TYPE_ID As System.Nullable(Of Integer)
	
	Private _MONEY_TYPE_CODE As System.Nullable(Of Integer)
	
	Private _MONEY_TYPE_DESCRIPTION As String
	
	Private _MONEY_TYPE_SHORT_DESCRIPTION As String
	
	Private _BANK_ACCOUNT_ID As System.Nullable(Of Integer)
	
	Private _BUDGET_YEAR As System.Nullable(Of Integer)
	
	Private _MONEY_AMOUNT As System.Nullable(Of Decimal)
	
	Private _TYPE_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMONEY_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMONEY_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnHEAD_MONEY_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_MONEY_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnMONEY_TYPE_CODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMONEY_TYPE_CODEChanged()
    End Sub
    Partial Private Sub OnMONEY_TYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnMONEY_TYPE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnMONEY_TYPE_SHORT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnMONEY_TYPE_SHORT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnBANK_ACCOUNT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBANK_ACCOUNT_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_YEARChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_YEARChanged()
    End Sub
    Partial Private Sub OnMONEY_AMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMONEY_AMOUNTChanged()
    End Sub
    Partial Private Sub OnTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONEY_TYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MONEY_TYPE_ID() As Integer
		Get
			Return Me._MONEY_TYPE_ID
		End Get
		Set
			If ((Me._MONEY_TYPE_ID = value)  _
						= false) Then
				Me.OnMONEY_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MONEY_TYPE_ID = value
				Me.SendPropertyChanged("MONEY_TYPE_ID")
				Me.OnMONEY_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_MONEY_TYPE_ID", DbType:="Int")>  _
	Public Property HEAD_MONEY_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_MONEY_TYPE_ID
		End Get
		Set
			If (Me._HEAD_MONEY_TYPE_ID.Equals(value) = false) Then
				Me.OnHEAD_MONEY_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_MONEY_TYPE_ID = value
				Me.SendPropertyChanged("HEAD_MONEY_TYPE_ID")
				Me.OnHEAD_MONEY_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONEY_TYPE_CODE", DbType:="Int")>  _
	Public Property MONEY_TYPE_CODE() As System.Nullable(Of Integer)
		Get
			Return Me._MONEY_TYPE_CODE
		End Get
		Set
			If (Me._MONEY_TYPE_CODE.Equals(value) = false) Then
				Me.OnMONEY_TYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MONEY_TYPE_CODE = value
				Me.SendPropertyChanged("MONEY_TYPE_CODE")
				Me.OnMONEY_TYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONEY_TYPE_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property MONEY_TYPE_DESCRIPTION() As String
		Get
			Return Me._MONEY_TYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._MONEY_TYPE_DESCRIPTION, value) = false) Then
				Me.OnMONEY_TYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._MONEY_TYPE_DESCRIPTION = value
				Me.SendPropertyChanged("MONEY_TYPE_DESCRIPTION")
				Me.OnMONEY_TYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONEY_TYPE_SHORT_DESCRIPTION", DbType:="NVarChar(255)")>  _
	Public Property MONEY_TYPE_SHORT_DESCRIPTION() As String
		Get
			Return Me._MONEY_TYPE_SHORT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._MONEY_TYPE_SHORT_DESCRIPTION, value) = false) Then
				Me.OnMONEY_TYPE_SHORT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._MONEY_TYPE_SHORT_DESCRIPTION = value
				Me.SendPropertyChanged("MONEY_TYPE_SHORT_DESCRIPTION")
				Me.OnMONEY_TYPE_SHORT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_ACCOUNT_ID", DbType:="Int")>  _
	Public Property BANK_ACCOUNT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BANK_ACCOUNT_ID
		End Get
		Set
			If (Me._BANK_ACCOUNT_ID.Equals(value) = false) Then
				Me.OnBANK_ACCOUNT_IDChanging(value)
				Me.SendPropertyChanging
				Me._BANK_ACCOUNT_ID = value
				Me.SendPropertyChanged("BANK_ACCOUNT_ID")
				Me.OnBANK_ACCOUNT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_YEAR", DbType:="Int")>  _
	Public Property BUDGET_YEAR() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_YEAR
		End Get
		Set
			If (Me._BUDGET_YEAR.Equals(value) = false) Then
				Me.OnBUDGET_YEARChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_YEAR = value
				Me.SendPropertyChanged("BUDGET_YEAR")
				Me.OnBUDGET_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONEY_AMOUNT", DbType:="Money")>  _
	Public Property MONEY_AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._MONEY_AMOUNT
		End Get
		Set
			If (Me._MONEY_AMOUNT.Equals(value) = false) Then
				Me.OnMONEY_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._MONEY_AMOUNT = value
				Me.SendPropertyChanged("MONEY_AMOUNT")
				Me.OnMONEY_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_ID", DbType:="Int")>  _
	Public Property TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_ID
		End Get
		Set
			If (Me._TYPE_ID.Equals(value) = false) Then
				Me.OnTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_ID = value
				Me.SendPropertyChanged("TYPE_ID")
				Me.OnTYPE_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_K_TYPE")>  _
Partial Public Class MAS_K_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _K_TYPE_ID As Integer
	
	Private _K_TYPE_NAME As String
	
	Private _K_TYPE_CODE As String
	
	Private _K_TYPE_EX1 As String
	
	Private _K_TYPE_EX2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnK_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnK_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnK_TYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnK_TYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnK_TYPE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnK_TYPE_CODEChanged()
    End Sub
    Partial Private Sub OnK_TYPE_EX1Changing(value As String)
    End Sub
    Partial Private Sub OnK_TYPE_EX1Changed()
    End Sub
    Partial Private Sub OnK_TYPE_EX2Changing(value As String)
    End Sub
    Partial Private Sub OnK_TYPE_EX2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_K_TYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property K_TYPE_ID() As Integer
		Get
			Return Me._K_TYPE_ID
		End Get
		Set
			If ((Me._K_TYPE_ID = value)  _
						= false) Then
				Me.OnK_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._K_TYPE_ID = value
				Me.SendPropertyChanged("K_TYPE_ID")
				Me.OnK_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_K_TYPE_NAME", DbType:="NVarChar(50)")>  _
	Public Property K_TYPE_NAME() As String
		Get
			Return Me._K_TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._K_TYPE_NAME, value) = false) Then
				Me.OnK_TYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._K_TYPE_NAME = value
				Me.SendPropertyChanged("K_TYPE_NAME")
				Me.OnK_TYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_K_TYPE_CODE", DbType:="NVarChar(50)")>  _
	Public Property K_TYPE_CODE() As String
		Get
			Return Me._K_TYPE_CODE
		End Get
		Set
			If (String.Equals(Me._K_TYPE_CODE, value) = false) Then
				Me.OnK_TYPE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._K_TYPE_CODE = value
				Me.SendPropertyChanged("K_TYPE_CODE")
				Me.OnK_TYPE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_K_TYPE_EX1", DbType:="NVarChar(50)")>  _
	Public Property K_TYPE_EX1() As String
		Get
			Return Me._K_TYPE_EX1
		End Get
		Set
			If (String.Equals(Me._K_TYPE_EX1, value) = false) Then
				Me.OnK_TYPE_EX1Changing(value)
				Me.SendPropertyChanging
				Me._K_TYPE_EX1 = value
				Me.SendPropertyChanged("K_TYPE_EX1")
				Me.OnK_TYPE_EX1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_K_TYPE_EX2", DbType:="NVarChar(50)")>  _
	Public Property K_TYPE_EX2() As String
		Get
			Return Me._K_TYPE_EX2
		End Get
		Set
			If (String.Equals(Me._K_TYPE_EX2, value) = false) Then
				Me.OnK_TYPE_EX2Changing(value)
				Me.SendPropertyChanging
				Me._K_TYPE_EX2 = value
				Me.SendPropertyChanged("K_TYPE_EX2")
				Me.OnK_TYPE_EX2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DEPARTMENT_NODE")>  _
Partial Public Class MAS_DEPARTMENT_NODE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DEPARTMENT_NODE_ID As Integer
	
	Private _HEAD_ID As System.Nullable(Of Integer)
	
	Private _CHILD_ID As System.Nullable(Of Integer)
	
	Private _IS_ENABLE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDEPARTMENT_NODE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDEPARTMENT_NODE_IDChanged()
    End Sub
    Partial Private Sub OnHEAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_IDChanged()
    End Sub
    Partial Private Sub OnCHILD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHILD_IDChanged()
    End Sub
    Partial Private Sub OnIS_ENABLEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_ENABLEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_NODE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DEPARTMENT_NODE_ID() As Integer
		Get
			Return Me._DEPARTMENT_NODE_ID
		End Get
		Set
			If ((Me._DEPARTMENT_NODE_ID = value)  _
						= false) Then
				Me.OnDEPARTMENT_NODE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_NODE_ID = value
				Me.SendPropertyChanged("DEPARTMENT_NODE_ID")
				Me.OnDEPARTMENT_NODE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_ID", DbType:="Int")>  _
	Public Property HEAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_ID
		End Get
		Set
			If (Me._HEAD_ID.Equals(value) = false) Then
				Me.OnHEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_ID = value
				Me.SendPropertyChanged("HEAD_ID")
				Me.OnHEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHILD_ID", DbType:="Int")>  _
	Public Property CHILD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CHILD_ID
		End Get
		Set
			If (Me._CHILD_ID.Equals(value) = false) Then
				Me.OnCHILD_IDChanging(value)
				Me.SendPropertyChanging
				Me._CHILD_ID = value
				Me.SendPropertyChanged("CHILD_ID")
				Me.OnCHILD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ENABLE", DbType:="Bit")>  _
	Public Property IS_ENABLE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_ENABLE
		End Get
		Set
			If (Me._IS_ENABLE.Equals(value) = false) Then
				Me.OnIS_ENABLEChanging(value)
				Me.SendPropertyChanging
				Me._IS_ENABLE = value
				Me.SendPropertyChanged("IS_ENABLE")
				Me.OnIS_ENABLEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DEPARTMENT")>  _
Partial Public Class MAS_DEPARTMENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DEPARTMENT_ID As Integer
	
	Private _DEPARTMENT_HEAD_ID As System.Nullable(Of Integer)
	
	Private _DEPARTMENT_CHILD_ID As System.Nullable(Of Integer)
	
	Private _DEPARTMENT_CODE As String
	
	Private _DEPARTMENT_DESCRIPTION As String
	
	Private _DEPARTMENT_SHORT_DESCRIPTION As String
	
	Private _DEPARTMENT_IS_OUTSIDE As System.Nullable(Of Boolean)
	
	Private _DEPARTMENT_PLACE As String
	
	Private _DEPARTMENT_TYPE_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_HEAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_HEAD_IDChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_CHILD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_CHILD_IDChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_CODEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_SHORT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_SHORT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_IS_OUTSIDEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDEPARTMENT_IS_OUTSIDEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_PLACEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_PLACEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_TYPE_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DEPARTMENT_ID() As Integer
		Get
			Return Me._DEPARTMENT_ID
		End Get
		Set
			If ((Me._DEPARTMENT_ID = value)  _
						= false) Then
				Me.OnDEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ID = value
				Me.SendPropertyChanged("DEPARTMENT_ID")
				Me.OnDEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_HEAD_ID", DbType:="Int")>  _
	Public Property DEPARTMENT_HEAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_HEAD_ID
		End Get
		Set
			If (Me._DEPARTMENT_HEAD_ID.Equals(value) = false) Then
				Me.OnDEPARTMENT_HEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_HEAD_ID = value
				Me.SendPropertyChanged("DEPARTMENT_HEAD_ID")
				Me.OnDEPARTMENT_HEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_CHILD_ID", DbType:="Int")>  _
	Public Property DEPARTMENT_CHILD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_CHILD_ID
		End Get
		Set
			If (Me._DEPARTMENT_CHILD_ID.Equals(value) = false) Then
				Me.OnDEPARTMENT_CHILD_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_CHILD_ID = value
				Me.SendPropertyChanged("DEPARTMENT_CHILD_ID")
				Me.OnDEPARTMENT_CHILD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_CODE", DbType:="NVarChar(255)")>  _
	Public Property DEPARTMENT_CODE() As String
		Get
			Return Me._DEPARTMENT_CODE
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_CODE, value) = false) Then
				Me.OnDEPARTMENT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_CODE = value
				Me.SendPropertyChanged("DEPARTMENT_CODE")
				Me.OnDEPARTMENT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_DESCRIPTION() As String
		Get
			Return Me._DEPARTMENT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_DESCRIPTION, value) = false) Then
				Me.OnDEPARTMENT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_DESCRIPTION = value
				Me.SendPropertyChanged("DEPARTMENT_DESCRIPTION")
				Me.OnDEPARTMENT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_SHORT_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_SHORT_DESCRIPTION() As String
		Get
			Return Me._DEPARTMENT_SHORT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_SHORT_DESCRIPTION, value) = false) Then
				Me.OnDEPARTMENT_SHORT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_SHORT_DESCRIPTION = value
				Me.SendPropertyChanged("DEPARTMENT_SHORT_DESCRIPTION")
				Me.OnDEPARTMENT_SHORT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_IS_OUTSIDE", DbType:="Bit")>  _
	Public Property DEPARTMENT_IS_OUTSIDE() As System.Nullable(Of Boolean)
		Get
			Return Me._DEPARTMENT_IS_OUTSIDE
		End Get
		Set
			If (Me._DEPARTMENT_IS_OUTSIDE.Equals(value) = false) Then
				Me.OnDEPARTMENT_IS_OUTSIDEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_IS_OUTSIDE = value
				Me.SendPropertyChanged("DEPARTMENT_IS_OUTSIDE")
				Me.OnDEPARTMENT_IS_OUTSIDEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_PLACE", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_PLACE() As String
		Get
			Return Me._DEPARTMENT_PLACE
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_PLACE, value) = false) Then
				Me.OnDEPARTMENT_PLACEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_PLACE = value
				Me.SendPropertyChanged("DEPARTMENT_PLACE")
				Me.OnDEPARTMENT_PLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_TYPE_ID", DbType:="Int")>  _
	Public Property DEPARTMENT_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_TYPE_ID
		End Get
		Set
			If (Me._DEPARTMENT_TYPE_ID.Equals(value) = false) Then
				Me.OnDEPARTMENT_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_TYPE_ID = value
				Me.SendPropertyChanged("DEPARTMENT_TYPE_ID")
				Me.OnDEPARTMENT_TYPE_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OVERLAP_HEAD")>  _
Partial Public Class OVERLAP_HEAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OVERLAP_HEAD_ID As Integer
	
	Private _BUDGET_YEAR As System.Nullable(Of Integer)
	
	Private _DEPARTMENT_ID As System.Nullable(Of Integer)
	
	Private _SUB_ACTIVITY_ID As System.Nullable(Of Integer)
	
	Private _AMOUNT As System.Nullable(Of Decimal)
	
	Private _DESCRIPTION As String
	
	Private _OVERLAP_DATE As System.Nullable(Of Date)
	
	Private _DOC_RECIEVE_DATE As System.Nullable(Of Date)
	
	Private _DOC_NUMBER As String
	
	Private _DOC_DATE As System.Nullable(Of Date)
	
	Private _EXPAND_AMOUNT As System.Nullable(Of Decimal)
	
	Private _EXPAND_DATE As System.Nullable(Of Date)
	
	Private _IS_OVERLAP_EXPAND As System.Nullable(Of Boolean)
	
	Private _BUDGET_PLAN_ID As System.Nullable(Of Integer)
	
	Private _IS_ENABLE As System.Nullable(Of Boolean)
	
	Private _OVERLAP_APPROVE As System.Nullable(Of Boolean)
	
	Private _OVERLAP_TYPE_ID As System.Nullable(Of Integer)
	
	Private _PATLIST_ID As System.Nullable(Of Integer)
	
	Private _BILL_AND_DEBTOR_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOVERLAP_HEAD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOVERLAP_HEAD_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_YEARChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_YEARChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnSUB_ACTIVITY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_ACTIVITY_IDChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnOVERLAP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnOVERLAP_DATEChanged()
    End Sub
    Partial Private Sub OnDOC_RECIEVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOC_RECIEVE_DATEChanged()
    End Sub
    Partial Private Sub OnDOC_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnDOC_NUMBERChanged()
    End Sub
    Partial Private Sub OnDOC_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOC_DATEChanged()
    End Sub
    Partial Private Sub OnEXPAND_AMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnEXPAND_AMOUNTChanged()
    End Sub
    Partial Private Sub OnEXPAND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXPAND_DATEChanged()
    End Sub
    Partial Private Sub OnIS_OVERLAP_EXPANDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_OVERLAP_EXPANDChanged()
    End Sub
    Partial Private Sub OnBUDGET_PLAN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_PLAN_IDChanged()
    End Sub
    Partial Private Sub OnIS_ENABLEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_ENABLEChanged()
    End Sub
    Partial Private Sub OnOVERLAP_APPROVEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOVERLAP_APPROVEChanged()
    End Sub
    Partial Private Sub OnOVERLAP_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOVERLAP_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnPATLIST_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPATLIST_IDChanged()
    End Sub
    Partial Private Sub OnBILL_AND_DEBTOR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBILL_AND_DEBTOR_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OVERLAP_HEAD_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property OVERLAP_HEAD_ID() As Integer
		Get
			Return Me._OVERLAP_HEAD_ID
		End Get
		Set
			If ((Me._OVERLAP_HEAD_ID = value)  _
						= false) Then
				Me.OnOVERLAP_HEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._OVERLAP_HEAD_ID = value
				Me.SendPropertyChanged("OVERLAP_HEAD_ID")
				Me.OnOVERLAP_HEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_YEAR", DbType:="Int")>  _
	Public Property BUDGET_YEAR() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_YEAR
		End Get
		Set
			If (Me._BUDGET_YEAR.Equals(value) = false) Then
				Me.OnBUDGET_YEARChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_YEAR = value
				Me.SendPropertyChanged("BUDGET_YEAR")
				Me.OnBUDGET_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ID", DbType:="Int")>  _
	Public Property DEPARTMENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_ID
		End Get
		Set
			If (Me._DEPARTMENT_ID.Equals(value) = false) Then
				Me.OnDEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ID = value
				Me.SendPropertyChanged("DEPARTMENT_ID")
				Me.OnDEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_ACTIVITY_ID", DbType:="Int")>  _
	Public Property SUB_ACTIVITY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_ACTIVITY_ID
		End Get
		Set
			If (Me._SUB_ACTIVITY_ID.Equals(value) = false) Then
				Me.OnSUB_ACTIVITY_IDChanging(value)
				Me.SendPropertyChanging
				Me._SUB_ACTIVITY_ID = value
				Me.SendPropertyChanged("SUB_ACTIVITY_ID")
				Me.OnSUB_ACTIVITY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="Money")>  _
	Public Property AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (Me._AMOUNT.Equals(value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OVERLAP_DATE", DbType:="DateTime")>  _
	Public Property OVERLAP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._OVERLAP_DATE
		End Get
		Set
			If (Me._OVERLAP_DATE.Equals(value) = false) Then
				Me.OnOVERLAP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._OVERLAP_DATE = value
				Me.SendPropertyChanged("OVERLAP_DATE")
				Me.OnOVERLAP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_RECIEVE_DATE", DbType:="DateTime")>  _
	Public Property DOC_RECIEVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOC_RECIEVE_DATE
		End Get
		Set
			If (Me._DOC_RECIEVE_DATE.Equals(value) = false) Then
				Me.OnDOC_RECIEVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOC_RECIEVE_DATE = value
				Me.SendPropertyChanged("DOC_RECIEVE_DATE")
				Me.OnDOC_RECIEVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property DOC_NUMBER() As String
		Get
			Return Me._DOC_NUMBER
		End Get
		Set
			If (String.Equals(Me._DOC_NUMBER, value) = false) Then
				Me.OnDOC_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._DOC_NUMBER = value
				Me.SendPropertyChanged("DOC_NUMBER")
				Me.OnDOC_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_DATE", DbType:="DateTime")>  _
	Public Property DOC_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOC_DATE
		End Get
		Set
			If (Me._DOC_DATE.Equals(value) = false) Then
				Me.OnDOC_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOC_DATE = value
				Me.SendPropertyChanged("DOC_DATE")
				Me.OnDOC_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPAND_AMOUNT", DbType:="Money")>  _
	Public Property EXPAND_AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._EXPAND_AMOUNT
		End Get
		Set
			If (Me._EXPAND_AMOUNT.Equals(value) = false) Then
				Me.OnEXPAND_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._EXPAND_AMOUNT = value
				Me.SendPropertyChanged("EXPAND_AMOUNT")
				Me.OnEXPAND_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPAND_DATE", DbType:="DateTime")>  _
	Public Property EXPAND_DATE() As System.Nullable(Of Date)
		Get
			Return Me._EXPAND_DATE
		End Get
		Set
			If (Me._EXPAND_DATE.Equals(value) = false) Then
				Me.OnEXPAND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._EXPAND_DATE = value
				Me.SendPropertyChanged("EXPAND_DATE")
				Me.OnEXPAND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_OVERLAP_EXPAND", DbType:="Bit")>  _
	Public Property IS_OVERLAP_EXPAND() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_OVERLAP_EXPAND
		End Get
		Set
			If (Me._IS_OVERLAP_EXPAND.Equals(value) = false) Then
				Me.OnIS_OVERLAP_EXPANDChanging(value)
				Me.SendPropertyChanging
				Me._IS_OVERLAP_EXPAND = value
				Me.SendPropertyChanged("IS_OVERLAP_EXPAND")
				Me.OnIS_OVERLAP_EXPANDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_PLAN_ID", DbType:="Int")>  _
	Public Property BUDGET_PLAN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_PLAN_ID
		End Get
		Set
			If (Me._BUDGET_PLAN_ID.Equals(value) = false) Then
				Me.OnBUDGET_PLAN_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_PLAN_ID = value
				Me.SendPropertyChanged("BUDGET_PLAN_ID")
				Me.OnBUDGET_PLAN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ENABLE", DbType:="Bit")>  _
	Public Property IS_ENABLE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_ENABLE
		End Get
		Set
			If (Me._IS_ENABLE.Equals(value) = false) Then
				Me.OnIS_ENABLEChanging(value)
				Me.SendPropertyChanging
				Me._IS_ENABLE = value
				Me.SendPropertyChanged("IS_ENABLE")
				Me.OnIS_ENABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OVERLAP_APPROVE", DbType:="Bit")>  _
	Public Property OVERLAP_APPROVE() As System.Nullable(Of Boolean)
		Get
			Return Me._OVERLAP_APPROVE
		End Get
		Set
			If (Me._OVERLAP_APPROVE.Equals(value) = false) Then
				Me.OnOVERLAP_APPROVEChanging(value)
				Me.SendPropertyChanging
				Me._OVERLAP_APPROVE = value
				Me.SendPropertyChanged("OVERLAP_APPROVE")
				Me.OnOVERLAP_APPROVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OVERLAP_TYPE_ID", DbType:="Int")>  _
	Public Property OVERLAP_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._OVERLAP_TYPE_ID
		End Get
		Set
			If (Me._OVERLAP_TYPE_ID.Equals(value) = false) Then
				Me.OnOVERLAP_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._OVERLAP_TYPE_ID = value
				Me.SendPropertyChanged("OVERLAP_TYPE_ID")
				Me.OnOVERLAP_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATLIST_ID", DbType:="Int")>  _
	Public Property PATLIST_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PATLIST_ID
		End Get
		Set
			If (Me._PATLIST_ID.Equals(value) = false) Then
				Me.OnPATLIST_IDChanging(value)
				Me.SendPropertyChanging
				Me._PATLIST_ID = value
				Me.SendPropertyChanged("PATLIST_ID")
				Me.OnPATLIST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BILL_AND_DEBTOR_ID", DbType:="Int")>  _
	Public Property BILL_AND_DEBTOR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BILL_AND_DEBTOR_ID
		End Get
		Set
			If (Me._BILL_AND_DEBTOR_ID.Equals(value) = false) Then
				Me.OnBILL_AND_DEBTOR_IDChanging(value)
				Me.SendPropertyChanging
				Me._BILL_AND_DEBTOR_ID = value
				Me.SendPropertyChanged("BILL_AND_DEBTOR_ID")
				Me.OnBILL_AND_DEBTOR_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RETURN_DESCRIPTION")>  _
Partial Public Class MAS_RETURN_DESCRIPTION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RETURN_DESCRIPTION_ID As Integer
	
	Private _RETURN_DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRETURN_DESCRIPTION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRETURN_DESCRIPTION_IDChanged()
    End Sub
    Partial Private Sub OnRETURN_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnRETURN_DESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RETURN_DESCRIPTION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RETURN_DESCRIPTION_ID() As Integer
		Get
			Return Me._RETURN_DESCRIPTION_ID
		End Get
		Set
			If ((Me._RETURN_DESCRIPTION_ID = value)  _
						= false) Then
				Me.OnRETURN_DESCRIPTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._RETURN_DESCRIPTION_ID = value
				Me.SendPropertyChanged("RETURN_DESCRIPTION_ID")
				Me.OnRETURN_DESCRIPTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RETURN_DESCRIPTION", DbType:="NVarChar(255)")>  _
	Public Property RETURN_DESCRIPTION() As String
		Get
			Return Me._RETURN_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._RETURN_DESCRIPTION, value) = false) Then
				Me.OnRETURN_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._RETURN_DESCRIPTION = value
				Me.SendPropertyChanged("RETURN_DESCRIPTION")
				Me.OnRETURN_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SUB_BUDGET")>  _
Partial Public Class MAS_SUB_BUDGET
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SUB_BUDGET_ID As Integer
	
	Private _SUB_BUDGET_CODE As String
	
	Private _SUB_BUDGET_DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSUB_BUDGET_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSUB_BUDGET_IDChanged()
    End Sub
    Partial Private Sub OnSUB_BUDGET_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSUB_BUDGET_CODEChanged()
    End Sub
    Partial Private Sub OnSUB_BUDGET_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnSUB_BUDGET_DESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_BUDGET_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SUB_BUDGET_ID() As Integer
		Get
			Return Me._SUB_BUDGET_ID
		End Get
		Set
			If ((Me._SUB_BUDGET_ID = value)  _
						= false) Then
				Me.OnSUB_BUDGET_IDChanging(value)
				Me.SendPropertyChanging
				Me._SUB_BUDGET_ID = value
				Me.SendPropertyChanged("SUB_BUDGET_ID")
				Me.OnSUB_BUDGET_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_BUDGET_CODE", DbType:="NVarChar(50)")>  _
	Public Property SUB_BUDGET_CODE() As String
		Get
			Return Me._SUB_BUDGET_CODE
		End Get
		Set
			If (String.Equals(Me._SUB_BUDGET_CODE, value) = false) Then
				Me.OnSUB_BUDGET_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_BUDGET_CODE = value
				Me.SendPropertyChanged("SUB_BUDGET_CODE")
				Me.OnSUB_BUDGET_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_BUDGET_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property SUB_BUDGET_DESCRIPTION() As String
		Get
			Return Me._SUB_BUDGET_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._SUB_BUDGET_DESCRIPTION, value) = false) Then
				Me.OnSUB_BUDGET_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._SUB_BUDGET_DESCRIPTION = value
				Me.SendPropertyChanged("SUB_BUDGET_DESCRIPTION")
				Me.OnSUB_BUDGET_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_IMPORTANT_USER")>  _
Partial Public Class MAS_IMPORTANT_USER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _PREFIX As String
	
	Private _NAME As String
	
	Private _SURNAME As String
	
	Private _POSITION As String
	
	Private _SEQ As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnPREFIXChanging(value As String)
    End Sub
    Partial Private Sub OnPREFIXChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnSURNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSURNAMEChanged()
    End Sub
    Partial Private Sub OnPOSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITIONChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX", DbType:="NVarChar(50)")>  _
	Public Property PREFIX() As String
		Get
			Return Me._PREFIX
		End Get
		Set
			If (String.Equals(Me._PREFIX, value) = false) Then
				Me.OnPREFIXChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX = value
				Me.SendPropertyChanged("PREFIX")
				Me.OnPREFIXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SURNAME() As String
		Get
			Return Me._SURNAME
		End Get
		Set
			If (String.Equals(Me._SURNAME, value) = false) Then
				Me.OnSURNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SURNAME = value
				Me.SendPropertyChanged("SURNAME")
				Me.OnSURNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION() As String
		Get
			Return Me._POSITION
		End Get
		Set
			If (String.Equals(Me._POSITION, value) = false) Then
				Me.OnPOSITIONChanging(value)
				Me.SendPropertyChanging
				Me._POSITION = value
				Me.SendPropertyChanged("POSITION")
				Me.OnPOSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MENU")>  _
Partial Public Class MAS_MENU
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MENU_ID As Integer
	
	Private _MENU_PARENT_ID As System.Nullable(Of Integer)
	
	Private _MENU_CHILD_ID As System.Nullable(Of Integer)
	
	Private _MENU_NAME As String
	
	Private _MENU_SEQ As System.Nullable(Of Integer)
	
	Private _MENU_URL As String
	
	Private _MENU_TARGET As String
	
	Private _MENU_PERMISSION_ID As System.Nullable(Of Integer)
	
	Private _MENU_GROUP As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMENU_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMENU_IDChanged()
    End Sub
    Partial Private Sub OnMENU_PARENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENU_PARENT_IDChanged()
    End Sub
    Partial Private Sub OnMENU_CHILD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENU_CHILD_IDChanged()
    End Sub
    Partial Private Sub OnMENU_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMENU_NAMEChanged()
    End Sub
    Partial Private Sub OnMENU_SEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENU_SEQChanged()
    End Sub
    Partial Private Sub OnMENU_URLChanging(value As String)
    End Sub
    Partial Private Sub OnMENU_URLChanged()
    End Sub
    Partial Private Sub OnMENU_TARGETChanging(value As String)
    End Sub
    Partial Private Sub OnMENU_TARGETChanged()
    End Sub
    Partial Private Sub OnMENU_PERMISSION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENU_PERMISSION_IDChanged()
    End Sub
    Partial Private Sub OnMENU_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENU_GROUPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MENU_ID() As Integer
		Get
			Return Me._MENU_ID
		End Get
		Set
			If ((Me._MENU_ID = value)  _
						= false) Then
				Me.OnMENU_IDChanging(value)
				Me.SendPropertyChanging
				Me._MENU_ID = value
				Me.SendPropertyChanged("MENU_ID")
				Me.OnMENU_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_PARENT_ID", DbType:="Int")>  _
	Public Property MENU_PARENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MENU_PARENT_ID
		End Get
		Set
			If (Me._MENU_PARENT_ID.Equals(value) = false) Then
				Me.OnMENU_PARENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._MENU_PARENT_ID = value
				Me.SendPropertyChanged("MENU_PARENT_ID")
				Me.OnMENU_PARENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_CHILD_ID", DbType:="Int")>  _
	Public Property MENU_CHILD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MENU_CHILD_ID
		End Get
		Set
			If (Me._MENU_CHILD_ID.Equals(value) = false) Then
				Me.OnMENU_CHILD_IDChanging(value)
				Me.SendPropertyChanging
				Me._MENU_CHILD_ID = value
				Me.SendPropertyChanged("MENU_CHILD_ID")
				Me.OnMENU_CHILD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_NAME", DbType:="NVarChar(255)")>  _
	Public Property MENU_NAME() As String
		Get
			Return Me._MENU_NAME
		End Get
		Set
			If (String.Equals(Me._MENU_NAME, value) = false) Then
				Me.OnMENU_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MENU_NAME = value
				Me.SendPropertyChanged("MENU_NAME")
				Me.OnMENU_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_SEQ", DbType:="Int")>  _
	Public Property MENU_SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._MENU_SEQ
		End Get
		Set
			If (Me._MENU_SEQ.Equals(value) = false) Then
				Me.OnMENU_SEQChanging(value)
				Me.SendPropertyChanging
				Me._MENU_SEQ = value
				Me.SendPropertyChanged("MENU_SEQ")
				Me.OnMENU_SEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_URL", DbType:="NVarChar(255)")>  _
	Public Property MENU_URL() As String
		Get
			Return Me._MENU_URL
		End Get
		Set
			If (String.Equals(Me._MENU_URL, value) = false) Then
				Me.OnMENU_URLChanging(value)
				Me.SendPropertyChanging
				Me._MENU_URL = value
				Me.SendPropertyChanged("MENU_URL")
				Me.OnMENU_URLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_TARGET", DbType:="NVarChar(50)")>  _
	Public Property MENU_TARGET() As String
		Get
			Return Me._MENU_TARGET
		End Get
		Set
			If (String.Equals(Me._MENU_TARGET, value) = false) Then
				Me.OnMENU_TARGETChanging(value)
				Me.SendPropertyChanging
				Me._MENU_TARGET = value
				Me.SendPropertyChanged("MENU_TARGET")
				Me.OnMENU_TARGETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_PERMISSION_ID", DbType:="Int")>  _
	Public Property MENU_PERMISSION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MENU_PERMISSION_ID
		End Get
		Set
			If (Me._MENU_PERMISSION_ID.Equals(value) = false) Then
				Me.OnMENU_PERMISSION_IDChanging(value)
				Me.SendPropertyChanging
				Me._MENU_PERMISSION_ID = value
				Me.SendPropertyChanged("MENU_PERMISSION_ID")
				Me.OnMENU_PERMISSION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_GROUP", DbType:="Int")>  _
	Public Property MENU_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._MENU_GROUP
		End Get
		Set
			If (Me._MENU_GROUP.Equals(value) = false) Then
				Me.OnMENU_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._MENU_GROUP = value
				Me.SendPropertyChanged("MENU_GROUP")
				Me.OnMENU_GROUPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TBL_PRINT_CHECK_HISTORY")>  _
Partial Public Class TBL_PRINT_CHECK_HISTORY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _BILL_ID As System.Nullable(Of Integer)
	
	Private _CHECK_NUMBER As String
	
	Private _PRINT_DATE As System.Nullable(Of Date)
	
	Private _PRINT_DATE_STR As String
	
	Private _BILL_TYPE As System.Nullable(Of Integer)
	
	Private _PRINT_COUNT As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnBILL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBILL_IDChanged()
    End Sub
    Partial Private Sub OnCHECK_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_NUMBERChanged()
    End Sub
    Partial Private Sub OnPRINT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPRINT_DATEChanged()
    End Sub
    Partial Private Sub OnPRINT_DATE_STRChanging(value As String)
    End Sub
    Partial Private Sub OnPRINT_DATE_STRChanged()
    End Sub
    Partial Private Sub OnBILL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBILL_TYPEChanged()
    End Sub
    Partial Private Sub OnPRINT_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRINT_COUNTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BILL_ID", DbType:="Int")>  _
	Public Property BILL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BILL_ID
		End Get
		Set
			If (Me._BILL_ID.Equals(value) = false) Then
				Me.OnBILL_IDChanging(value)
				Me.SendPropertyChanging
				Me._BILL_ID = value
				Me.SendPropertyChanged("BILL_ID")
				Me.OnBILL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_NUMBER", DbType:="NVarChar(255)")>  _
	Public Property CHECK_NUMBER() As String
		Get
			Return Me._CHECK_NUMBER
		End Get
		Set
			If (String.Equals(Me._CHECK_NUMBER, value) = false) Then
				Me.OnCHECK_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_NUMBER = value
				Me.SendPropertyChanged("CHECK_NUMBER")
				Me.OnCHECK_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINT_DATE", DbType:="DateTime")>  _
	Public Property PRINT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PRINT_DATE
		End Get
		Set
			If (Me._PRINT_DATE.Equals(value) = false) Then
				Me.OnPRINT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PRINT_DATE = value
				Me.SendPropertyChanged("PRINT_DATE")
				Me.OnPRINT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINT_DATE_STR", DbType:="NVarChar(50)")>  _
	Public Property PRINT_DATE_STR() As String
		Get
			Return Me._PRINT_DATE_STR
		End Get
		Set
			If (String.Equals(Me._PRINT_DATE_STR, value) = false) Then
				Me.OnPRINT_DATE_STRChanging(value)
				Me.SendPropertyChanging
				Me._PRINT_DATE_STR = value
				Me.SendPropertyChanged("PRINT_DATE_STR")
				Me.OnPRINT_DATE_STRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BILL_TYPE", DbType:="Int")>  _
	Public Property BILL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._BILL_TYPE
		End Get
		Set
			If (Me._BILL_TYPE.Equals(value) = false) Then
				Me.OnBILL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._BILL_TYPE = value
				Me.SendPropertyChanged("BILL_TYPE")
				Me.OnBILL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINT_COUNT", DbType:="Int")>  _
	Public Property PRINT_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._PRINT_COUNT
		End Get
		Set
			If (Me._PRINT_COUNT.Equals(value) = false) Then
				Me.OnPRINT_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._PRINT_COUNT = value
				Me.SendPropertyChanged("PRINT_COUNT")
				Me.OnPRINT_COUNTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CUSTOMER_TYPE")>  _
Partial Public Class MAS_CUSTOMER_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CUSTOMER_TYPE_ID As Integer
	
	Private _CUSTOMER_TYPE As String
	
	Private _TAX_TYPE As System.Nullable(Of Integer)
	
	Private _VAT As System.Nullable(Of Double)
	
	Private _TAX As System.Nullable(Of Double)
	
	Private _CAL_FLAG As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCUSTOMER_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCUSTOMER_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCUSTOMER_TYPEChanged()
    End Sub
    Partial Private Sub OnTAX_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAX_TYPEChanged()
    End Sub
    Partial Private Sub OnVATChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVATChanged()
    End Sub
    Partial Private Sub OnTAXChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTAXChanged()
    End Sub
    Partial Private Sub OnCAL_FLAGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAL_FLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_TYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CUSTOMER_TYPE_ID() As Integer
		Get
			Return Me._CUSTOMER_TYPE_ID
		End Get
		Set
			If ((Me._CUSTOMER_TYPE_ID = value)  _
						= false) Then
				Me.OnCUSTOMER_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_TYPE_ID = value
				Me.SendPropertyChanged("CUSTOMER_TYPE_ID")
				Me.OnCUSTOMER_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_TYPE", DbType:="NVarChar(255)")>  _
	Public Property CUSTOMER_TYPE() As String
		Get
			Return Me._CUSTOMER_TYPE
		End Get
		Set
			If (String.Equals(Me._CUSTOMER_TYPE, value) = false) Then
				Me.OnCUSTOMER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_TYPE = value
				Me.SendPropertyChanged("CUSTOMER_TYPE")
				Me.OnCUSTOMER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAX_TYPE", DbType:="Int")>  _
	Public Property TAX_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._TAX_TYPE
		End Get
		Set
			If (Me._TAX_TYPE.Equals(value) = false) Then
				Me.OnTAX_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._TAX_TYPE = value
				Me.SendPropertyChanged("TAX_TYPE")
				Me.OnTAX_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAT", DbType:="Float")>  _
	Public Property VAT() As System.Nullable(Of Double)
		Get
			Return Me._VAT
		End Get
		Set
			If (Me._VAT.Equals(value) = false) Then
				Me.OnVATChanging(value)
				Me.SendPropertyChanging
				Me._VAT = value
				Me.SendPropertyChanged("VAT")
				Me.OnVATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAX", DbType:="Float")>  _
	Public Property TAX() As System.Nullable(Of Double)
		Get
			Return Me._TAX
		End Get
		Set
			If (Me._TAX.Equals(value) = false) Then
				Me.OnTAXChanging(value)
				Me.SendPropertyChanging
				Me._TAX = value
				Me.SendPropertyChanged("TAX")
				Me.OnTAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAL_FLAG", DbType:="Int")>  _
	Public Property CAL_FLAG() As System.Nullable(Of Integer)
		Get
			Return Me._CAL_FLAG
		End Get
		Set
			If (Me._CAL_FLAG.Equals(value) = false) Then
				Me.OnCAL_FLAGChanging(value)
				Me.SendPropertyChanging
				Me._CAL_FLAG = value
				Me.SendPropertyChanged("CAL_FLAG")
				Me.OnCAL_FLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TBL_LOG")>  _
Partial Public Class TBL_LOG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Log_ID As Integer
	
	Private _USER_AD As String
	
	Private _PAGE_URL As String
	
	Private _PAGE_NAME As String
	
	Private _LOG_DETAIL As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _TABLE_NAME As String
	
	Private _TABLE_KEY_REF As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLog_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLog_IDChanged()
    End Sub
    Partial Private Sub OnUSER_ADChanging(value As String)
    End Sub
    Partial Private Sub OnUSER_ADChanged()
    End Sub
    Partial Private Sub OnPAGE_URLChanging(value As String)
    End Sub
    Partial Private Sub OnPAGE_URLChanged()
    End Sub
    Partial Private Sub OnPAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnLOG_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnLOG_DETAILChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnTABLE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTABLE_NAMEChanged()
    End Sub
    Partial Private Sub OnTABLE_KEY_REFChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTABLE_KEY_REFChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Log_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Log_ID() As Integer
		Get
			Return Me._Log_ID
		End Get
		Set
			If ((Me._Log_ID = value)  _
						= false) Then
				Me.OnLog_IDChanging(value)
				Me.SendPropertyChanging
				Me._Log_ID = value
				Me.SendPropertyChanged("Log_ID")
				Me.OnLog_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USER_AD", DbType:="NVarChar(MAX)")>  _
	Public Property USER_AD() As String
		Get
			Return Me._USER_AD
		End Get
		Set
			If (String.Equals(Me._USER_AD, value) = false) Then
				Me.OnUSER_ADChanging(value)
				Me.SendPropertyChanging
				Me._USER_AD = value
				Me.SendPropertyChanged("USER_AD")
				Me.OnUSER_ADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAGE_URL", DbType:="NVarChar(MAX)")>  _
	Public Property PAGE_URL() As String
		Get
			Return Me._PAGE_URL
		End Get
		Set
			If (String.Equals(Me._PAGE_URL, value) = false) Then
				Me.OnPAGE_URLChanging(value)
				Me.SendPropertyChanging
				Me._PAGE_URL = value
				Me.SendPropertyChanged("PAGE_URL")
				Me.OnPAGE_URLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PAGE_NAME() As String
		Get
			Return Me._PAGE_NAME
		End Get
		Set
			If (String.Equals(Me._PAGE_NAME, value) = false) Then
				Me.OnPAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PAGE_NAME = value
				Me.SendPropertyChanged("PAGE_NAME")
				Me.OnPAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOG_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property LOG_DETAIL() As String
		Get
			Return Me._LOG_DETAIL
		End Get
		Set
			If (String.Equals(Me._LOG_DETAIL, value) = false) Then
				Me.OnLOG_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._LOG_DETAIL = value
				Me.SendPropertyChanged("LOG_DETAIL")
				Me.OnLOG_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABLE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TABLE_NAME() As String
		Get
			Return Me._TABLE_NAME
		End Get
		Set
			If (String.Equals(Me._TABLE_NAME, value) = false) Then
				Me.OnTABLE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TABLE_NAME = value
				Me.SendPropertyChanged("TABLE_NAME")
				Me.OnTABLE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABLE_KEY_REF", DbType:="Int")>  _
	Public Property TABLE_KEY_REF() As System.Nullable(Of Integer)
		Get
			Return Me._TABLE_KEY_REF
		End Get
		Set
			If (Me._TABLE_KEY_REF.Equals(value) = false) Then
				Me.OnTABLE_KEY_REFChanging(value)
				Me.SendPropertyChanging
				Me._TABLE_KEY_REF = value
				Me.SendPropertyChanged("TABLE_KEY_REF")
				Me.OnTABLE_KEY_REFChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TBL_TEMP_BG")>  _
Partial Public Class TBL_TEMP_BG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BG_ID As Integer
	
	Private _Head_ID As System.Nullable(Of Integer)
	
	Private _DES As String
	
	Private _TYPE_SELECT As System.Nullable(Of Integer)
	
	Private _Type_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBG_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBG_IDChanged()
    End Sub
    Partial Private Sub OnHead_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHead_IDChanged()
    End Sub
    Partial Private Sub OnDESChanging(value As String)
    End Sub
    Partial Private Sub OnDESChanged()
    End Sub
    Partial Private Sub OnTYPE_SELECTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_SELECTChanged()
    End Sub
    Partial Private Sub OnType_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnType_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BG_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BG_ID() As Integer
		Get
			Return Me._BG_ID
		End Get
		Set
			If ((Me._BG_ID = value)  _
						= false) Then
				Me.OnBG_IDChanging(value)
				Me.SendPropertyChanging
				Me._BG_ID = value
				Me.SendPropertyChanged("BG_ID")
				Me.OnBG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Head_ID", DbType:="Int")>  _
	Public Property Head_ID() As System.Nullable(Of Integer)
		Get
			Return Me._Head_ID
		End Get
		Set
			If (Me._Head_ID.Equals(value) = false) Then
				Me.OnHead_IDChanging(value)
				Me.SendPropertyChanging
				Me._Head_ID = value
				Me.SendPropertyChanged("Head_ID")
				Me.OnHead_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES", DbType:="NVarChar(MAX)")>  _
	Public Property DES() As String
		Get
			Return Me._DES
		End Get
		Set
			If (String.Equals(Me._DES, value) = false) Then
				Me.OnDESChanging(value)
				Me.SendPropertyChanging
				Me._DES = value
				Me.SendPropertyChanged("DES")
				Me.OnDESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SELECT", DbType:="Int")>  _
	Public Property TYPE_SELECT() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_SELECT
		End Get
		Set
			If (Me._TYPE_SELECT.Equals(value) = false) Then
				Me.OnTYPE_SELECTChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SELECT = value
				Me.SendPropertyChanged("TYPE_SELECT")
				Me.OnTYPE_SELECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type_ID", DbType:="Int")>  _
	Public Property Type_ID() As System.Nullable(Of Integer)
		Get
			Return Me._Type_ID
		End Get
		Set
			If (Me._Type_ID.Equals(value) = false) Then
				Me.OnType_IDChanging(value)
				Me.SendPropertyChanging
				Me._Type_ID = value
				Me.SendPropertyChanged("Type_ID")
				Me.OnType_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MARGIN_RECEIVE")>  _
Partial Public Class MAS_MARGIN_RECEIVE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID_RUN As Integer
	
	Private _DESCRIPITON As String
	
	Private _AMOUNT As System.Nullable(Of Decimal)
	
	Private _DO_DATE As System.Nullable(Of Date)
	
	Private _DO_TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnID_RUNChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_RUNChanged()
    End Sub
    Partial Private Sub OnDESCRIPITONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPITONChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnDO_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDO_DATEChanged()
    End Sub
    Partial Private Sub OnDO_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDO_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_RUN", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID_RUN() As Integer
		Get
			Return Me._ID_RUN
		End Get
		Set
			If ((Me._ID_RUN = value)  _
						= false) Then
				Me.OnID_RUNChanging(value)
				Me.SendPropertyChanging
				Me._ID_RUN = value
				Me.SendPropertyChanged("ID_RUN")
				Me.OnID_RUNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPITON", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPITON() As String
		Get
			Return Me._DESCRIPITON
		End Get
		Set
			If (String.Equals(Me._DESCRIPITON, value) = false) Then
				Me.OnDESCRIPITONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPITON = value
				Me.SendPropertyChanged("DESCRIPITON")
				Me.OnDESCRIPITONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="Money")>  _
	Public Property AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (Me._AMOUNT.Equals(value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DO_DATE", DbType:="DateTime")>  _
	Public Property DO_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DO_DATE
		End Get
		Set
			If (Me._DO_DATE.Equals(value) = false) Then
				Me.OnDO_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DO_DATE = value
				Me.SendPropertyChanged("DO_DATE")
				Me.OnDO_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DO_TYPE", DbType:="Int")>  _
	Public Property DO_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DO_TYPE
		End Get
		Set
			If (Me._DO_TYPE.Equals(value) = false) Then
				Me.OnDO_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DO_TYPE = value
				Me.SendPropertyChanged("DO_TYPE")
				Me.OnDO_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BUDGET_PLAN_NODE")>  _
Partial Public Class BUDGET_PLAN_NODE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BUDGET_PLAN_Detail_ID As Integer
	
	Private _HEAD_ID As System.Nullable(Of Integer)
	
	Private _CHILD_ID As System.Nullable(Of Integer)
	
	Private _IS_ENABLE As System.Nullable(Of Boolean)
	
	Private _BUDGET_YEAR As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBUDGET_PLAN_Detail_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBUDGET_PLAN_Detail_IDChanged()
    End Sub
    Partial Private Sub OnHEAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_IDChanged()
    End Sub
    Partial Private Sub OnCHILD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHILD_IDChanged()
    End Sub
    Partial Private Sub OnIS_ENABLEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_ENABLEChanged()
    End Sub
    Partial Private Sub OnBUDGET_YEARChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_YEARChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_PLAN_Detail_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BUDGET_PLAN_Detail_ID() As Integer
		Get
			Return Me._BUDGET_PLAN_Detail_ID
		End Get
		Set
			If ((Me._BUDGET_PLAN_Detail_ID = value)  _
						= false) Then
				Me.OnBUDGET_PLAN_Detail_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_PLAN_Detail_ID = value
				Me.SendPropertyChanged("BUDGET_PLAN_Detail_ID")
				Me.OnBUDGET_PLAN_Detail_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_ID", DbType:="Int")>  _
	Public Property HEAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_ID
		End Get
		Set
			If (Me._HEAD_ID.Equals(value) = false) Then
				Me.OnHEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_ID = value
				Me.SendPropertyChanged("HEAD_ID")
				Me.OnHEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHILD_ID", DbType:="Int")>  _
	Public Property CHILD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CHILD_ID
		End Get
		Set
			If (Me._CHILD_ID.Equals(value) = false) Then
				Me.OnCHILD_IDChanging(value)
				Me.SendPropertyChanging
				Me._CHILD_ID = value
				Me.SendPropertyChanged("CHILD_ID")
				Me.OnCHILD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ENABLE", DbType:="Bit")>  _
	Public Property IS_ENABLE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_ENABLE
		End Get
		Set
			If (Me._IS_ENABLE.Equals(value) = false) Then
				Me.OnIS_ENABLEChanging(value)
				Me.SendPropertyChanging
				Me._IS_ENABLE = value
				Me.SendPropertyChanged("IS_ENABLE")
				Me.OnIS_ENABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_YEAR", DbType:="Int")>  _
	Public Property BUDGET_YEAR() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_YEAR
		End Get
		Set
			If (Me._BUDGET_YEAR.Equals(value) = false) Then
				Me.OnBUDGET_YEARChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_YEAR = value
				Me.SendPropertyChanged("BUDGET_YEAR")
				Me.OnBUDGET_YEARChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BUDGET_PLAN")>  _
Partial Public Class BUDGET_PLAN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BUDGET_PLAN_ID As Integer
	
	Private _BUDGET_CHILD_ID As System.Nullable(Of Integer)
	
	Private _BUDGET_MANAGE_ID As System.Nullable(Of Integer)
	
	Private _BUDGET_CODE As String
	
	Private _BUDGET_DESCRIPTION As String
	
	Private _BUDGET_AMOUNT As System.Nullable(Of Decimal)
	
	Private _BUDGET_YEAR As System.Nullable(Of Integer)
	
	Private _BUDGET_MAIN_TYPE As System.Nullable(Of Integer)
	
	Private _BUDGET_IS_OVERLAP As System.Nullable(Of Boolean)
	
	Private _BUDGET_IS_ENABLE As System.Nullable(Of Boolean)
	
	Private _BUDGET_ORDER As System.Nullable(Of Integer)
	
	Private _BUDGET_TYPE_ID As System.Nullable(Of Integer)
	
	Private _BUDGET_IS_SUPPORT_DEPT As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBUDGET_PLAN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBUDGET_PLAN_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_CHILD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_CHILD_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_MANAGE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_MANAGE_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_CODEChanged()
    End Sub
    Partial Private Sub OnBUDGET_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnBUDGET_AMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBUDGET_AMOUNTChanged()
    End Sub
    Partial Private Sub OnBUDGET_YEARChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_YEARChanged()
    End Sub
    Partial Private Sub OnBUDGET_MAIN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_MAIN_TYPEChanged()
    End Sub
    Partial Private Sub OnBUDGET_IS_OVERLAPChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBUDGET_IS_OVERLAPChanged()
    End Sub
    Partial Private Sub OnBUDGET_IS_ENABLEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBUDGET_IS_ENABLEChanged()
    End Sub
    Partial Private Sub OnBUDGET_ORDERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_ORDERChanged()
    End Sub
    Partial Private Sub OnBUDGET_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_IS_SUPPORT_DEPTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBUDGET_IS_SUPPORT_DEPTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_PLAN_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property BUDGET_PLAN_ID() As Integer
		Get
			Return Me._BUDGET_PLAN_ID
		End Get
		Set
			If ((Me._BUDGET_PLAN_ID = value)  _
						= false) Then
				Me.OnBUDGET_PLAN_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_PLAN_ID = value
				Me.SendPropertyChanged("BUDGET_PLAN_ID")
				Me.OnBUDGET_PLAN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_CHILD_ID", DbType:="Int")>  _
	Public Property BUDGET_CHILD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_CHILD_ID
		End Get
		Set
			If (Me._BUDGET_CHILD_ID.Equals(value) = false) Then
				Me.OnBUDGET_CHILD_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_CHILD_ID = value
				Me.SendPropertyChanged("BUDGET_CHILD_ID")
				Me.OnBUDGET_CHILD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_MANAGE_ID", DbType:="Int")>  _
	Public Property BUDGET_MANAGE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_MANAGE_ID
		End Get
		Set
			If (Me._BUDGET_MANAGE_ID.Equals(value) = false) Then
				Me.OnBUDGET_MANAGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_MANAGE_ID = value
				Me.SendPropertyChanged("BUDGET_MANAGE_ID")
				Me.OnBUDGET_MANAGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property BUDGET_CODE() As String
		Get
			Return Me._BUDGET_CODE
		End Get
		Set
			If (String.Equals(Me._BUDGET_CODE, value) = false) Then
				Me.OnBUDGET_CODEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_CODE = value
				Me.SendPropertyChanged("BUDGET_CODE")
				Me.OnBUDGET_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property BUDGET_DESCRIPTION() As String
		Get
			Return Me._BUDGET_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._BUDGET_DESCRIPTION, value) = false) Then
				Me.OnBUDGET_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_DESCRIPTION = value
				Me.SendPropertyChanged("BUDGET_DESCRIPTION")
				Me.OnBUDGET_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_AMOUNT", DbType:="Money")>  _
	Public Property BUDGET_AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._BUDGET_AMOUNT
		End Get
		Set
			If (Me._BUDGET_AMOUNT.Equals(value) = false) Then
				Me.OnBUDGET_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_AMOUNT = value
				Me.SendPropertyChanged("BUDGET_AMOUNT")
				Me.OnBUDGET_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_YEAR", DbType:="Int")>  _
	Public Property BUDGET_YEAR() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_YEAR
		End Get
		Set
			If (Me._BUDGET_YEAR.Equals(value) = false) Then
				Me.OnBUDGET_YEARChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_YEAR = value
				Me.SendPropertyChanged("BUDGET_YEAR")
				Me.OnBUDGET_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_MAIN_TYPE", DbType:="Int")>  _
	Public Property BUDGET_MAIN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_MAIN_TYPE
		End Get
		Set
			If (Me._BUDGET_MAIN_TYPE.Equals(value) = false) Then
				Me.OnBUDGET_MAIN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_MAIN_TYPE = value
				Me.SendPropertyChanged("BUDGET_MAIN_TYPE")
				Me.OnBUDGET_MAIN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_IS_OVERLAP", DbType:="Bit")>  _
	Public Property BUDGET_IS_OVERLAP() As System.Nullable(Of Boolean)
		Get
			Return Me._BUDGET_IS_OVERLAP
		End Get
		Set
			If (Me._BUDGET_IS_OVERLAP.Equals(value) = false) Then
				Me.OnBUDGET_IS_OVERLAPChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_IS_OVERLAP = value
				Me.SendPropertyChanged("BUDGET_IS_OVERLAP")
				Me.OnBUDGET_IS_OVERLAPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_IS_ENABLE", DbType:="Bit")>  _
	Public Property BUDGET_IS_ENABLE() As System.Nullable(Of Boolean)
		Get
			Return Me._BUDGET_IS_ENABLE
		End Get
		Set
			If (Me._BUDGET_IS_ENABLE.Equals(value) = false) Then
				Me.OnBUDGET_IS_ENABLEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_IS_ENABLE = value
				Me.SendPropertyChanged("BUDGET_IS_ENABLE")
				Me.OnBUDGET_IS_ENABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_ORDER", DbType:="Int")>  _
	Public Property BUDGET_ORDER() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_ORDER
		End Get
		Set
			If (Me._BUDGET_ORDER.Equals(value) = false) Then
				Me.OnBUDGET_ORDERChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_ORDER = value
				Me.SendPropertyChanged("BUDGET_ORDER")
				Me.OnBUDGET_ORDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TYPE_ID", DbType:="Int")>  _
	Public Property BUDGET_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_TYPE_ID
		End Get
		Set
			If (Me._BUDGET_TYPE_ID.Equals(value) = false) Then
				Me.OnBUDGET_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TYPE_ID = value
				Me.SendPropertyChanged("BUDGET_TYPE_ID")
				Me.OnBUDGET_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_IS_SUPPORT_DEPT", DbType:="Bit")>  _
	Public Property BUDGET_IS_SUPPORT_DEPT() As System.Nullable(Of Boolean)
		Get
			Return Me._BUDGET_IS_SUPPORT_DEPT
		End Get
		Set
			If (Me._BUDGET_IS_SUPPORT_DEPT.Equals(value) = false) Then
				Me.OnBUDGET_IS_SUPPORT_DEPTChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_IS_SUPPORT_DEPT = value
				Me.SendPropertyChanged("BUDGET_IS_SUPPORT_DEPT")
				Me.OnBUDGET_IS_SUPPORT_DEPTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TBL_PERSON_IN_REPORT")>  _
Partial Public Class TBL_PERSON_IN_REPORT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _R_ID As Integer
	
	Private _R_NAME As String
	
	Private _R_TYPE As String
	
	Private _IS_USE As System.Nullable(Of Boolean)
	
	Private _IS_FOUNDATION As System.Nullable(Of Boolean)
	
	Private _IS_NORMAL As System.Nullable(Of Boolean)
	
	Private _IS_SPSC As System.Nullable(Of Boolean)
	
	Private _IS_SSS As System.Nullable(Of Boolean)
	
	Private _IS_BENEFITS As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnR_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnR_IDChanged()
    End Sub
    Partial Private Sub OnR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnR_NAMEChanged()
    End Sub
    Partial Private Sub OnR_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnR_TYPEChanged()
    End Sub
    Partial Private Sub OnIS_USEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USEChanged()
    End Sub
    Partial Private Sub OnIS_FOUNDATIONChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_FOUNDATIONChanged()
    End Sub
    Partial Private Sub OnIS_NORMALChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_NORMALChanged()
    End Sub
    Partial Private Sub OnIS_SPSCChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_SPSCChanged()
    End Sub
    Partial Private Sub OnIS_SSSChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_SSSChanged()
    End Sub
    Partial Private Sub OnIS_BENEFITSChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_BENEFITSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property R_ID() As Integer
		Get
			Return Me._R_ID
		End Get
		Set
			If ((Me._R_ID = value)  _
						= false) Then
				Me.OnR_IDChanging(value)
				Me.SendPropertyChanging
				Me._R_ID = value
				Me.SendPropertyChanged("R_ID")
				Me.OnR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property R_NAME() As String
		Get
			Return Me._R_NAME
		End Get
		Set
			If (String.Equals(Me._R_NAME, value) = false) Then
				Me.OnR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._R_NAME = value
				Me.SendPropertyChanged("R_NAME")
				Me.OnR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_TYPE", DbType:="NVarChar(50)")>  _
	Public Property R_TYPE() As String
		Get
			Return Me._R_TYPE
		End Get
		Set
			If (String.Equals(Me._R_TYPE, value) = false) Then
				Me.OnR_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._R_TYPE = value
				Me.SendPropertyChanged("R_TYPE")
				Me.OnR_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE", DbType:="Bit")>  _
	Public Property IS_USE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USE
		End Get
		Set
			If (Me._IS_USE.Equals(value) = false) Then
				Me.OnIS_USEChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE = value
				Me.SendPropertyChanged("IS_USE")
				Me.OnIS_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_FOUNDATION", DbType:="Bit")>  _
	Public Property IS_FOUNDATION() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_FOUNDATION
		End Get
		Set
			If (Me._IS_FOUNDATION.Equals(value) = false) Then
				Me.OnIS_FOUNDATIONChanging(value)
				Me.SendPropertyChanging
				Me._IS_FOUNDATION = value
				Me.SendPropertyChanged("IS_FOUNDATION")
				Me.OnIS_FOUNDATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_NORMAL", DbType:="Bit")>  _
	Public Property IS_NORMAL() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_NORMAL
		End Get
		Set
			If (Me._IS_NORMAL.Equals(value) = false) Then
				Me.OnIS_NORMALChanging(value)
				Me.SendPropertyChanging
				Me._IS_NORMAL = value
				Me.SendPropertyChanged("IS_NORMAL")
				Me.OnIS_NORMALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_SPSC", DbType:="Bit")>  _
	Public Property IS_SPSC() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_SPSC
		End Get
		Set
			If (Me._IS_SPSC.Equals(value) = false) Then
				Me.OnIS_SPSCChanging(value)
				Me.SendPropertyChanging
				Me._IS_SPSC = value
				Me.SendPropertyChanged("IS_SPSC")
				Me.OnIS_SPSCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_SSS", DbType:="Bit")>  _
	Public Property IS_SSS() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_SSS
		End Get
		Set
			If (Me._IS_SSS.Equals(value) = false) Then
				Me.OnIS_SSSChanging(value)
				Me.SendPropertyChanging
				Me._IS_SSS = value
				Me.SendPropertyChanged("IS_SSS")
				Me.OnIS_SSSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_BENEFITS", DbType:="Bit")>  _
	Public Property IS_BENEFITS() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_BENEFITS
		End Get
		Set
			If (Me._IS_BENEFITS.Equals(value) = false) Then
				Me.OnIS_BENEFITSChanging(value)
				Me.SendPropertyChanging
				Me._IS_BENEFITS = value
				Me.SendPropertyChanged("IS_BENEFITS")
				Me.OnIS_BENEFITSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LEVEL")>  _
Partial Public Class MAS_LEVEL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LEVEL_ID As Integer
	
	Private _LEVEL_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLEVEL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLEVEL_IDChanged()
    End Sub
    Partial Private Sub OnLEVEL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLEVEL_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVEL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LEVEL_ID() As Integer
		Get
			Return Me._LEVEL_ID
		End Get
		Set
			If ((Me._LEVEL_ID = value)  _
						= false) Then
				Me.OnLEVEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._LEVEL_ID = value
				Me.SendPropertyChanged("LEVEL_ID")
				Me.OnLEVEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVEL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LEVEL_NAME() As String
		Get
			Return Me._LEVEL_NAME
		End Get
		Set
			If (String.Equals(Me._LEVEL_NAME, value) = false) Then
				Me.OnLEVEL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LEVEL_NAME = value
				Me.SendPropertyChanged("LEVEL_NAME")
				Me.OnLEVEL_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PERSON_TYPE")>  _
Partial Public Class MAS_PERSON_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PERSON_TYPE_ID As Integer
	
	Private _PERSON_TYPE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPERSON_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPERSON_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnPERSON_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPERSON_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSON_TYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PERSON_TYPE_ID() As Integer
		Get
			Return Me._PERSON_TYPE_ID
		End Get
		Set
			If ((Me._PERSON_TYPE_ID = value)  _
						= false) Then
				Me.OnPERSON_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PERSON_TYPE_ID = value
				Me.SendPropertyChanged("PERSON_TYPE_ID")
				Me.OnPERSON_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSON_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PERSON_TYPE() As String
		Get
			Return Me._PERSON_TYPE
		End Get
		Set
			If (String.Equals(Me._PERSON_TYPE, value) = false) Then
				Me.OnPERSON_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PERSON_TYPE = value
				Me.SendPropertyChanged("PERSON_TYPE")
				Me.OnPERSON_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PERSONAL_Tb2")>  _
Partial Public Class MAS_PERSONAL_Tb2
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDRUN As Integer
	
	Private _NATIONAL_ID As String
	
	Private _PREFIX_ID As System.Nullable(Of Integer)
	
	Private _NAME As String
	
	Private _SURNAME As String
	
	Private _DEPARTMENT_ID As System.Nullable(Of Integer)
	
	Private _POSITION_ID As System.Nullable(Of Integer)
	
	Private _LEVEL_ID As System.Nullable(Of Integer)
	
	Private _BANK_ID As String
	
	Private _PERSON_TYPE As System.Nullable(Of Integer)
	
	Private _STATUS_PERSON As System.Nullable(Of Integer)
	
	Private _COOPERATE_NUMBER As String
	
	Private _ADDRESS As String
	
	Private _BANK_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDRUNChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDRUNChanged()
    End Sub
    Partial Private Sub OnNATIONAL_IDChanging(value As String)
    End Sub
    Partial Private Sub OnNATIONAL_IDChanged()
    End Sub
    Partial Private Sub OnPREFIX_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPREFIX_IDChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnSURNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSURNAMEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnPOSITION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPOSITION_IDChanged()
    End Sub
    Partial Private Sub OnLEVEL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLEVEL_IDChanged()
    End Sub
    Partial Private Sub OnBANK_IDChanging(value As String)
    End Sub
    Partial Private Sub OnBANK_IDChanged()
    End Sub
    Partial Private Sub OnPERSON_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERSON_TYPEChanged()
    End Sub
    Partial Private Sub OnSTATUS_PERSONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_PERSONChanged()
    End Sub
    Partial Private Sub OnCOOPERATE_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnCOOPERATE_NUMBERChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnBANK_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBANK_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRUN", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDRUN() As Integer
		Get
			Return Me._IDRUN
		End Get
		Set
			If ((Me._IDRUN = value)  _
						= false) Then
				Me.OnIDRUNChanging(value)
				Me.SendPropertyChanging
				Me._IDRUN = value
				Me.SendPropertyChanged("IDRUN")
				Me.OnIDRUNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_ID", DbType:="NVarChar(50)")>  _
	Public Property NATIONAL_ID() As String
		Get
			Return Me._NATIONAL_ID
		End Get
		Set
			If (String.Equals(Me._NATIONAL_ID, value) = false) Then
				Me.OnNATIONAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_ID = value
				Me.SendPropertyChanged("NATIONAL_ID")
				Me.OnNATIONAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX_ID", DbType:="Int")>  _
	Public Property PREFIX_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PREFIX_ID
		End Get
		Set
			If (Me._PREFIX_ID.Equals(value) = false) Then
				Me.OnPREFIX_IDChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX_ID = value
				Me.SendPropertyChanged("PREFIX_ID")
				Me.OnPREFIX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SURNAME() As String
		Get
			Return Me._SURNAME
		End Get
		Set
			If (String.Equals(Me._SURNAME, value) = false) Then
				Me.OnSURNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SURNAME = value
				Me.SendPropertyChanged("SURNAME")
				Me.OnSURNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ID", DbType:="Int")>  _
	Public Property DEPARTMENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_ID
		End Get
		Set
			If (Me._DEPARTMENT_ID.Equals(value) = false) Then
				Me.OnDEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ID = value
				Me.SendPropertyChanged("DEPARTMENT_ID")
				Me.OnDEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_ID", DbType:="Int")>  _
	Public Property POSITION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._POSITION_ID
		End Get
		Set
			If (Me._POSITION_ID.Equals(value) = false) Then
				Me.OnPOSITION_IDChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_ID = value
				Me.SendPropertyChanged("POSITION_ID")
				Me.OnPOSITION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVEL_ID", DbType:="Int")>  _
	Public Property LEVEL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LEVEL_ID
		End Get
		Set
			If (Me._LEVEL_ID.Equals(value) = false) Then
				Me.OnLEVEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._LEVEL_ID = value
				Me.SendPropertyChanged("LEVEL_ID")
				Me.OnLEVEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_ID", DbType:="NVarChar(50)")>  _
	Public Property BANK_ID() As String
		Get
			Return Me._BANK_ID
		End Get
		Set
			If (String.Equals(Me._BANK_ID, value) = false) Then
				Me.OnBANK_IDChanging(value)
				Me.SendPropertyChanging
				Me._BANK_ID = value
				Me.SendPropertyChanged("BANK_ID")
				Me.OnBANK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSON_TYPE", DbType:="Int")>  _
	Public Property PERSON_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PERSON_TYPE
		End Get
		Set
			If (Me._PERSON_TYPE.Equals(value) = false) Then
				Me.OnPERSON_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PERSON_TYPE = value
				Me.SendPropertyChanged("PERSON_TYPE")
				Me.OnPERSON_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_PERSON", DbType:="Int")>  _
	Public Property STATUS_PERSON() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_PERSON
		End Get
		Set
			If (Me._STATUS_PERSON.Equals(value) = false) Then
				Me.OnSTATUS_PERSONChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_PERSON = value
				Me.SendPropertyChanged("STATUS_PERSON")
				Me.OnSTATUS_PERSONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COOPERATE_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property COOPERATE_NUMBER() As String
		Get
			Return Me._COOPERATE_NUMBER
		End Get
		Set
			If (String.Equals(Me._COOPERATE_NUMBER, value) = false) Then
				Me.OnCOOPERATE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._COOPERATE_NUMBER = value
				Me.SendPropertyChanged("COOPERATE_NUMBER")
				Me.OnCOOPERATE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS() As String
		Get
			Return Me._ADDRESS
		End Get
		Set
			If (String.Equals(Me._ADDRESS, value) = false) Then
				Me.OnADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS = value
				Me.SendPropertyChanged("ADDRESS")
				Me.OnADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BANK_NAME() As String
		Get
			Return Me._BANK_NAME
		End Get
		Set
			If (String.Equals(Me._BANK_NAME, value) = false) Then
				Me.OnBANK_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BANK_NAME = value
				Me.SendPropertyChanged("BANK_NAME")
				Me.OnBANK_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_POSITION")>  _
Partial Public Class MAS_POSITION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _POSITION_ID As Integer
	
	Private _POSITION_NAME As String
	
	Private _IS_USE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPOSITION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPOSITION_IDChanged()
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanged()
    End Sub
    Partial Private Sub OnIS_USEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property POSITION_ID() As Integer
		Get
			Return Me._POSITION_ID
		End Get
		Set
			If ((Me._POSITION_ID = value)  _
						= false) Then
				Me.OnPOSITION_IDChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_ID = value
				Me.SendPropertyChanged("POSITION_ID")
				Me.OnPOSITION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_NAME() As String
		Get
			Return Me._POSITION_NAME
		End Get
		Set
			If (String.Equals(Me._POSITION_NAME, value) = false) Then
				Me.OnPOSITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_NAME = value
				Me.SendPropertyChanged("POSITION_NAME")
				Me.OnPOSITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE", DbType:="Bit")>  _
	Public Property IS_USE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USE
		End Get
		Set
			If (Me._IS_USE.Equals(value) = false) Then
				Me.OnIS_USEChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE = value
				Me.SendPropertyChanged("IS_USE")
				Me.OnIS_USEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PREFIX")>  _
Partial Public Class MAS_PREFIX
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PREFIX_ID As Integer
	
	Private _PREFIX_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPREFIX_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPREFIX_IDChanged()
    End Sub
    Partial Private Sub OnPREFIX_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPREFIX_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PREFIX_ID() As Integer
		Get
			Return Me._PREFIX_ID
		End Get
		Set
			If ((Me._PREFIX_ID = value)  _
						= false) Then
				Me.OnPREFIX_IDChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX_ID = value
				Me.SendPropertyChanged("PREFIX_ID")
				Me.OnPREFIX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PREFIX_NAME() As String
		Get
			Return Me._PREFIX_NAME
		End Get
		Set
			If (String.Equals(Me._PREFIX_NAME, value) = false) Then
				Me.OnPREFIX_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX_NAME = value
				Me.SendPropertyChanged("PREFIX_NAME")
				Me.OnPREFIX_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STATUS")>  _
Partial Public Class MAS_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_NAME As String
	
	Private _STATUS_SEQ As System.Nullable(Of Integer)
	
	Private _STATUS_GROUP As System.Nullable(Of Integer)
	
	Private _SYSTEM_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_SEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_SEQChanged()
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanged()
    End Sub
    Partial Private Sub OnSYSTEM_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSYSTEM_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_NAME() As String
		Get
			Return Me._STATUS_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_NAME, value) = false) Then
				Me.OnSTATUS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NAME = value
				Me.SendPropertyChanged("STATUS_NAME")
				Me.OnSTATUS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_SEQ", DbType:="Int")>  _
	Public Property STATUS_SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_SEQ
		End Get
		Set
			If (Me._STATUS_SEQ.Equals(value) = false) Then
				Me.OnSTATUS_SEQChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_SEQ = value
				Me.SendPropertyChanged("STATUS_SEQ")
				Me.OnSTATUS_SEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_GROUP", DbType:="Int")>  _
	Public Property STATUS_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_GROUP
		End Get
		Set
			If (Me._STATUS_GROUP.Equals(value) = false) Then
				Me.OnSTATUS_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_GROUP = value
				Me.SendPropertyChanged("STATUS_GROUP")
				Me.OnSTATUS_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_ID", DbType:="Int")>  _
	Public Property SYSTEM_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SYSTEM_ID
		End Get
		Set
			If (Me._SYSTEM_ID.Equals(value) = false) Then
				Me.OnSYSTEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_ID = value
				Me.SendPropertyChanged("SYSTEM_ID")
				Me.OnSYSTEM_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANSACTION_DOWNLOAD")>  _
Partial Public Class TRANSACTION_DOWNLOAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CITIEZEN_ID As String
	
	Private _CITIEZEN_ID_AUTHORIZE As String
	
	Private _EMAIL As String
	
	Private _DOWNLOAD_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnDOWNLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOWNLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID() As String
		Get
			Return Me._CITIEZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID, value) = false) Then
				Me.OnCITIEZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID = value
				Me.SendPropertyChanged("CITIEZEN_ID")
				Me.OnCITIEZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIEZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIEZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIEZEN_ID_AUTHORIZE")
				Me.OnCITIEZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWNLOAD_DATE", DbType:="DateTime")>  _
	Public Property DOWNLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOWNLOAD_DATE
		End Get
		Set
			If (Me._DOWNLOAD_DATE.Equals(value) = false) Then
				Me.OnDOWNLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOWNLOAD_DATE = value
				Me.SendPropertyChanged("DOWNLOAD_DATE")
				Me.OnDOWNLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANSACTION_UPLOAD")>  _
Partial Public Class TRANSACTION_UPLOAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CITIEZEN_ID As String
	
	Private _CITIEZEN_ID_AUTHORIZE As String
	
	Private _EMAIL As String
	
	Private _UPLOAD_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _REF_NO As String
	
	Private _DOWNLOAD_ID As System.Nullable(Of Integer)
	
	Private _YEAR As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID() As String
		Get
			Return Me._CITIEZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID, value) = false) Then
				Me.OnCITIEZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID = value
				Me.SendPropertyChanged("CITIEZEN_ID")
				Me.OnCITIEZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIEZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIEZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIEZEN_ID_AUTHORIZE")
				Me.OnCITIEZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPLOAD_DATE", DbType:="DateTime")>  _
	Public Property UPLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPLOAD_DATE
		End Get
		Set
			If (Me._UPLOAD_DATE.Equals(value) = false) Then
				Me.OnUPLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPLOAD_DATE = value
				Me.SendPropertyChanged("UPLOAD_DATE")
				Me.OnUPLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWNLOAD_ID", DbType:="Int")>  _
	Public Property DOWNLOAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWNLOAD_ID
		End Get
		Set
			If (Me._DOWNLOAD_ID.Equals(value) = false) Then
				Me.OnDOWNLOAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWNLOAD_ID = value
				Me.SendPropertyChanged("DOWNLOAD_ID")
				Me.OnDOWNLOAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(10)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_FAMILY")>  _
Partial Public Class MAS_FAMILY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FAMILY_TYPE As System.Nullable(Of Integer)
	
	Private _PREFIX_ID As System.Nullable(Of Integer)
	
	Private _NAME As String
	
	Private _SURNAME As String
	
	Private _CUSTOMER_ID As System.Nullable(Of Integer)
	
	Private _BIRTH_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFAMILY_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFAMILY_TYPEChanged()
    End Sub
    Partial Private Sub OnPREFIX_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPREFIX_IDChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnSURNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSURNAMEChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCUSTOMER_IDChanged()
    End Sub
    Partial Private Sub OnBIRTH_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBIRTH_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAMILY_TYPE", DbType:="Int")>  _
	Public Property FAMILY_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._FAMILY_TYPE
		End Get
		Set
			If (Me._FAMILY_TYPE.Equals(value) = false) Then
				Me.OnFAMILY_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._FAMILY_TYPE = value
				Me.SendPropertyChanged("FAMILY_TYPE")
				Me.OnFAMILY_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX_ID", DbType:="Int")>  _
	Public Property PREFIX_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PREFIX_ID
		End Get
		Set
			If (Me._PREFIX_ID.Equals(value) = false) Then
				Me.OnPREFIX_IDChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX_ID = value
				Me.SendPropertyChanged("PREFIX_ID")
				Me.OnPREFIX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SURNAME() As String
		Get
			Return Me._SURNAME
		End Get
		Set
			If (String.Equals(Me._SURNAME, value) = false) Then
				Me.OnSURNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SURNAME = value
				Me.SendPropertyChanged("SURNAME")
				Me.OnSURNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_ID", DbType:="Int")>  _
	Public Property CUSTOMER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CUSTOMER_ID
		End Get
		Set
			If (Me._CUSTOMER_ID.Equals(value) = false) Then
				Me.OnCUSTOMER_IDChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_ID = value
				Me.SendPropertyChanged("CUSTOMER_ID")
				Me.OnCUSTOMER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIRTH_DATE", DbType:="DateTime")>  _
	Public Property BIRTH_DATE() As System.Nullable(Of Date)
		Get
			Return Me._BIRTH_DATE
		End Get
		Set
			If (Me._BIRTH_DATE.Equals(value) = false) Then
				Me.OnBIRTH_DATEChanging(value)
				Me.SendPropertyChanging
				Me._BIRTH_DATE = value
				Me.SendPropertyChanged("BIRTH_DATE")
				Me.OnBIRTH_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MENU_AUTO")>  _
Partial Public Class MAS_MENU_AUTO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MENU_ID As Integer
	
	Private _MENU_PARENT_ID As System.Nullable(Of Integer)
	
	Private _MENU_NAME As String
	
	Private _MENU_SEQ As System.Nullable(Of Integer)
	
	Private _MENU_URL As String
	
	Private _MENU_TARGET As String
	
	Private _MENU_PERMISSION_ID As System.Nullable(Of Integer)
	
	Private _MENU_GROUP As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMENU_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMENU_IDChanged()
    End Sub
    Partial Private Sub OnMENU_PARENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENU_PARENT_IDChanged()
    End Sub
    Partial Private Sub OnMENU_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMENU_NAMEChanged()
    End Sub
    Partial Private Sub OnMENU_SEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENU_SEQChanged()
    End Sub
    Partial Private Sub OnMENU_URLChanging(value As String)
    End Sub
    Partial Private Sub OnMENU_URLChanged()
    End Sub
    Partial Private Sub OnMENU_TARGETChanging(value As String)
    End Sub
    Partial Private Sub OnMENU_TARGETChanged()
    End Sub
    Partial Private Sub OnMENU_PERMISSION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENU_PERMISSION_IDChanged()
    End Sub
    Partial Private Sub OnMENU_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENU_GROUPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MENU_ID() As Integer
		Get
			Return Me._MENU_ID
		End Get
		Set
			If ((Me._MENU_ID = value)  _
						= false) Then
				Me.OnMENU_IDChanging(value)
				Me.SendPropertyChanging
				Me._MENU_ID = value
				Me.SendPropertyChanged("MENU_ID")
				Me.OnMENU_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_PARENT_ID", DbType:="Int")>  _
	Public Property MENU_PARENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MENU_PARENT_ID
		End Get
		Set
			If (Me._MENU_PARENT_ID.Equals(value) = false) Then
				Me.OnMENU_PARENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._MENU_PARENT_ID = value
				Me.SendPropertyChanged("MENU_PARENT_ID")
				Me.OnMENU_PARENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_NAME", DbType:="NVarChar(255)")>  _
	Public Property MENU_NAME() As String
		Get
			Return Me._MENU_NAME
		End Get
		Set
			If (String.Equals(Me._MENU_NAME, value) = false) Then
				Me.OnMENU_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MENU_NAME = value
				Me.SendPropertyChanged("MENU_NAME")
				Me.OnMENU_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_SEQ", DbType:="Int")>  _
	Public Property MENU_SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._MENU_SEQ
		End Get
		Set
			If (Me._MENU_SEQ.Equals(value) = false) Then
				Me.OnMENU_SEQChanging(value)
				Me.SendPropertyChanging
				Me._MENU_SEQ = value
				Me.SendPropertyChanged("MENU_SEQ")
				Me.OnMENU_SEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_URL", DbType:="NVarChar(255)")>  _
	Public Property MENU_URL() As String
		Get
			Return Me._MENU_URL
		End Get
		Set
			If (String.Equals(Me._MENU_URL, value) = false) Then
				Me.OnMENU_URLChanging(value)
				Me.SendPropertyChanging
				Me._MENU_URL = value
				Me.SendPropertyChanged("MENU_URL")
				Me.OnMENU_URLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_TARGET", DbType:="NVarChar(50)")>  _
	Public Property MENU_TARGET() As String
		Get
			Return Me._MENU_TARGET
		End Get
		Set
			If (String.Equals(Me._MENU_TARGET, value) = false) Then
				Me.OnMENU_TARGETChanging(value)
				Me.SendPropertyChanging
				Me._MENU_TARGET = value
				Me.SendPropertyChanged("MENU_TARGET")
				Me.OnMENU_TARGETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_PERMISSION_ID", DbType:="Int")>  _
	Public Property MENU_PERMISSION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MENU_PERMISSION_ID
		End Get
		Set
			If (Me._MENU_PERMISSION_ID.Equals(value) = false) Then
				Me.OnMENU_PERMISSION_IDChanging(value)
				Me.SendPropertyChanging
				Me._MENU_PERMISSION_ID = value
				Me.SendPropertyChanged("MENU_PERMISSION_ID")
				Me.OnMENU_PERMISSION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_GROUP", DbType:="Int")>  _
	Public Property MENU_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._MENU_GROUP
		End Get
		Set
			If (Me._MENU_GROUP.Equals(value) = false) Then
				Me.OnMENU_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._MENU_GROUP = value
				Me.SendPropertyChanged("MENU_GROUP")
				Me.OnMENU_GROUPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STATUS_BILL_DETAIL")>  _
Partial Public Class MAS_STATUS_BILL_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_BILL_ID As System.Nullable(Of Integer)
	
	Private _BILL_TYPE As System.Nullable(Of Integer)
	
	Private _STATUS_DATE As System.Nullable(Of Date)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _IDENTITY_NUMBER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_BILL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_BILL_IDChanged()
    End Sub
    Partial Private Sub OnBILL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBILL_TYPEChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTATUS_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub OnIDENTITY_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTITY_NUMBERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_BILL_ID", DbType:="Int")>  _
	Public Property FK_BILL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_BILL_ID
		End Get
		Set
			If (Me._FK_BILL_ID.Equals(value) = false) Then
				Me.OnFK_BILL_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_BILL_ID = value
				Me.SendPropertyChanged("FK_BILL_ID")
				Me.OnFK_BILL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BILL_TYPE", DbType:="Int")>  _
	Public Property BILL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._BILL_TYPE
		End Get
		Set
			If (Me._BILL_TYPE.Equals(value) = false) Then
				Me.OnBILL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._BILL_TYPE = value
				Me.SendPropertyChanged("BILL_TYPE")
				Me.OnBILL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE", DbType:="DateTime")>  _
	Public Property STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._STATUS_DATE
		End Get
		Set
			If (Me._STATUS_DATE.Equals(value) = false) Then
				Me.OnSTATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE = value
				Me.SendPropertyChanged("STATUS_DATE")
				Me.OnSTATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="DateTime")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTITY_NUMBER", DbType:="NVarChar(50)")>  _
	Public Property IDENTITY_NUMBER() As String
		Get
			Return Me._IDENTITY_NUMBER
		End Get
		Set
			If (String.Equals(Me._IDENTITY_NUMBER, value) = false) Then
				Me.OnIDENTITY_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._IDENTITY_NUMBER = value
				Me.SendPropertyChanged("IDENTITY_NUMBER")
				Me.OnIDENTITY_NUMBERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_REASON_REJECT_BILL")>  _
Partial Public Class MAS_REASON_REJECT_BILL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _REASON As String
	
	Private _REASON_DATE As System.Nullable(Of Date)
	
	Private _BILL_TYPE As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _IDENTITY_NUMBER As String
	
	Private _GROUP_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnREASONChanging(value As String)
    End Sub
    Partial Private Sub OnREASONChanged()
    End Sub
    Partial Private Sub OnREASON_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREASON_DATEChanged()
    End Sub
    Partial Private Sub OnBILL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBILL_TYPEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub OnIDENTITY_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTITY_NUMBERChanged()
    End Sub
    Partial Private Sub OnGROUP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REASON", DbType:="NVarChar(MAX)")>  _
	Public Property REASON() As String
		Get
			Return Me._REASON
		End Get
		Set
			If (String.Equals(Me._REASON, value) = false) Then
				Me.OnREASONChanging(value)
				Me.SendPropertyChanging
				Me._REASON = value
				Me.SendPropertyChanged("REASON")
				Me.OnREASONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REASON_DATE", DbType:="DateTime")>  _
	Public Property REASON_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REASON_DATE
		End Get
		Set
			If (Me._REASON_DATE.Equals(value) = false) Then
				Me.OnREASON_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REASON_DATE = value
				Me.SendPropertyChanged("REASON_DATE")
				Me.OnREASON_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BILL_TYPE", DbType:="Int")>  _
	Public Property BILL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._BILL_TYPE
		End Get
		Set
			If (Me._BILL_TYPE.Equals(value) = false) Then
				Me.OnBILL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._BILL_TYPE = value
				Me.SendPropertyChanged("BILL_TYPE")
				Me.OnBILL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="DateTime")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTITY_NUMBER", DbType:="NVarChar(50)")>  _
	Public Property IDENTITY_NUMBER() As String
		Get
			Return Me._IDENTITY_NUMBER
		End Get
		Set
			If (String.Equals(Me._IDENTITY_NUMBER, value) = false) Then
				Me.OnIDENTITY_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._IDENTITY_NUMBER = value
				Me.SendPropertyChanged("IDENTITY_NUMBER")
				Me.OnIDENTITY_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_ID", DbType:="Int")>  _
	Public Property GROUP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_ID
		End Get
		Set
			If (Me._GROUP_ID.Equals(value) = false) Then
				Me.OnGROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_ID = value
				Me.SendPropertyChanged("GROUP_ID")
				Me.OnGROUP_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANSFER_PAYMENT_LOG")>  _
Partial Public Class TRANSFER_PAYMENT_LOG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _REF01 As String
	
	Private _REF02 As String
	
	Private _INSERT_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnREF01Changing(value As String)
    End Sub
    Partial Private Sub OnREF01Changed()
    End Sub
    Partial Private Sub OnREF02Changing(value As String)
    End Sub
    Partial Private Sub OnREF02Changed()
    End Sub
    Partial Private Sub OnINSERT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSERT_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF01", DbType:="NVarChar(MAX)")>  _
	Public Property REF01() As String
		Get
			Return Me._REF01
		End Get
		Set
			If (String.Equals(Me._REF01, value) = false) Then
				Me.OnREF01Changing(value)
				Me.SendPropertyChanging
				Me._REF01 = value
				Me.SendPropertyChanged("REF01")
				Me.OnREF01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF02", DbType:="NVarChar(MAX)")>  _
	Public Property REF02() As String
		Get
			Return Me._REF02
		End Get
		Set
			If (String.Equals(Me._REF02, value) = false) Then
				Me.OnREF02Changing(value)
				Me.SendPropertyChanging
				Me._REF02 = value
				Me.SendPropertyChanged("REF02")
				Me.OnREF02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSERT_DATE", DbType:="DateTime")>  _
	Public Property INSERT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._INSERT_DATE
		End Get
		Set
			If (Me._INSERT_DATE.Equals(value) = false) Then
				Me.OnINSERT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._INSERT_DATE = value
				Me.SendPropertyChanged("INSERT_DATE")
				Me.OnINSERT_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_INCOME")>  _
Partial Public Class MAS_INCOME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _INCOME_NAME As String
	
	Private _IS_USE As System.Nullable(Of Boolean)
	
	Private _OLD_ID As System.Nullable(Of Integer)
	
	Private _HEAD_ID As System.Nullable(Of Integer)
	
	Private _INCOME_CODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnINCOME_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnINCOME_NAMEChanged()
    End Sub
    Partial Private Sub OnIS_USEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USEChanged()
    End Sub
    Partial Private Sub OnOLD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOLD_IDChanged()
    End Sub
    Partial Private Sub OnHEAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_IDChanged()
    End Sub
    Partial Private Sub OnINCOME_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnINCOME_CODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INCOME_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property INCOME_NAME() As String
		Get
			Return Me._INCOME_NAME
		End Get
		Set
			If (String.Equals(Me._INCOME_NAME, value) = false) Then
				Me.OnINCOME_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._INCOME_NAME = value
				Me.SendPropertyChanged("INCOME_NAME")
				Me.OnINCOME_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE", DbType:="Bit")>  _
	Public Property IS_USE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USE
		End Get
		Set
			If (Me._IS_USE.Equals(value) = false) Then
				Me.OnIS_USEChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE = value
				Me.SendPropertyChanged("IS_USE")
				Me.OnIS_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_ID", DbType:="Int")>  _
	Public Property OLD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._OLD_ID
		End Get
		Set
			If (Me._OLD_ID.Equals(value) = false) Then
				Me.OnOLD_IDChanging(value)
				Me.SendPropertyChanging
				Me._OLD_ID = value
				Me.SendPropertyChanged("OLD_ID")
				Me.OnOLD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_ID", DbType:="Int")>  _
	Public Property HEAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_ID
		End Get
		Set
			If (Me._HEAD_ID.Equals(value) = false) Then
				Me.OnHEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_ID = value
				Me.SendPropertyChanged("HEAD_ID")
				Me.OnHEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INCOME_CODE", DbType:="NVarChar(50)")>  _
	Public Property INCOME_CODE() As String
		Get
			Return Me._INCOME_CODE
		End Get
		Set
			If (String.Equals(Me._INCOME_CODE, value) = false) Then
				Me.OnINCOME_CODEChanging(value)
				Me.SendPropertyChanging
				Me._INCOME_CODE = value
				Me.SendPropertyChanged("INCOME_CODE")
				Me.OnINCOME_CODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_BANK")>  _
Partial Public Class MAS_BANK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BANK_ID As Integer
	
	Private _BANK_NAME As String
	
	Private _BANK_CODE As String
	
	Private _BANK_SHORT_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBANK_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBANK_IDChanged()
    End Sub
    Partial Private Sub OnBANK_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBANK_NAMEChanged()
    End Sub
    Partial Private Sub OnBANK_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnBANK_CODEChanged()
    End Sub
    Partial Private Sub OnBANK_SHORT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBANK_SHORT_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BANK_ID() As Integer
		Get
			Return Me._BANK_ID
		End Get
		Set
			If ((Me._BANK_ID = value)  _
						= false) Then
				Me.OnBANK_IDChanging(value)
				Me.SendPropertyChanging
				Me._BANK_ID = value
				Me.SendPropertyChanged("BANK_ID")
				Me.OnBANK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BANK_NAME() As String
		Get
			Return Me._BANK_NAME
		End Get
		Set
			If (String.Equals(Me._BANK_NAME, value) = false) Then
				Me.OnBANK_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BANK_NAME = value
				Me.SendPropertyChanged("BANK_NAME")
				Me.OnBANK_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property BANK_CODE() As String
		Get
			Return Me._BANK_CODE
		End Get
		Set
			If (String.Equals(Me._BANK_CODE, value) = false) Then
				Me.OnBANK_CODEChanging(value)
				Me.SendPropertyChanging
				Me._BANK_CODE = value
				Me.SendPropertyChanged("BANK_CODE")
				Me.OnBANK_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_SHORT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BANK_SHORT_NAME() As String
		Get
			Return Me._BANK_SHORT_NAME
		End Get
		Set
			If (String.Equals(Me._BANK_SHORT_NAME, value) = false) Then
				Me.OnBANK_SHORT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BANK_SHORT_NAME = value
				Me.SendPropertyChanged("BANK_SHORT_NAME")
				Me.OnBANK_SHORT_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CHECKER")>  _
Partial Public Class MAS_CHECKER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CTZID As String
	
	Private _FULLNAME As String
	
	Private _IS_ENABLE As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCTZIDChanging(value As String)
    End Sub
    Partial Private Sub OnCTZIDChanged()
    End Sub
    Partial Private Sub OnFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFULLNAMEChanged()
    End Sub
    Partial Private Sub OnIS_ENABLEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_ENABLEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZID", DbType:="NVarChar(50)")>  _
	Public Property CTZID() As String
		Get
			Return Me._CTZID
		End Get
		Set
			If (String.Equals(Me._CTZID, value) = false) Then
				Me.OnCTZIDChanging(value)
				Me.SendPropertyChanging
				Me._CTZID = value
				Me.SendPropertyChanged("CTZID")
				Me.OnCTZIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FULLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property FULLNAME() As String
		Get
			Return Me._FULLNAME
		End Get
		Set
			If (String.Equals(Me._FULLNAME, value) = false) Then
				Me.OnFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._FULLNAME = value
				Me.SendPropertyChanged("FULLNAME")
				Me.OnFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ENABLE", DbType:="Bit")>  _
	Public Property IS_ENABLE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_ENABLE
		End Get
		Set
			If (Me._IS_ENABLE.Equals(value) = false) Then
				Me.OnIS_ENABLEChanging(value)
				Me.SendPropertyChanging
				Me._IS_ENABLE = value
				Me.SendPropertyChanged("IS_ENABLE")
				Me.OnIS_ENABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CUSTOMER")>  _
Partial Public Class MAS_CUSTOMER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CUSTOMER_ID As Integer
	
	Private _CUSTOMER_TYPE_ID As Integer
	
	Private _TAX_NUMBER As String
	
	Private _PERSONAL_ID As String
	
	Private _CUSTOMER_NAME As String
	
	Private _PAYABLE_NAME As String
	
	Private _H_NUMBER As String
	
	Private _MOO As String
	
	Private _SOI As String
	
	Private _ROAD_NAME As String
	
	Private _DISTICT As String
	
	Private _PREFECTURE As String
	
	Private _PROVINCE As String
	
	Private _ZIP_CODE As String
	
	Private _TEL_NUMBER As String
	
	Private _FAX As String
	
	Private _EMAIL As String
	
	Private _FLAG As System.Nullable(Of Boolean)
	
	Private _PERSONAL_TYPE As System.Nullable(Of Integer)
	
	Private _CUSTOMER_DATE As System.Nullable(Of Date)
	
	Private _POSITION_ID As System.Nullable(Of Integer)
	
	Private _PROVINCE_ID As System.Nullable(Of Integer)
	
	Private _DEPARTMENT_ID As System.Nullable(Of Integer)
	
	Private _OLD_KEY As System.Nullable(Of Integer)
	
	Private _flgdlr As String
	
	Private _flgvat As String
	
	Private _flgincm As String
	
	Private _prefixcd As System.Nullable(Of Integer)
	
	Private _suffix As System.Nullable(Of Integer)
	
	Private _thmblcd As System.Nullable(Of Integer)
	
	Private _amphrcd As System.Nullable(Of Integer)
	
	Private _chngwtcd As System.Nullable(Of Integer)
	
	Private _Cer_Number As String
	
	Private _Full_Address As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCUSTOMER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCUSTOMER_IDChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCUSTOMER_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnTAX_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnTAX_NUMBERChanged()
    End Sub
    Partial Private Sub OnPERSONAL_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPERSONAL_IDChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCUSTOMER_NAMEChanged()
    End Sub
    Partial Private Sub OnPAYABLE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYABLE_NAMEChanged()
    End Sub
    Partial Private Sub OnH_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnH_NUMBERChanged()
    End Sub
    Partial Private Sub OnMOOChanging(value As String)
    End Sub
    Partial Private Sub OnMOOChanged()
    End Sub
    Partial Private Sub OnSOIChanging(value As String)
    End Sub
    Partial Private Sub OnSOIChanged()
    End Sub
    Partial Private Sub OnROAD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnROAD_NAMEChanged()
    End Sub
    Partial Private Sub OnDISTICTChanging(value As String)
    End Sub
    Partial Private Sub OnDISTICTChanged()
    End Sub
    Partial Private Sub OnPREFECTUREChanging(value As String)
    End Sub
    Partial Private Sub OnPREFECTUREChanged()
    End Sub
    Partial Private Sub OnPROVINCEChanging(value As String)
    End Sub
    Partial Private Sub OnPROVINCEChanged()
    End Sub
    Partial Private Sub OnZIP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIP_CODEChanged()
    End Sub
    Partial Private Sub OnTEL_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_NUMBERChanged()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFLAGChanged()
    End Sub
    Partial Private Sub OnPERSONAL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERSONAL_TYPEChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCUSTOMER_DATEChanged()
    End Sub
    Partial Private Sub OnPOSITION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPOSITION_IDChanged()
    End Sub
    Partial Private Sub OnPROVINCE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROVINCE_IDChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnOLD_KEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOLD_KEYChanged()
    End Sub
    Partial Private Sub OnflgdlrChanging(value As String)
    End Sub
    Partial Private Sub OnflgdlrChanged()
    End Sub
    Partial Private Sub OnflgvatChanging(value As String)
    End Sub
    Partial Private Sub OnflgvatChanged()
    End Sub
    Partial Private Sub OnflgincmChanging(value As String)
    End Sub
    Partial Private Sub OnflgincmChanged()
    End Sub
    Partial Private Sub OnprefixcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnprefixcdChanged()
    End Sub
    Partial Private Sub OnsuffixChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsuffixChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnCer_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnCer_NumberChanged()
    End Sub
    Partial Private Sub OnFull_AddressChanging(value As String)
    End Sub
    Partial Private Sub OnFull_AddressChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CUSTOMER_ID() As Integer
		Get
			Return Me._CUSTOMER_ID
		End Get
		Set
			If ((Me._CUSTOMER_ID = value)  _
						= false) Then
				Me.OnCUSTOMER_IDChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_ID = value
				Me.SendPropertyChanged("CUSTOMER_ID")
				Me.OnCUSTOMER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_TYPE_ID", DbType:="Int NOT NULL")>  _
	Public Property CUSTOMER_TYPE_ID() As Integer
		Get
			Return Me._CUSTOMER_TYPE_ID
		End Get
		Set
			If ((Me._CUSTOMER_TYPE_ID = value)  _
						= false) Then
				Me.OnCUSTOMER_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_TYPE_ID = value
				Me.SendPropertyChanged("CUSTOMER_TYPE_ID")
				Me.OnCUSTOMER_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAX_NUMBER", DbType:="NVarChar(255)")>  _
	Public Property TAX_NUMBER() As String
		Get
			Return Me._TAX_NUMBER
		End Get
		Set
			If (String.Equals(Me._TAX_NUMBER, value) = false) Then
				Me.OnTAX_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._TAX_NUMBER = value
				Me.SendPropertyChanged("TAX_NUMBER")
				Me.OnTAX_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSONAL_ID", DbType:="NVarChar(50)")>  _
	Public Property PERSONAL_ID() As String
		Get
			Return Me._PERSONAL_ID
		End Get
		Set
			If (String.Equals(Me._PERSONAL_ID, value) = false) Then
				Me.OnPERSONAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._PERSONAL_ID = value
				Me.SendPropertyChanged("PERSONAL_ID")
				Me.OnPERSONAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CUSTOMER_NAME() As String
		Get
			Return Me._CUSTOMER_NAME
		End Get
		Set
			If (String.Equals(Me._CUSTOMER_NAME, value) = false) Then
				Me.OnCUSTOMER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_NAME = value
				Me.SendPropertyChanged("CUSTOMER_NAME")
				Me.OnCUSTOMER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYABLE_NAME", DbType:="NVarChar(255)")>  _
	Public Property PAYABLE_NAME() As String
		Get
			Return Me._PAYABLE_NAME
		End Get
		Set
			If (String.Equals(Me._PAYABLE_NAME, value) = false) Then
				Me.OnPAYABLE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PAYABLE_NAME = value
				Me.SendPropertyChanged("PAYABLE_NAME")
				Me.OnPAYABLE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_H_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property H_NUMBER() As String
		Get
			Return Me._H_NUMBER
		End Get
		Set
			If (String.Equals(Me._H_NUMBER, value) = false) Then
				Me.OnH_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._H_NUMBER = value
				Me.SendPropertyChanged("H_NUMBER")
				Me.OnH_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOO", DbType:="NVarChar(MAX)")>  _
	Public Property MOO() As String
		Get
			Return Me._MOO
		End Get
		Set
			If (String.Equals(Me._MOO, value) = false) Then
				Me.OnMOOChanging(value)
				Me.SendPropertyChanging
				Me._MOO = value
				Me.SendPropertyChanged("MOO")
				Me.OnMOOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI", DbType:="NVarChar(255)")>  _
	Public Property SOI() As String
		Get
			Return Me._SOI
		End Get
		Set
			If (String.Equals(Me._SOI, value) = false) Then
				Me.OnSOIChanging(value)
				Me.SendPropertyChanging
				Me._SOI = value
				Me.SendPropertyChanged("SOI")
				Me.OnSOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROAD_NAME", DbType:="NVarChar(255)")>  _
	Public Property ROAD_NAME() As String
		Get
			Return Me._ROAD_NAME
		End Get
		Set
			If (String.Equals(Me._ROAD_NAME, value) = false) Then
				Me.OnROAD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ROAD_NAME = value
				Me.SendPropertyChanged("ROAD_NAME")
				Me.OnROAD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTICT", DbType:="NVarChar(255)")>  _
	Public Property DISTICT() As String
		Get
			Return Me._DISTICT
		End Get
		Set
			If (String.Equals(Me._DISTICT, value) = false) Then
				Me.OnDISTICTChanging(value)
				Me.SendPropertyChanging
				Me._DISTICT = value
				Me.SendPropertyChanged("DISTICT")
				Me.OnDISTICTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFECTURE", DbType:="NVarChar(255)")>  _
	Public Property PREFECTURE() As String
		Get
			Return Me._PREFECTURE
		End Get
		Set
			If (String.Equals(Me._PREFECTURE, value) = false) Then
				Me.OnPREFECTUREChanging(value)
				Me.SendPropertyChanging
				Me._PREFECTURE = value
				Me.SendPropertyChanged("PREFECTURE")
				Me.OnPREFECTUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVINCE", DbType:="NVarChar(255)")>  _
	Public Property PROVINCE() As String
		Get
			Return Me._PROVINCE
		End Get
		Set
			If (String.Equals(Me._PROVINCE, value) = false) Then
				Me.OnPROVINCEChanging(value)
				Me.SendPropertyChanging
				Me._PROVINCE = value
				Me.SendPropertyChanged("PROVINCE")
				Me.OnPROVINCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP_CODE", DbType:="NVarChar(255)")>  _
	Public Property ZIP_CODE() As String
		Get
			Return Me._ZIP_CODE
		End Get
		Set
			If (String.Equals(Me._ZIP_CODE, value) = false) Then
				Me.OnZIP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIP_CODE = value
				Me.SendPropertyChanged("ZIP_CODE")
				Me.OnZIP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL_NUMBER", DbType:="NVarChar(50)")>  _
	Public Property TEL_NUMBER() As String
		Get
			Return Me._TEL_NUMBER
		End Get
		Set
			If (String.Equals(Me._TEL_NUMBER, value) = false) Then
				Me.OnTEL_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._TEL_NUMBER = value
				Me.SendPropertyChanged("TEL_NUMBER")
				Me.OnTEL_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="NVarChar(50)")>  _
	Public Property FAX() As String
		Get
			Return Me._FAX
		End Get
		Set
			If (String.Equals(Me._FAX, value) = false) Then
				Me.OnFAXChanging(value)
				Me.SendPropertyChanging
				Me._FAX = value
				Me.SendPropertyChanged("FAX")
				Me.OnFAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(255)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLAG", DbType:="Bit")>  _
	Public Property FLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._FLAG
		End Get
		Set
			If (Me._FLAG.Equals(value) = false) Then
				Me.OnFLAGChanging(value)
				Me.SendPropertyChanging
				Me._FLAG = value
				Me.SendPropertyChanged("FLAG")
				Me.OnFLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSONAL_TYPE", DbType:="Int")>  _
	Public Property PERSONAL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PERSONAL_TYPE
		End Get
		Set
			If (Me._PERSONAL_TYPE.Equals(value) = false) Then
				Me.OnPERSONAL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PERSONAL_TYPE = value
				Me.SendPropertyChanged("PERSONAL_TYPE")
				Me.OnPERSONAL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_DATE", DbType:="DateTime")>  _
	Public Property CUSTOMER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CUSTOMER_DATE
		End Get
		Set
			If (Me._CUSTOMER_DATE.Equals(value) = false) Then
				Me.OnCUSTOMER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_DATE = value
				Me.SendPropertyChanged("CUSTOMER_DATE")
				Me.OnCUSTOMER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_ID", DbType:="Int")>  _
	Public Property POSITION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._POSITION_ID
		End Get
		Set
			If (Me._POSITION_ID.Equals(value) = false) Then
				Me.OnPOSITION_IDChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_ID = value
				Me.SendPropertyChanged("POSITION_ID")
				Me.OnPOSITION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVINCE_ID", DbType:="Int")>  _
	Public Property PROVINCE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROVINCE_ID
		End Get
		Set
			If (Me._PROVINCE_ID.Equals(value) = false) Then
				Me.OnPROVINCE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROVINCE_ID = value
				Me.SendPropertyChanged("PROVINCE_ID")
				Me.OnPROVINCE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ID", DbType:="Int")>  _
	Public Property DEPARTMENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_ID
		End Get
		Set
			If (Me._DEPARTMENT_ID.Equals(value) = false) Then
				Me.OnDEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ID = value
				Me.SendPropertyChanged("DEPARTMENT_ID")
				Me.OnDEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_KEY", DbType:="Int")>  _
	Public Property OLD_KEY() As System.Nullable(Of Integer)
		Get
			Return Me._OLD_KEY
		End Get
		Set
			If (Me._OLD_KEY.Equals(value) = false) Then
				Me.OnOLD_KEYChanging(value)
				Me.SendPropertyChanging
				Me._OLD_KEY = value
				Me.SendPropertyChanged("OLD_KEY")
				Me.OnOLD_KEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flgdlr", DbType:="NVarChar(MAX)")>  _
	Public Property flgdlr() As String
		Get
			Return Me._flgdlr
		End Get
		Set
			If (String.Equals(Me._flgdlr, value) = false) Then
				Me.OnflgdlrChanging(value)
				Me.SendPropertyChanging
				Me._flgdlr = value
				Me.SendPropertyChanged("flgdlr")
				Me.OnflgdlrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flgvat", DbType:="NVarChar(MAX)")>  _
	Public Property flgvat() As String
		Get
			Return Me._flgvat
		End Get
		Set
			If (String.Equals(Me._flgvat, value) = false) Then
				Me.OnflgvatChanging(value)
				Me.SendPropertyChanging
				Me._flgvat = value
				Me.SendPropertyChanged("flgvat")
				Me.OnflgvatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flgincm", DbType:="NVarChar(MAX)")>  _
	Public Property flgincm() As String
		Get
			Return Me._flgincm
		End Get
		Set
			If (String.Equals(Me._flgincm, value) = false) Then
				Me.OnflgincmChanging(value)
				Me.SendPropertyChanging
				Me._flgincm = value
				Me.SendPropertyChanged("flgincm")
				Me.OnflgincmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixcd", DbType:="Int")>  _
	Public Property prefixcd() As System.Nullable(Of Integer)
		Get
			Return Me._prefixcd
		End Get
		Set
			If (Me._prefixcd.Equals(value) = false) Then
				Me.OnprefixcdChanging(value)
				Me.SendPropertyChanging
				Me._prefixcd = value
				Me.SendPropertyChanged("prefixcd")
				Me.OnprefixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suffix", DbType:="Int")>  _
	Public Property suffix() As System.Nullable(Of Integer)
		Get
			Return Me._suffix
		End Get
		Set
			If (Me._suffix.Equals(value) = false) Then
				Me.OnsuffixChanging(value)
				Me.SendPropertyChanging
				Me._suffix = value
				Me.SendPropertyChanged("suffix")
				Me.OnsuffixChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="Int")>  _
	Public Property thmblcd() As System.Nullable(Of Integer)
		Get
			Return Me._thmblcd
		End Get
		Set
			If (Me._thmblcd.Equals(value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="Int")>  _
	Public Property amphrcd() As System.Nullable(Of Integer)
		Get
			Return Me._amphrcd
		End Get
		Set
			If (Me._amphrcd.Equals(value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int")>  _
	Public Property chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cer_Number", DbType:="NVarChar(MAX)")>  _
	Public Property Cer_Number() As String
		Get
			Return Me._Cer_Number
		End Get
		Set
			If (String.Equals(Me._Cer_Number, value) = false) Then
				Me.OnCer_NumberChanging(value)
				Me.SendPropertyChanging
				Me._Cer_Number = value
				Me.SendPropertyChanged("Cer_Number")
				Me.OnCer_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Full_Address", DbType:="NVarChar(MAX)")>  _
	Public Property Full_Address() As String
		Get
			Return Me._Full_Address
		End Get
		Set
			If (String.Equals(Me._Full_Address, value) = false) Then
				Me.OnFull_AddressChanging(value)
				Me.SendPropertyChanging
				Me._Full_Address = value
				Me.SendPropertyChanged("Full_Address")
				Me.OnFull_AddressChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PRE_CUSTOMER")>  _
Partial Public Class MAS_PRE_CUSTOMER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CUSTOMER_ID As Integer
	
	Private _CUSTOMER_TYPE_ID As Integer
	
	Private _TAX_NUMBER As String
	
	Private _PERSONAL_ID As String
	
	Private _CUSTOMER_NAME As String
	
	Private _PAYABLE_NAME As String
	
	Private _H_NUMBER As String
	
	Private _MOO As String
	
	Private _SOI As String
	
	Private _ROAD_NAME As String
	
	Private _DISTICT As String
	
	Private _PREFECTURE As String
	
	Private _PROVINCE As String
	
	Private _ZIP_CODE As String
	
	Private _TEL_NUMBER As String
	
	Private _FAX As String
	
	Private _EMAIL As String
	
	Private _FLAG As System.Nullable(Of Boolean)
	
	Private _PERSONAL_TYPE As System.Nullable(Of Integer)
	
	Private _CUSTOMER_DATE As System.Nullable(Of Date)
	
	Private _POSITION_ID As System.Nullable(Of Integer)
	
	Private _PROVINCE_ID As System.Nullable(Of Integer)
	
	Private _DEPARTMENT_ID As System.Nullable(Of Integer)
	
	Private _OLD_KEY As System.Nullable(Of Integer)
	
	Private _flgdlr As String
	
	Private _flgvat As String
	
	Private _flgincm As String
	
	Private _prefixcd As System.Nullable(Of Integer)
	
	Private _suffix As System.Nullable(Of Integer)
	
	Private _thmblcd As System.Nullable(Of Integer)
	
	Private _amphrcd As System.Nullable(Of Integer)
	
	Private _chngwtcd As System.Nullable(Of Integer)
	
	Private _Cer_Number As String
	
	Private _Full_Address As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCUSTOMER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCUSTOMER_IDChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCUSTOMER_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnTAX_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnTAX_NUMBERChanged()
    End Sub
    Partial Private Sub OnPERSONAL_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPERSONAL_IDChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCUSTOMER_NAMEChanged()
    End Sub
    Partial Private Sub OnPAYABLE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYABLE_NAMEChanged()
    End Sub
    Partial Private Sub OnH_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnH_NUMBERChanged()
    End Sub
    Partial Private Sub OnMOOChanging(value As String)
    End Sub
    Partial Private Sub OnMOOChanged()
    End Sub
    Partial Private Sub OnSOIChanging(value As String)
    End Sub
    Partial Private Sub OnSOIChanged()
    End Sub
    Partial Private Sub OnROAD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnROAD_NAMEChanged()
    End Sub
    Partial Private Sub OnDISTICTChanging(value As String)
    End Sub
    Partial Private Sub OnDISTICTChanged()
    End Sub
    Partial Private Sub OnPREFECTUREChanging(value As String)
    End Sub
    Partial Private Sub OnPREFECTUREChanged()
    End Sub
    Partial Private Sub OnPROVINCEChanging(value As String)
    End Sub
    Partial Private Sub OnPROVINCEChanged()
    End Sub
    Partial Private Sub OnZIP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIP_CODEChanged()
    End Sub
    Partial Private Sub OnTEL_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_NUMBERChanged()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnFLAGChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFLAGChanged()
    End Sub
    Partial Private Sub OnPERSONAL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERSONAL_TYPEChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCUSTOMER_DATEChanged()
    End Sub
    Partial Private Sub OnPOSITION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPOSITION_IDChanged()
    End Sub
    Partial Private Sub OnPROVINCE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROVINCE_IDChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnOLD_KEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOLD_KEYChanged()
    End Sub
    Partial Private Sub OnflgdlrChanging(value As String)
    End Sub
    Partial Private Sub OnflgdlrChanged()
    End Sub
    Partial Private Sub OnflgvatChanging(value As String)
    End Sub
    Partial Private Sub OnflgvatChanged()
    End Sub
    Partial Private Sub OnflgincmChanging(value As String)
    End Sub
    Partial Private Sub OnflgincmChanged()
    End Sub
    Partial Private Sub OnprefixcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnprefixcdChanged()
    End Sub
    Partial Private Sub OnsuffixChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsuffixChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnCer_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnCer_NumberChanged()
    End Sub
    Partial Private Sub OnFull_AddressChanging(value As String)
    End Sub
    Partial Private Sub OnFull_AddressChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CUSTOMER_ID() As Integer
		Get
			Return Me._CUSTOMER_ID
		End Get
		Set
			If ((Me._CUSTOMER_ID = value)  _
						= false) Then
				Me.OnCUSTOMER_IDChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_ID = value
				Me.SendPropertyChanged("CUSTOMER_ID")
				Me.OnCUSTOMER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_TYPE_ID", DbType:="Int NOT NULL")>  _
	Public Property CUSTOMER_TYPE_ID() As Integer
		Get
			Return Me._CUSTOMER_TYPE_ID
		End Get
		Set
			If ((Me._CUSTOMER_TYPE_ID = value)  _
						= false) Then
				Me.OnCUSTOMER_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_TYPE_ID = value
				Me.SendPropertyChanged("CUSTOMER_TYPE_ID")
				Me.OnCUSTOMER_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAX_NUMBER", DbType:="NVarChar(255)")>  _
	Public Property TAX_NUMBER() As String
		Get
			Return Me._TAX_NUMBER
		End Get
		Set
			If (String.Equals(Me._TAX_NUMBER, value) = false) Then
				Me.OnTAX_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._TAX_NUMBER = value
				Me.SendPropertyChanged("TAX_NUMBER")
				Me.OnTAX_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSONAL_ID", DbType:="NVarChar(50)")>  _
	Public Property PERSONAL_ID() As String
		Get
			Return Me._PERSONAL_ID
		End Get
		Set
			If (String.Equals(Me._PERSONAL_ID, value) = false) Then
				Me.OnPERSONAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._PERSONAL_ID = value
				Me.SendPropertyChanged("PERSONAL_ID")
				Me.OnPERSONAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CUSTOMER_NAME() As String
		Get
			Return Me._CUSTOMER_NAME
		End Get
		Set
			If (String.Equals(Me._CUSTOMER_NAME, value) = false) Then
				Me.OnCUSTOMER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_NAME = value
				Me.SendPropertyChanged("CUSTOMER_NAME")
				Me.OnCUSTOMER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYABLE_NAME", DbType:="NVarChar(255)")>  _
	Public Property PAYABLE_NAME() As String
		Get
			Return Me._PAYABLE_NAME
		End Get
		Set
			If (String.Equals(Me._PAYABLE_NAME, value) = false) Then
				Me.OnPAYABLE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PAYABLE_NAME = value
				Me.SendPropertyChanged("PAYABLE_NAME")
				Me.OnPAYABLE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_H_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property H_NUMBER() As String
		Get
			Return Me._H_NUMBER
		End Get
		Set
			If (String.Equals(Me._H_NUMBER, value) = false) Then
				Me.OnH_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._H_NUMBER = value
				Me.SendPropertyChanged("H_NUMBER")
				Me.OnH_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOO", DbType:="NVarChar(MAX)")>  _
	Public Property MOO() As String
		Get
			Return Me._MOO
		End Get
		Set
			If (String.Equals(Me._MOO, value) = false) Then
				Me.OnMOOChanging(value)
				Me.SendPropertyChanging
				Me._MOO = value
				Me.SendPropertyChanged("MOO")
				Me.OnMOOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOI", DbType:="NVarChar(255)")>  _
	Public Property SOI() As String
		Get
			Return Me._SOI
		End Get
		Set
			If (String.Equals(Me._SOI, value) = false) Then
				Me.OnSOIChanging(value)
				Me.SendPropertyChanging
				Me._SOI = value
				Me.SendPropertyChanged("SOI")
				Me.OnSOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROAD_NAME", DbType:="NVarChar(255)")>  _
	Public Property ROAD_NAME() As String
		Get
			Return Me._ROAD_NAME
		End Get
		Set
			If (String.Equals(Me._ROAD_NAME, value) = false) Then
				Me.OnROAD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ROAD_NAME = value
				Me.SendPropertyChanged("ROAD_NAME")
				Me.OnROAD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTICT", DbType:="NVarChar(255)")>  _
	Public Property DISTICT() As String
		Get
			Return Me._DISTICT
		End Get
		Set
			If (String.Equals(Me._DISTICT, value) = false) Then
				Me.OnDISTICTChanging(value)
				Me.SendPropertyChanging
				Me._DISTICT = value
				Me.SendPropertyChanged("DISTICT")
				Me.OnDISTICTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFECTURE", DbType:="NVarChar(255)")>  _
	Public Property PREFECTURE() As String
		Get
			Return Me._PREFECTURE
		End Get
		Set
			If (String.Equals(Me._PREFECTURE, value) = false) Then
				Me.OnPREFECTUREChanging(value)
				Me.SendPropertyChanging
				Me._PREFECTURE = value
				Me.SendPropertyChanged("PREFECTURE")
				Me.OnPREFECTUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVINCE", DbType:="NVarChar(255)")>  _
	Public Property PROVINCE() As String
		Get
			Return Me._PROVINCE
		End Get
		Set
			If (String.Equals(Me._PROVINCE, value) = false) Then
				Me.OnPROVINCEChanging(value)
				Me.SendPropertyChanging
				Me._PROVINCE = value
				Me.SendPropertyChanged("PROVINCE")
				Me.OnPROVINCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP_CODE", DbType:="NVarChar(255)")>  _
	Public Property ZIP_CODE() As String
		Get
			Return Me._ZIP_CODE
		End Get
		Set
			If (String.Equals(Me._ZIP_CODE, value) = false) Then
				Me.OnZIP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIP_CODE = value
				Me.SendPropertyChanged("ZIP_CODE")
				Me.OnZIP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL_NUMBER", DbType:="NVarChar(50)")>  _
	Public Property TEL_NUMBER() As String
		Get
			Return Me._TEL_NUMBER
		End Get
		Set
			If (String.Equals(Me._TEL_NUMBER, value) = false) Then
				Me.OnTEL_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._TEL_NUMBER = value
				Me.SendPropertyChanged("TEL_NUMBER")
				Me.OnTEL_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="NVarChar(50)")>  _
	Public Property FAX() As String
		Get
			Return Me._FAX
		End Get
		Set
			If (String.Equals(Me._FAX, value) = false) Then
				Me.OnFAXChanging(value)
				Me.SendPropertyChanging
				Me._FAX = value
				Me.SendPropertyChanged("FAX")
				Me.OnFAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(255)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLAG", DbType:="Bit")>  _
	Public Property FLAG() As System.Nullable(Of Boolean)
		Get
			Return Me._FLAG
		End Get
		Set
			If (Me._FLAG.Equals(value) = false) Then
				Me.OnFLAGChanging(value)
				Me.SendPropertyChanging
				Me._FLAG = value
				Me.SendPropertyChanged("FLAG")
				Me.OnFLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSONAL_TYPE", DbType:="Int")>  _
	Public Property PERSONAL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PERSONAL_TYPE
		End Get
		Set
			If (Me._PERSONAL_TYPE.Equals(value) = false) Then
				Me.OnPERSONAL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PERSONAL_TYPE = value
				Me.SendPropertyChanged("PERSONAL_TYPE")
				Me.OnPERSONAL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_DATE", DbType:="DateTime")>  _
	Public Property CUSTOMER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CUSTOMER_DATE
		End Get
		Set
			If (Me._CUSTOMER_DATE.Equals(value) = false) Then
				Me.OnCUSTOMER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_DATE = value
				Me.SendPropertyChanged("CUSTOMER_DATE")
				Me.OnCUSTOMER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_ID", DbType:="Int")>  _
	Public Property POSITION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._POSITION_ID
		End Get
		Set
			If (Me._POSITION_ID.Equals(value) = false) Then
				Me.OnPOSITION_IDChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_ID = value
				Me.SendPropertyChanged("POSITION_ID")
				Me.OnPOSITION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVINCE_ID", DbType:="Int")>  _
	Public Property PROVINCE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROVINCE_ID
		End Get
		Set
			If (Me._PROVINCE_ID.Equals(value) = false) Then
				Me.OnPROVINCE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROVINCE_ID = value
				Me.SendPropertyChanged("PROVINCE_ID")
				Me.OnPROVINCE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ID", DbType:="Int")>  _
	Public Property DEPARTMENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_ID
		End Get
		Set
			If (Me._DEPARTMENT_ID.Equals(value) = false) Then
				Me.OnDEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ID = value
				Me.SendPropertyChanged("DEPARTMENT_ID")
				Me.OnDEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_KEY", DbType:="Int")>  _
	Public Property OLD_KEY() As System.Nullable(Of Integer)
		Get
			Return Me._OLD_KEY
		End Get
		Set
			If (Me._OLD_KEY.Equals(value) = false) Then
				Me.OnOLD_KEYChanging(value)
				Me.SendPropertyChanging
				Me._OLD_KEY = value
				Me.SendPropertyChanged("OLD_KEY")
				Me.OnOLD_KEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flgdlr", DbType:="NVarChar(MAX)")>  _
	Public Property flgdlr() As String
		Get
			Return Me._flgdlr
		End Get
		Set
			If (String.Equals(Me._flgdlr, value) = false) Then
				Me.OnflgdlrChanging(value)
				Me.SendPropertyChanging
				Me._flgdlr = value
				Me.SendPropertyChanged("flgdlr")
				Me.OnflgdlrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flgvat", DbType:="NVarChar(MAX)")>  _
	Public Property flgvat() As String
		Get
			Return Me._flgvat
		End Get
		Set
			If (String.Equals(Me._flgvat, value) = false) Then
				Me.OnflgvatChanging(value)
				Me.SendPropertyChanging
				Me._flgvat = value
				Me.SendPropertyChanged("flgvat")
				Me.OnflgvatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flgincm", DbType:="NVarChar(MAX)")>  _
	Public Property flgincm() As String
		Get
			Return Me._flgincm
		End Get
		Set
			If (String.Equals(Me._flgincm, value) = false) Then
				Me.OnflgincmChanging(value)
				Me.SendPropertyChanging
				Me._flgincm = value
				Me.SendPropertyChanged("flgincm")
				Me.OnflgincmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixcd", DbType:="Int")>  _
	Public Property prefixcd() As System.Nullable(Of Integer)
		Get
			Return Me._prefixcd
		End Get
		Set
			If (Me._prefixcd.Equals(value) = false) Then
				Me.OnprefixcdChanging(value)
				Me.SendPropertyChanging
				Me._prefixcd = value
				Me.SendPropertyChanged("prefixcd")
				Me.OnprefixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suffix", DbType:="Int")>  _
	Public Property suffix() As System.Nullable(Of Integer)
		Get
			Return Me._suffix
		End Get
		Set
			If (Me._suffix.Equals(value) = false) Then
				Me.OnsuffixChanging(value)
				Me.SendPropertyChanging
				Me._suffix = value
				Me.SendPropertyChanged("suffix")
				Me.OnsuffixChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="Int")>  _
	Public Property thmblcd() As System.Nullable(Of Integer)
		Get
			Return Me._thmblcd
		End Get
		Set
			If (Me._thmblcd.Equals(value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="Int")>  _
	Public Property amphrcd() As System.Nullable(Of Integer)
		Get
			Return Me._amphrcd
		End Get
		Set
			If (Me._amphrcd.Equals(value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int")>  _
	Public Property chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cer_Number", DbType:="NVarChar(MAX)")>  _
	Public Property Cer_Number() As String
		Get
			Return Me._Cer_Number
		End Get
		Set
			If (String.Equals(Me._Cer_Number, value) = false) Then
				Me.OnCer_NumberChanging(value)
				Me.SendPropertyChanging
				Me._Cer_Number = value
				Me.SendPropertyChanged("Cer_Number")
				Me.OnCer_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Full_Address", DbType:="NVarChar(MAX)")>  _
	Public Property Full_Address() As String
		Get
			Return Me._Full_Address
		End Get
		Set
			If (String.Equals(Me._Full_Address, value) = false) Then
				Me.OnFull_AddressChanging(value)
				Me.SendPropertyChanging
				Me._Full_Address = value
				Me.SendPropertyChanged("Full_Address")
				Me.OnFull_AddressChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PREFIX_v2")>  _
Partial Public Class MAS_PREFIX_v2
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PREFIX_ID As Integer
	
	Private _PREFIX_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPREFIX_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPREFIX_IDChanged()
    End Sub
    Partial Private Sub OnPREFIX_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPREFIX_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PREFIX_ID() As Integer
		Get
			Return Me._PREFIX_ID
		End Get
		Set
			If ((Me._PREFIX_ID = value)  _
						= false) Then
				Me.OnPREFIX_IDChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX_ID = value
				Me.SendPropertyChanged("PREFIX_ID")
				Me.OnPREFIX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PREFIX_NAME() As String
		Get
			Return Me._PREFIX_NAME
		End Get
		Set
			If (String.Equals(Me._PREFIX_NAME, value) = false) Then
				Me.OnPREFIX_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX_NAME = value
				Me.SendPropertyChanged("PREFIX_NAME")
				Me.OnPREFIX_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CUSTOMER_ADD_CER")>  _
Partial Public Class MAS_CUSTOMER_ADD_CER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CUS_FK As System.Nullable(Of Integer)
	
	Private _Cer_Number As String
	
	Private _Cer_Date As System.Nullable(Of Date)
	
	Private _Cer_DateEnd As System.Nullable(Of Date)
	
	Private _DEPARTMENT_ID As System.Nullable(Of Integer)
	
	Private _isEnabled As System.Nullable(Of Boolean)
	
	Private _Cer_Date_Num As System.Nullable(Of Integer)
	
	Private _Cer_DateEnd_Num As System.Nullable(Of Integer)
	
	Private _Cer_Cancel As String
	
	Private _Cer_Install As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCUS_FKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCUS_FKChanged()
    End Sub
    Partial Private Sub OnCer_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnCer_NumberChanged()
    End Sub
    Partial Private Sub OnCer_DateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCer_DateChanged()
    End Sub
    Partial Private Sub OnCer_DateEndChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCer_DateEndChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnisEnabledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnisEnabledChanged()
    End Sub
    Partial Private Sub OnCer_Date_NumChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCer_Date_NumChanged()
    End Sub
    Partial Private Sub OnCer_DateEnd_NumChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCer_DateEnd_NumChanged()
    End Sub
    Partial Private Sub OnCer_CancelChanging(value As String)
    End Sub
    Partial Private Sub OnCer_CancelChanged()
    End Sub
    Partial Private Sub OnCer_InstallChanging(value As String)
    End Sub
    Partial Private Sub OnCer_InstallChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUS_FK", DbType:="Int")>  _
	Public Property CUS_FK() As System.Nullable(Of Integer)
		Get
			Return Me._CUS_FK
		End Get
		Set
			If (Me._CUS_FK.Equals(value) = false) Then
				Me.OnCUS_FKChanging(value)
				Me.SendPropertyChanging
				Me._CUS_FK = value
				Me.SendPropertyChanged("CUS_FK")
				Me.OnCUS_FKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cer_Number", DbType:="NVarChar(MAX)")>  _
	Public Property Cer_Number() As String
		Get
			Return Me._Cer_Number
		End Get
		Set
			If (String.Equals(Me._Cer_Number, value) = false) Then
				Me.OnCer_NumberChanging(value)
				Me.SendPropertyChanging
				Me._Cer_Number = value
				Me.SendPropertyChanged("Cer_Number")
				Me.OnCer_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cer_Date", DbType:="DateTime")>  _
	Public Property Cer_Date() As System.Nullable(Of Date)
		Get
			Return Me._Cer_Date
		End Get
		Set
			If (Me._Cer_Date.Equals(value) = false) Then
				Me.OnCer_DateChanging(value)
				Me.SendPropertyChanging
				Me._Cer_Date = value
				Me.SendPropertyChanged("Cer_Date")
				Me.OnCer_DateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cer_DateEnd", DbType:="DateTime")>  _
	Public Property Cer_DateEnd() As System.Nullable(Of Date)
		Get
			Return Me._Cer_DateEnd
		End Get
		Set
			If (Me._Cer_DateEnd.Equals(value) = false) Then
				Me.OnCer_DateEndChanging(value)
				Me.SendPropertyChanging
				Me._Cer_DateEnd = value
				Me.SendPropertyChanged("Cer_DateEnd")
				Me.OnCer_DateEndChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ID", DbType:="Int")>  _
	Public Property DEPARTMENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_ID
		End Get
		Set
			If (Me._DEPARTMENT_ID.Equals(value) = false) Then
				Me.OnDEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ID = value
				Me.SendPropertyChanged("DEPARTMENT_ID")
				Me.OnDEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isEnabled", DbType:="Bit")>  _
	Public Property isEnabled() As System.Nullable(Of Boolean)
		Get
			Return Me._isEnabled
		End Get
		Set
			If (Me._isEnabled.Equals(value) = false) Then
				Me.OnisEnabledChanging(value)
				Me.SendPropertyChanging
				Me._isEnabled = value
				Me.SendPropertyChanged("isEnabled")
				Me.OnisEnabledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cer_Date_Num", DbType:="Int")>  _
	Public Property Cer_Date_Num() As System.Nullable(Of Integer)
		Get
			Return Me._Cer_Date_Num
		End Get
		Set
			If (Me._Cer_Date_Num.Equals(value) = false) Then
				Me.OnCer_Date_NumChanging(value)
				Me.SendPropertyChanging
				Me._Cer_Date_Num = value
				Me.SendPropertyChanged("Cer_Date_Num")
				Me.OnCer_Date_NumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cer_DateEnd_Num", DbType:="Int")>  _
	Public Property Cer_DateEnd_Num() As System.Nullable(Of Integer)
		Get
			Return Me._Cer_DateEnd_Num
		End Get
		Set
			If (Me._Cer_DateEnd_Num.Equals(value) = false) Then
				Me.OnCer_DateEnd_NumChanging(value)
				Me.SendPropertyChanging
				Me._Cer_DateEnd_Num = value
				Me.SendPropertyChanged("Cer_DateEnd_Num")
				Me.OnCer_DateEnd_NumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cer_Cancel", DbType:="NVarChar(MAX)")>  _
	Public Property Cer_Cancel() As String
		Get
			Return Me._Cer_Cancel
		End Get
		Set
			If (String.Equals(Me._Cer_Cancel, value) = false) Then
				Me.OnCer_CancelChanging(value)
				Me.SendPropertyChanging
				Me._Cer_Cancel = value
				Me.SendPropertyChanged("Cer_Cancel")
				Me.OnCer_CancelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cer_Install", DbType:="NVarChar(MAX)")>  _
	Public Property Cer_Install() As String
		Get
			Return Me._Cer_Install
		End Get
		Set
			If (String.Equals(Me._Cer_Install, value) = false) Then
				Me.OnCer_InstallChanging(value)
				Me.SendPropertyChanging
				Me._Cer_Install = value
				Me.SendPropertyChanged("Cer_Install")
				Me.OnCer_InstallChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_PAY_FROM_SCB")>  _
Partial Public Class LOG_PAY_FROM_SCB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _COL1 As String
	
	Private _COL2 As String
	
	Private _COL3 As String
	
	Private _COL4 As String
	
	Private _COL5 As String
	
	Private _CHECK_DATE As System.Nullable(Of Date)
	
	Private _CHECK_STATUS As System.Nullable(Of Integer)
	
	Private _DATA_DATE As System.Nullable(Of Date)
	
	Private _AMOUNT As System.Nullable(Of Decimal)
	
	Private _CHECKER_ID As System.Nullable(Of Integer)
	
	Private _UPLOAD_DATE As System.Nullable(Of Date)
	
	Private _CITIZEN_UPLOAD As String
	
	Private _PRINT_STAMP As System.Nullable(Of Integer)
	
	Private _PRINT_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCOL1Changing(value As String)
    End Sub
    Partial Private Sub OnCOL1Changed()
    End Sub
    Partial Private Sub OnCOL2Changing(value As String)
    End Sub
    Partial Private Sub OnCOL2Changed()
    End Sub
    Partial Private Sub OnCOL3Changing(value As String)
    End Sub
    Partial Private Sub OnCOL3Changed()
    End Sub
    Partial Private Sub OnCOL4Changing(value As String)
    End Sub
    Partial Private Sub OnCOL4Changed()
    End Sub
    Partial Private Sub OnCOL5Changing(value As String)
    End Sub
    Partial Private Sub OnCOL5Changed()
    End Sub
    Partial Private Sub OnCHECK_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCHECK_DATEChanged()
    End Sub
    Partial Private Sub OnCHECK_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHECK_STATUSChanged()
    End Sub
    Partial Private Sub OnDATA_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATA_DATEChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnCHECKER_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHECKER_IDChanged()
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanged()
    End Sub
    Partial Private Sub OnPRINT_STAMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRINT_STAMPChanged()
    End Sub
    Partial Private Sub OnPRINT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPRINT_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL1", DbType:="NVarChar(MAX)")>  _
	Public Property COL1() As String
		Get
			Return Me._COL1
		End Get
		Set
			If (String.Equals(Me._COL1, value) = false) Then
				Me.OnCOL1Changing(value)
				Me.SendPropertyChanging
				Me._COL1 = value
				Me.SendPropertyChanged("COL1")
				Me.OnCOL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL2", DbType:="NVarChar(MAX)")>  _
	Public Property COL2() As String
		Get
			Return Me._COL2
		End Get
		Set
			If (String.Equals(Me._COL2, value) = false) Then
				Me.OnCOL2Changing(value)
				Me.SendPropertyChanging
				Me._COL2 = value
				Me.SendPropertyChanged("COL2")
				Me.OnCOL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL3", DbType:="NVarChar(MAX)")>  _
	Public Property COL3() As String
		Get
			Return Me._COL3
		End Get
		Set
			If (String.Equals(Me._COL3, value) = false) Then
				Me.OnCOL3Changing(value)
				Me.SendPropertyChanging
				Me._COL3 = value
				Me.SendPropertyChanged("COL3")
				Me.OnCOL3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL4", DbType:="NVarChar(MAX)")>  _
	Public Property COL4() As String
		Get
			Return Me._COL4
		End Get
		Set
			If (String.Equals(Me._COL4, value) = false) Then
				Me.OnCOL4Changing(value)
				Me.SendPropertyChanging
				Me._COL4 = value
				Me.SendPropertyChanged("COL4")
				Me.OnCOL4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL5", DbType:="NVarChar(MAX)")>  _
	Public Property COL5() As String
		Get
			Return Me._COL5
		End Get
		Set
			If (String.Equals(Me._COL5, value) = false) Then
				Me.OnCOL5Changing(value)
				Me.SendPropertyChanging
				Me._COL5 = value
				Me.SendPropertyChanged("COL5")
				Me.OnCOL5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_DATE", DbType:="DateTime")>  _
	Public Property CHECK_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CHECK_DATE
		End Get
		Set
			If (Me._CHECK_DATE.Equals(value) = false) Then
				Me.OnCHECK_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_DATE = value
				Me.SendPropertyChanged("CHECK_DATE")
				Me.OnCHECK_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_STATUS", DbType:="Int")>  _
	Public Property CHECK_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._CHECK_STATUS
		End Get
		Set
			If (Me._CHECK_STATUS.Equals(value) = false) Then
				Me.OnCHECK_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_STATUS = value
				Me.SendPropertyChanged("CHECK_STATUS")
				Me.OnCHECK_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATA_DATE", DbType:="DateTime")>  _
	Public Property DATA_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DATA_DATE
		End Get
		Set
			If (Me._DATA_DATE.Equals(value) = false) Then
				Me.OnDATA_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DATA_DATE = value
				Me.SendPropertyChanged("DATA_DATE")
				Me.OnDATA_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="Money")>  _
	Public Property AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (Me._AMOUNT.Equals(value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECKER_ID", DbType:="Int")>  _
	Public Property CHECKER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CHECKER_ID
		End Get
		Set
			If (Me._CHECKER_ID.Equals(value) = false) Then
				Me.OnCHECKER_IDChanging(value)
				Me.SendPropertyChanging
				Me._CHECKER_ID = value
				Me.SendPropertyChanged("CHECKER_ID")
				Me.OnCHECKER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPLOAD_DATE", DbType:="DateTime")>  _
	Public Property UPLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPLOAD_DATE
		End Get
		Set
			If (Me._UPLOAD_DATE.Equals(value) = false) Then
				Me.OnUPLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPLOAD_DATE = value
				Me.SendPropertyChanged("UPLOAD_DATE")
				Me.OnUPLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_UPLOAD() As String
		Get
			Return Me._CITIZEN_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_UPLOAD, value) = false) Then
				Me.OnCITIZEN_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_UPLOAD")
				Me.OnCITIZEN_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINT_STAMP", DbType:="Int")>  _
	Public Property PRINT_STAMP() As System.Nullable(Of Integer)
		Get
			Return Me._PRINT_STAMP
		End Get
		Set
			If (Me._PRINT_STAMP.Equals(value) = false) Then
				Me.OnPRINT_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._PRINT_STAMP = value
				Me.SendPropertyChanged("PRINT_STAMP")
				Me.OnPRINT_STAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINT_DATE", DbType:="DateTime")>  _
	Public Property PRINT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PRINT_DATE
		End Get
		Set
			If (Me._PRINT_DATE.Equals(value) = false) Then
				Me.OnPRINT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PRINT_DATE = value
				Me.SendPropertyChanged("PRINT_DATE")
				Me.OnPRINT_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BUDGET_PLAN_ACTIVITY")>  _
Partial Public Class BUDGET_PLAN_ACTIVITY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BUDGET_PLAN_ID As Integer
	
	Private _BUDGET_CHILD_ID As System.Nullable(Of Integer)
	
	Private _BUDGET_MANAGE_ID As System.Nullable(Of Integer)
	
	Private _BUDGET_CODE As String
	
	Private _BUDGET_DESCRIPTION As String
	
	Private _BUDGET_AMOUNT As System.Nullable(Of Decimal)
	
	Private _BUDGET_YEAR As System.Nullable(Of Integer)
	
	Private _BUDGET_MAIN_TYPE As System.Nullable(Of Integer)
	
	Private _BUDGET_IS_OVERLAP As System.Nullable(Of Boolean)
	
	Private _BUDGET_IS_ENABLE As System.Nullable(Of Boolean)
	
	Private _BUDGET_ORDER As System.Nullable(Of Integer)
	
	Private _BUDGET_TYPE_ID As System.Nullable(Of Integer)
	
	Private _BUDGET_IS_SUPPORT_DEPT As System.Nullable(Of Boolean)
	
	Private _START_DATE As System.Nullable(Of Date)
	
	Private _END_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBUDGET_PLAN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBUDGET_PLAN_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_CHILD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_CHILD_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_MANAGE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_MANAGE_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_CODEChanged()
    End Sub
    Partial Private Sub OnBUDGET_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnBUDGET_AMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBUDGET_AMOUNTChanged()
    End Sub
    Partial Private Sub OnBUDGET_YEARChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_YEARChanged()
    End Sub
    Partial Private Sub OnBUDGET_MAIN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_MAIN_TYPEChanged()
    End Sub
    Partial Private Sub OnBUDGET_IS_OVERLAPChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBUDGET_IS_OVERLAPChanged()
    End Sub
    Partial Private Sub OnBUDGET_IS_ENABLEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBUDGET_IS_ENABLEChanged()
    End Sub
    Partial Private Sub OnBUDGET_ORDERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_ORDERChanged()
    End Sub
    Partial Private Sub OnBUDGET_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_IS_SUPPORT_DEPTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBUDGET_IS_SUPPORT_DEPTChanged()
    End Sub
    Partial Private Sub OnSTART_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTART_DATEChanged()
    End Sub
    Partial Private Sub OnEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEND_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_PLAN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BUDGET_PLAN_ID() As Integer
		Get
			Return Me._BUDGET_PLAN_ID
		End Get
		Set
			If ((Me._BUDGET_PLAN_ID = value)  _
						= false) Then
				Me.OnBUDGET_PLAN_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_PLAN_ID = value
				Me.SendPropertyChanged("BUDGET_PLAN_ID")
				Me.OnBUDGET_PLAN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_CHILD_ID", DbType:="Int")>  _
	Public Property BUDGET_CHILD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_CHILD_ID
		End Get
		Set
			If (Me._BUDGET_CHILD_ID.Equals(value) = false) Then
				Me.OnBUDGET_CHILD_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_CHILD_ID = value
				Me.SendPropertyChanged("BUDGET_CHILD_ID")
				Me.OnBUDGET_CHILD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_MANAGE_ID", DbType:="Int")>  _
	Public Property BUDGET_MANAGE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_MANAGE_ID
		End Get
		Set
			If (Me._BUDGET_MANAGE_ID.Equals(value) = false) Then
				Me.OnBUDGET_MANAGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_MANAGE_ID = value
				Me.SendPropertyChanged("BUDGET_MANAGE_ID")
				Me.OnBUDGET_MANAGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property BUDGET_CODE() As String
		Get
			Return Me._BUDGET_CODE
		End Get
		Set
			If (String.Equals(Me._BUDGET_CODE, value) = false) Then
				Me.OnBUDGET_CODEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_CODE = value
				Me.SendPropertyChanged("BUDGET_CODE")
				Me.OnBUDGET_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property BUDGET_DESCRIPTION() As String
		Get
			Return Me._BUDGET_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._BUDGET_DESCRIPTION, value) = false) Then
				Me.OnBUDGET_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_DESCRIPTION = value
				Me.SendPropertyChanged("BUDGET_DESCRIPTION")
				Me.OnBUDGET_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_AMOUNT", DbType:="Money")>  _
	Public Property BUDGET_AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._BUDGET_AMOUNT
		End Get
		Set
			If (Me._BUDGET_AMOUNT.Equals(value) = false) Then
				Me.OnBUDGET_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_AMOUNT = value
				Me.SendPropertyChanged("BUDGET_AMOUNT")
				Me.OnBUDGET_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_YEAR", DbType:="Int")>  _
	Public Property BUDGET_YEAR() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_YEAR
		End Get
		Set
			If (Me._BUDGET_YEAR.Equals(value) = false) Then
				Me.OnBUDGET_YEARChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_YEAR = value
				Me.SendPropertyChanged("BUDGET_YEAR")
				Me.OnBUDGET_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_MAIN_TYPE", DbType:="Int")>  _
	Public Property BUDGET_MAIN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_MAIN_TYPE
		End Get
		Set
			If (Me._BUDGET_MAIN_TYPE.Equals(value) = false) Then
				Me.OnBUDGET_MAIN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_MAIN_TYPE = value
				Me.SendPropertyChanged("BUDGET_MAIN_TYPE")
				Me.OnBUDGET_MAIN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_IS_OVERLAP", DbType:="Bit")>  _
	Public Property BUDGET_IS_OVERLAP() As System.Nullable(Of Boolean)
		Get
			Return Me._BUDGET_IS_OVERLAP
		End Get
		Set
			If (Me._BUDGET_IS_OVERLAP.Equals(value) = false) Then
				Me.OnBUDGET_IS_OVERLAPChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_IS_OVERLAP = value
				Me.SendPropertyChanged("BUDGET_IS_OVERLAP")
				Me.OnBUDGET_IS_OVERLAPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_IS_ENABLE", DbType:="Bit")>  _
	Public Property BUDGET_IS_ENABLE() As System.Nullable(Of Boolean)
		Get
			Return Me._BUDGET_IS_ENABLE
		End Get
		Set
			If (Me._BUDGET_IS_ENABLE.Equals(value) = false) Then
				Me.OnBUDGET_IS_ENABLEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_IS_ENABLE = value
				Me.SendPropertyChanged("BUDGET_IS_ENABLE")
				Me.OnBUDGET_IS_ENABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_ORDER", DbType:="Int")>  _
	Public Property BUDGET_ORDER() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_ORDER
		End Get
		Set
			If (Me._BUDGET_ORDER.Equals(value) = false) Then
				Me.OnBUDGET_ORDERChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_ORDER = value
				Me.SendPropertyChanged("BUDGET_ORDER")
				Me.OnBUDGET_ORDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TYPE_ID", DbType:="Int")>  _
	Public Property BUDGET_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_TYPE_ID
		End Get
		Set
			If (Me._BUDGET_TYPE_ID.Equals(value) = false) Then
				Me.OnBUDGET_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TYPE_ID = value
				Me.SendPropertyChanged("BUDGET_TYPE_ID")
				Me.OnBUDGET_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_IS_SUPPORT_DEPT", DbType:="Bit")>  _
	Public Property BUDGET_IS_SUPPORT_DEPT() As System.Nullable(Of Boolean)
		Get
			Return Me._BUDGET_IS_SUPPORT_DEPT
		End Get
		Set
			If (Me._BUDGET_IS_SUPPORT_DEPT.Equals(value) = false) Then
				Me.OnBUDGET_IS_SUPPORT_DEPTChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_IS_SUPPORT_DEPT = value
				Me.SendPropertyChanged("BUDGET_IS_SUPPORT_DEPT")
				Me.OnBUDGET_IS_SUPPORT_DEPTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_START_DATE", DbType:="DateTime")>  _
	Public Property START_DATE() As System.Nullable(Of Date)
		Get
			Return Me._START_DATE
		End Get
		Set
			If (Me._START_DATE.Equals(value) = false) Then
				Me.OnSTART_DATEChanging(value)
				Me.SendPropertyChanging
				Me._START_DATE = value
				Me.SendPropertyChanged("START_DATE")
				Me.OnSTART_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_END_DATE", DbType:="DateTime")>  _
	Public Property END_DATE() As System.Nullable(Of Date)
		Get
			Return Me._END_DATE
		End Get
		Set
			If (Me._END_DATE.Equals(value) = false) Then
				Me.OnEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._END_DATE = value
				Me.SendPropertyChanged("END_DATE")
				Me.OnEND_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_GL")>  _
Partial Public Class MAS_GL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _GL_CODE As String
	
	Private _GL_NAME As String
	
	Private _IS_USE As System.Nullable(Of Boolean)
	
	Private _MONEY_SOURCE_ID As System.Nullable(Of Integer)
	
	Private _expcd As String
	
	Private _subexpcd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnGL_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnGL_CODEChanged()
    End Sub
    Partial Private Sub OnGL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGL_NAMEChanged()
    End Sub
    Partial Private Sub OnIS_USEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USEChanged()
    End Sub
    Partial Private Sub OnMONEY_SOURCE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMONEY_SOURCE_IDChanged()
    End Sub
    Partial Private Sub OnexpcdChanging(value As String)
    End Sub
    Partial Private Sub OnexpcdChanged()
    End Sub
    Partial Private Sub OnsubexpcdChanging(value As String)
    End Sub
    Partial Private Sub OnsubexpcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GL_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property GL_CODE() As String
		Get
			Return Me._GL_CODE
		End Get
		Set
			If (String.Equals(Me._GL_CODE, value) = false) Then
				Me.OnGL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._GL_CODE = value
				Me.SendPropertyChanged("GL_CODE")
				Me.OnGL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property GL_NAME() As String
		Get
			Return Me._GL_NAME
		End Get
		Set
			If (String.Equals(Me._GL_NAME, value) = false) Then
				Me.OnGL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._GL_NAME = value
				Me.SendPropertyChanged("GL_NAME")
				Me.OnGL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE", DbType:="Bit")>  _
	Public Property IS_USE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USE
		End Get
		Set
			If (Me._IS_USE.Equals(value) = false) Then
				Me.OnIS_USEChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE = value
				Me.SendPropertyChanged("IS_USE")
				Me.OnIS_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MONEY_SOURCE_ID", DbType:="Int")>  _
	Public Property MONEY_SOURCE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MONEY_SOURCE_ID
		End Get
		Set
			If (Me._MONEY_SOURCE_ID.Equals(value) = false) Then
				Me.OnMONEY_SOURCE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MONEY_SOURCE_ID = value
				Me.SendPropertyChanged("MONEY_SOURCE_ID")
				Me.OnMONEY_SOURCE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expcd", DbType:="NVarChar(MAX)")>  _
	Public Property expcd() As String
		Get
			Return Me._expcd
		End Get
		Set
			If (String.Equals(Me._expcd, value) = false) Then
				Me.OnexpcdChanging(value)
				Me.SendPropertyChanging
				Me._expcd = value
				Me.SendPropertyChanged("expcd")
				Me.OnexpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subexpcd", DbType:="NVarChar(MAX)")>  _
	Public Property subexpcd() As String
		Get
			Return Me._subexpcd
		End Get
		Set
			If (String.Equals(Me._subexpcd, value) = false) Then
				Me.OnsubexpcdChanging(value)
				Me.SendPropertyChanging
				Me._subexpcd = value
				Me.SendPropertyChanged("subexpcd")
				Me.OnsubexpcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_PAY_HOST_TO_HOST")>  _
Partial Public Class LOG_PAY_HOST_TO_HOST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ref01 As String
	
	Private _ref02 As String
	
	Private _pay_date As System.Nullable(Of Date)
	
	Private _pay_amount As System.Nullable(Of Decimal)
	
	Private _acc_type As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub Onref01Changing(value As String)
    End Sub
    Partial Private Sub Onref01Changed()
    End Sub
    Partial Private Sub Onref02Changing(value As String)
    End Sub
    Partial Private Sub Onref02Changed()
    End Sub
    Partial Private Sub Onpay_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpay_dateChanged()
    End Sub
    Partial Private Sub Onpay_amountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpay_amountChanged()
    End Sub
    Partial Private Sub Onacc_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onacc_typeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref01", DbType:="NVarChar(MAX)")>  _
	Public Property ref01() As String
		Get
			Return Me._ref01
		End Get
		Set
			If (String.Equals(Me._ref01, value) = false) Then
				Me.Onref01Changing(value)
				Me.SendPropertyChanging
				Me._ref01 = value
				Me.SendPropertyChanged("ref01")
				Me.Onref01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref02", DbType:="NVarChar(MAX)")>  _
	Public Property ref02() As String
		Get
			Return Me._ref02
		End Get
		Set
			If (String.Equals(Me._ref02, value) = false) Then
				Me.Onref02Changing(value)
				Me.SendPropertyChanging
				Me._ref02 = value
				Me.SendPropertyChanged("ref02")
				Me.Onref02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pay_date", DbType:="DateTime")>  _
	Public Property pay_date() As System.Nullable(Of Date)
		Get
			Return Me._pay_date
		End Get
		Set
			If (Me._pay_date.Equals(value) = false) Then
				Me.Onpay_dateChanging(value)
				Me.SendPropertyChanging
				Me._pay_date = value
				Me.SendPropertyChanged("pay_date")
				Me.Onpay_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pay_amount", DbType:="Money")>  _
	Public Property pay_amount() As System.Nullable(Of Decimal)
		Get
			Return Me._pay_amount
		End Get
		Set
			If (Me._pay_amount.Equals(value) = false) Then
				Me.Onpay_amountChanging(value)
				Me.SendPropertyChanging
				Me._pay_amount = value
				Me.SendPropertyChanged("pay_amount")
				Me.Onpay_amountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_acc_type", DbType:="Int")>  _
	Public Property acc_type() As System.Nullable(Of Integer)
		Get
			Return Me._acc_type
		End Get
		Set
			If (Me._acc_type.Equals(value) = false) Then
				Me.Onacc_typeChanging(value)
				Me.SendPropertyChanging
				Me._acc_type = value
				Me.SendPropertyChanged("acc_type")
				Me.Onacc_typeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_RE_UPDATE")>  _
Partial Public Class LOG_RE_UPDATE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CITIZEN_ID_RE_UPDATE As String
	
	Private _REF01 As String
	
	Private _REF02 As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_RE_UPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_RE_UPDATEChanged()
    End Sub
    Partial Private Sub OnREF01Changing(value As String)
    End Sub
    Partial Private Sub OnREF01Changed()
    End Sub
    Partial Private Sub OnREF02Changing(value As String)
    End Sub
    Partial Private Sub OnREF02Changed()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_RE_UPDATE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID_RE_UPDATE() As String
		Get
			Return Me._CITIZEN_ID_RE_UPDATE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_RE_UPDATE, value) = false) Then
				Me.OnCITIZEN_ID_RE_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_RE_UPDATE = value
				Me.SendPropertyChanged("CITIZEN_ID_RE_UPDATE")
				Me.OnCITIZEN_ID_RE_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF01", DbType:="NVarChar(50)")>  _
	Public Property REF01() As String
		Get
			Return Me._REF01
		End Get
		Set
			If (String.Equals(Me._REF01, value) = false) Then
				Me.OnREF01Changing(value)
				Me.SendPropertyChanging
				Me._REF01 = value
				Me.SendPropertyChanged("REF01")
				Me.OnREF01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF02", DbType:="NVarChar(50)")>  _
	Public Property REF02() As String
		Get
			Return Me._REF02
		End Get
		Set
			If (String.Equals(Me._REF02, value) = false) Then
				Me.OnREF02Changing(value)
				Me.SendPropertyChanging
				Me._REF02 = value
				Me.SendPropertyChanged("REF02")
				Me.OnREF02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RE_UPDATE_USER")>  _
Partial Public Class MAS_RE_UPDATE_USER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CITIZEN_ID As String
	
	Private _ACTIVE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Int")>  _
	Public Property ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_RECEIPT_ERROR")>  _
Partial Public Class LOG_RECEIPT_ERROR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ERROR_MSG As String
	
	Private _CREATEDATE As System.Nullable(Of Date)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _REF01 As String
	
	Private _REF02 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnERROR_MSGChanging(value As String)
    End Sub
    Partial Private Sub OnERROR_MSGChanged()
    End Sub
    Partial Private Sub OnCREATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATEDATEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnREF01Changing(value As String)
    End Sub
    Partial Private Sub OnREF01Changed()
    End Sub
    Partial Private Sub OnREF02Changing(value As String)
    End Sub
    Partial Private Sub OnREF02Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERROR_MSG", DbType:="NVarChar(MAX)")>  _
	Public Property ERROR_MSG() As String
		Get
			Return Me._ERROR_MSG
		End Get
		Set
			If (String.Equals(Me._ERROR_MSG, value) = false) Then
				Me.OnERROR_MSGChanging(value)
				Me.SendPropertyChanging
				Me._ERROR_MSG = value
				Me.SendPropertyChanged("ERROR_MSG")
				Me.OnERROR_MSGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATEDATE", DbType:="DateTime")>  _
	Public Property CREATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATEDATE
		End Get
		Set
			If (Me._CREATEDATE.Equals(value) = false) Then
				Me.OnCREATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATEDATE = value
				Me.SendPropertyChanged("CREATEDATE")
				Me.OnCREATEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF01", DbType:="NVarChar(50)")>  _
	Public Property REF01() As String
		Get
			Return Me._REF01
		End Get
		Set
			If (String.Equals(Me._REF01, value) = false) Then
				Me.OnREF01Changing(value)
				Me.SendPropertyChanging
				Me._REF01 = value
				Me.SendPropertyChanged("REF01")
				Me.OnREF01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF02", DbType:="NVarChar(50)")>  _
	Public Property REF02() As String
		Get
			Return Me._REF02
		End Get
		Set
			If (String.Equals(Me._REF02, value) = false) Then
				Me.OnREF02Changing(value)
				Me.SendPropertyChanging
				Me._REF02 = value
				Me.SendPropertyChanged("REF02")
				Me.OnREF02Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ACCOUNT_BANK")>  _
Partial Public Class MAS_ACCOUNT_BANK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_BANK As System.Nullable(Of Integer)
	
	Private _ACCOUNT_NAME As String
	
	Private _ACCOUNT_TYPE As String
	
	Private _ACCOUNT_NUMBER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_BANKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_BANKChanged()
    End Sub
    Partial Private Sub OnACCOUNT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnACCOUNT_NAMEChanged()
    End Sub
    Partial Private Sub OnACCOUNT_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnACCOUNT_TYPEChanged()
    End Sub
    Partial Private Sub OnACCOUNT_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnACCOUNT_NUMBERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_BANK", DbType:="Int")>  _
	Public Property FK_BANK() As System.Nullable(Of Integer)
		Get
			Return Me._FK_BANK
		End Get
		Set
			If (Me._FK_BANK.Equals(value) = false) Then
				Me.OnFK_BANKChanging(value)
				Me.SendPropertyChanging
				Me._FK_BANK = value
				Me.SendPropertyChanged("FK_BANK")
				Me.OnFK_BANKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCOUNT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ACCOUNT_NAME() As String
		Get
			Return Me._ACCOUNT_NAME
		End Get
		Set
			If (String.Equals(Me._ACCOUNT_NAME, value) = false) Then
				Me.OnACCOUNT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNT_NAME = value
				Me.SendPropertyChanged("ACCOUNT_NAME")
				Me.OnACCOUNT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCOUNT_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property ACCOUNT_TYPE() As String
		Get
			Return Me._ACCOUNT_TYPE
		End Get
		Set
			If (String.Equals(Me._ACCOUNT_TYPE, value) = false) Then
				Me.OnACCOUNT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNT_TYPE = value
				Me.SendPropertyChanged("ACCOUNT_TYPE")
				Me.OnACCOUNT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCOUNT_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property ACCOUNT_NUMBER() As String
		Get
			Return Me._ACCOUNT_NUMBER
		End Get
		Set
			If (String.Equals(Me._ACCOUNT_NUMBER, value) = false) Then
				Me.OnACCOUNT_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNT_NUMBER = value
				Me.SendPropertyChanged("ACCOUNT_NUMBER")
				Me.OnACCOUNT_NUMBERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PERSONAL")>  _
Partial Public Class MAS_PERSONAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDRUN As Integer
	
	Private _NATIONAL_ID As String
	
	Private _PREFIX_ID As System.Nullable(Of Integer)
	
	Private _NAME As String
	
	Private _SURNAME As String
	
	Private _DEPARTMENT_ID As System.Nullable(Of Integer)
	
	Private _POSITION_ID As System.Nullable(Of Integer)
	
	Private _LEVEL_ID As System.Nullable(Of Integer)
	
	Private _BANK_ID As String
	
	Private _PERSON_TYPE As System.Nullable(Of Integer)
	
	Private _STATUS_PERSON As System.Nullable(Of Integer)
	
	Private _COOPERATE_NUMBER As String
	
	Private _FK_BANK As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDRUNChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDRUNChanged()
    End Sub
    Partial Private Sub OnNATIONAL_IDChanging(value As String)
    End Sub
    Partial Private Sub OnNATIONAL_IDChanged()
    End Sub
    Partial Private Sub OnPREFIX_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPREFIX_IDChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnSURNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSURNAMEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnPOSITION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPOSITION_IDChanged()
    End Sub
    Partial Private Sub OnLEVEL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLEVEL_IDChanged()
    End Sub
    Partial Private Sub OnBANK_IDChanging(value As String)
    End Sub
    Partial Private Sub OnBANK_IDChanged()
    End Sub
    Partial Private Sub OnPERSON_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERSON_TYPEChanged()
    End Sub
    Partial Private Sub OnSTATUS_PERSONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_PERSONChanged()
    End Sub
    Partial Private Sub OnCOOPERATE_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnCOOPERATE_NUMBERChanged()
    End Sub
    Partial Private Sub OnFK_BANKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_BANKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRUN", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDRUN() As Integer
		Get
			Return Me._IDRUN
		End Get
		Set
			If ((Me._IDRUN = value)  _
						= false) Then
				Me.OnIDRUNChanging(value)
				Me.SendPropertyChanging
				Me._IDRUN = value
				Me.SendPropertyChanged("IDRUN")
				Me.OnIDRUNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_ID", DbType:="NVarChar(50)")>  _
	Public Property NATIONAL_ID() As String
		Get
			Return Me._NATIONAL_ID
		End Get
		Set
			If (String.Equals(Me._NATIONAL_ID, value) = false) Then
				Me.OnNATIONAL_IDChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_ID = value
				Me.SendPropertyChanged("NATIONAL_ID")
				Me.OnNATIONAL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX_ID", DbType:="Int")>  _
	Public Property PREFIX_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PREFIX_ID
		End Get
		Set
			If (Me._PREFIX_ID.Equals(value) = false) Then
				Me.OnPREFIX_IDChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX_ID = value
				Me.SendPropertyChanged("PREFIX_ID")
				Me.OnPREFIX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SURNAME() As String
		Get
			Return Me._SURNAME
		End Get
		Set
			If (String.Equals(Me._SURNAME, value) = false) Then
				Me.OnSURNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SURNAME = value
				Me.SendPropertyChanged("SURNAME")
				Me.OnSURNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ID", DbType:="Int")>  _
	Public Property DEPARTMENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_ID
		End Get
		Set
			If (Me._DEPARTMENT_ID.Equals(value) = false) Then
				Me.OnDEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ID = value
				Me.SendPropertyChanged("DEPARTMENT_ID")
				Me.OnDEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_ID", DbType:="Int")>  _
	Public Property POSITION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._POSITION_ID
		End Get
		Set
			If (Me._POSITION_ID.Equals(value) = false) Then
				Me.OnPOSITION_IDChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_ID = value
				Me.SendPropertyChanged("POSITION_ID")
				Me.OnPOSITION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVEL_ID", DbType:="Int")>  _
	Public Property LEVEL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LEVEL_ID
		End Get
		Set
			If (Me._LEVEL_ID.Equals(value) = false) Then
				Me.OnLEVEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._LEVEL_ID = value
				Me.SendPropertyChanged("LEVEL_ID")
				Me.OnLEVEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK_ID", DbType:="NVarChar(50)")>  _
	Public Property BANK_ID() As String
		Get
			Return Me._BANK_ID
		End Get
		Set
			If (String.Equals(Me._BANK_ID, value) = false) Then
				Me.OnBANK_IDChanging(value)
				Me.SendPropertyChanging
				Me._BANK_ID = value
				Me.SendPropertyChanged("BANK_ID")
				Me.OnBANK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSON_TYPE", DbType:="Int")>  _
	Public Property PERSON_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PERSON_TYPE
		End Get
		Set
			If (Me._PERSON_TYPE.Equals(value) = false) Then
				Me.OnPERSON_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PERSON_TYPE = value
				Me.SendPropertyChanged("PERSON_TYPE")
				Me.OnPERSON_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_PERSON", DbType:="Int")>  _
	Public Property STATUS_PERSON() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_PERSON
		End Get
		Set
			If (Me._STATUS_PERSON.Equals(value) = false) Then
				Me.OnSTATUS_PERSONChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_PERSON = value
				Me.SendPropertyChanged("STATUS_PERSON")
				Me.OnSTATUS_PERSONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COOPERATE_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property COOPERATE_NUMBER() As String
		Get
			Return Me._COOPERATE_NUMBER
		End Get
		Set
			If (String.Equals(Me._COOPERATE_NUMBER, value) = false) Then
				Me.OnCOOPERATE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._COOPERATE_NUMBER = value
				Me.SendPropertyChanged("COOPERATE_NUMBER")
				Me.OnCOOPERATE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_BANK", DbType:="Int")>  _
	Public Property FK_BANK() As System.Nullable(Of Integer)
		Get
			Return Me._FK_BANK
		End Get
		Set
			If (Me._FK_BANK.Equals(value) = false) Then
				Me.OnFK_BANKChanging(value)
				Me.SendPropertyChanging
				Me._FK_BANK = value
				Me.SendPropertyChanged("FK_BANK")
				Me.OnFK_BANKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_H2H_ERROR")>  _
Partial Public Class LOG_H2H_ERROR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ref01 As String
	
	Private _ref02 As String
	
	Private _error_msg As String
	
	Private _create_date As System.Nullable(Of Date)
	
	Private _RESULT As String
	
	Private _update_date As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub Onref01Changing(value As String)
    End Sub
    Partial Private Sub Onref01Changed()
    End Sub
    Partial Private Sub Onref02Changing(value As String)
    End Sub
    Partial Private Sub Onref02Changed()
    End Sub
    Partial Private Sub Onerror_msgChanging(value As String)
    End Sub
    Partial Private Sub Onerror_msgChanged()
    End Sub
    Partial Private Sub Oncreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreate_dateChanged()
    End Sub
    Partial Private Sub OnRESULTChanging(value As String)
    End Sub
    Partial Private Sub OnRESULTChanged()
    End Sub
    Partial Private Sub Onupdate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onupdate_dateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref01", DbType:="NVarChar(MAX)")>  _
	Public Property ref01() As String
		Get
			Return Me._ref01
		End Get
		Set
			If (String.Equals(Me._ref01, value) = false) Then
				Me.Onref01Changing(value)
				Me.SendPropertyChanging
				Me._ref01 = value
				Me.SendPropertyChanged("ref01")
				Me.Onref01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref02", DbType:="NVarChar(MAX)")>  _
	Public Property ref02() As String
		Get
			Return Me._ref02
		End Get
		Set
			If (String.Equals(Me._ref02, value) = false) Then
				Me.Onref02Changing(value)
				Me.SendPropertyChanging
				Me._ref02 = value
				Me.SendPropertyChanged("ref02")
				Me.Onref02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_error_msg", DbType:="NVarChar(MAX)")>  _
	Public Property error_msg() As String
		Get
			Return Me._error_msg
		End Get
		Set
			If (String.Equals(Me._error_msg, value) = false) Then
				Me.Onerror_msgChanging(value)
				Me.SendPropertyChanging
				Me._error_msg = value
				Me.SendPropertyChanged("error_msg")
				Me.Onerror_msgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_create_date", DbType:="DateTime")>  _
	Public Property create_date() As System.Nullable(Of Date)
		Get
			Return Me._create_date
		End Get
		Set
			If (Me._create_date.Equals(value) = false) Then
				Me.Oncreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._create_date = value
				Me.SendPropertyChanged("create_date")
				Me.Oncreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESULT", DbType:="NVarChar(50)")>  _
	Public Property RESULT() As String
		Get
			Return Me._RESULT
		End Get
		Set
			If (String.Equals(Me._RESULT, value) = false) Then
				Me.OnRESULTChanging(value)
				Me.SendPropertyChanging
				Me._RESULT = value
				Me.SendPropertyChanged("RESULT")
				Me.OnRESULTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_update_date", DbType:="DateTime")>  _
	Public Property update_date() As System.Nullable(Of Date)
		Get
			Return Me._update_date
		End Get
		Set
			If (Me._update_date.Equals(value) = false) Then
				Me.Onupdate_dateChanging(value)
				Me.SendPropertyChanging
				Me._update_date = value
				Me.SendPropertyChanged("update_date")
				Me.Onupdate_dateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_CONFIRM")>  _
Partial Public Class LOG_CONFIRM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _REF01 As String
	
	Private _REF02 As String
	
	Private _CREATEDATE As System.Nullable(Of Date)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnREF01Changing(value As String)
    End Sub
    Partial Private Sub OnREF01Changed()
    End Sub
    Partial Private Sub OnREF02Changing(value As String)
    End Sub
    Partial Private Sub OnREF02Changed()
    End Sub
    Partial Private Sub OnCREATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATEDATEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF01", DbType:="NVarChar(MAX)")>  _
	Public Property REF01() As String
		Get
			Return Me._REF01
		End Get
		Set
			If (String.Equals(Me._REF01, value) = false) Then
				Me.OnREF01Changing(value)
				Me.SendPropertyChanging
				Me._REF01 = value
				Me.SendPropertyChanged("REF01")
				Me.OnREF01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF02", DbType:="NVarChar(MAX)")>  _
	Public Property REF02() As String
		Get
			Return Me._REF02
		End Get
		Set
			If (String.Equals(Me._REF02, value) = false) Then
				Me.OnREF02Changing(value)
				Me.SendPropertyChanging
				Me._REF02 = value
				Me.SendPropertyChanged("REF02")
				Me.OnREF02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATEDATE", DbType:="DateTime")>  _
	Public Property CREATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATEDATE
		End Get
		Set
			If (Me._CREATEDATE.Equals(value) = false) Then
				Me.OnCREATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATEDATE = value
				Me.SendPropertyChanged("CREATEDATE")
				Me.OnCREATEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PURCHASE")>  _
Partial Public Class MAS_PURCHASE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PURCHASE_NAME As String
	
	Private _BgYear As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPURCHASE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPURCHASE_NAMEChanged()
    End Sub
    Partial Private Sub OnBgYearChanging(value As String)
    End Sub
    Partial Private Sub OnBgYearChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PURCHASE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PURCHASE_NAME() As String
		Get
			Return Me._PURCHASE_NAME
		End Get
		Set
			If (String.Equals(Me._PURCHASE_NAME, value) = false) Then
				Me.OnPURCHASE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PURCHASE_NAME = value
				Me.SendPropertyChanged("PURCHASE_NAME")
				Me.OnPURCHASE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BgYear", DbType:="NChar(10)")>  _
	Public Property BgYear() As String
		Get
			Return Me._BgYear
		End Get
		Set
			If (String.Equals(Me._BgYear, value) = false) Then
				Me.OnBgYearChanging(value)
				Me.SendPropertyChanging
				Me._BgYear = value
				Me.SendPropertyChanged("BgYear")
				Me.OnBgYearChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DEKA_DETAIL_BUDGET")>  _
Partial Public Class MAS_DEKA_DETAIL_BUDGET
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _HEAD_ID As String
	
	Private _SUB_CODE As String
	
	Private _DETAIL_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnHEAD_IDChanging(value As String)
    End Sub
    Partial Private Sub OnHEAD_IDChanged()
    End Sub
    Partial Private Sub OnSUB_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSUB_CODEChanged()
    End Sub
    Partial Private Sub OnDETAIL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDETAIL_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_ID", DbType:="NVarChar(50)")>  _
	Public Property HEAD_ID() As String
		Get
			Return Me._HEAD_ID
		End Get
		Set
			If (String.Equals(Me._HEAD_ID, value) = false) Then
				Me.OnHEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_ID = value
				Me.SendPropertyChanged("HEAD_ID")
				Me.OnHEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_CODE", DbType:="NVarChar(50)")>  _
	Public Property SUB_CODE() As String
		Get
			Return Me._SUB_CODE
		End Get
		Set
			If (String.Equals(Me._SUB_CODE, value) = false) Then
				Me.OnSUB_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_CODE = value
				Me.SendPropertyChanged("SUB_CODE")
				Me.OnSUB_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DETAIL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DETAIL_NAME() As String
		Get
			Return Me._DETAIL_NAME
		End Get
		Set
			If (String.Equals(Me._DETAIL_NAME, value) = false) Then
				Me.OnDETAIL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DETAIL_NAME = value
				Me.SendPropertyChanged("DETAIL_NAME")
				Me.OnDETAIL_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MONEY_RECEIVER")>  _
Partial Public Class MAS_MONEY_RECEIVER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RECEIVER_MONEY_ID As Integer
	
	Private _IS_RECEIVER As System.Nullable(Of Boolean)
	
	Private _RECEIVER_NAME As String
	
	Private _POSITION_NAME As String
	
	Private _IDEN As String
	
	Private _IS_SHOW As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRECEIVER_MONEY_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRECEIVER_MONEY_IDChanged()
    End Sub
    Partial Private Sub OnIS_RECEIVERChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_RECEIVERChanged()
    End Sub
    Partial Private Sub OnRECEIVER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRECEIVER_NAMEChanged()
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanged()
    End Sub
    Partial Private Sub OnIDENChanging(value As String)
    End Sub
    Partial Private Sub OnIDENChanged()
    End Sub
    Partial Private Sub OnIS_SHOWChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_SHOWChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECEIVER_MONEY_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RECEIVER_MONEY_ID() As Integer
		Get
			Return Me._RECEIVER_MONEY_ID
		End Get
		Set
			If ((Me._RECEIVER_MONEY_ID = value)  _
						= false) Then
				Me.OnRECEIVER_MONEY_IDChanging(value)
				Me.SendPropertyChanging
				Me._RECEIVER_MONEY_ID = value
				Me.SendPropertyChanged("RECEIVER_MONEY_ID")
				Me.OnRECEIVER_MONEY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_RECEIVER", DbType:="Bit")>  _
	Public Property IS_RECEIVER() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_RECEIVER
		End Get
		Set
			If (Me._IS_RECEIVER.Equals(value) = false) Then
				Me.OnIS_RECEIVERChanging(value)
				Me.SendPropertyChanging
				Me._IS_RECEIVER = value
				Me.SendPropertyChanged("IS_RECEIVER")
				Me.OnIS_RECEIVERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECEIVER_NAME", DbType:="NVarChar(255)")>  _
	Public Property RECEIVER_NAME() As String
		Get
			Return Me._RECEIVER_NAME
		End Get
		Set
			If (String.Equals(Me._RECEIVER_NAME, value) = false) Then
				Me.OnRECEIVER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._RECEIVER_NAME = value
				Me.SendPropertyChanged("RECEIVER_NAME")
				Me.OnRECEIVER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NAME", DbType:="NVarChar(255)")>  _
	Public Property POSITION_NAME() As String
		Get
			Return Me._POSITION_NAME
		End Get
		Set
			If (String.Equals(Me._POSITION_NAME, value) = false) Then
				Me.OnPOSITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_NAME = value
				Me.SendPropertyChanged("POSITION_NAME")
				Me.OnPOSITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDEN", DbType:="NVarChar(MAX)")>  _
	Public Property IDEN() As String
		Get
			Return Me._IDEN
		End Get
		Set
			If (String.Equals(Me._IDEN, value) = false) Then
				Me.OnIDENChanging(value)
				Me.SendPropertyChanging
				Me._IDEN = value
				Me.SendPropertyChanged("IDEN")
				Me.OnIDENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_SHOW", DbType:="Bit")>  _
	Public Property IS_SHOW() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_SHOW
		End Get
		Set
			If (Me._IS_SHOW.Equals(value) = false) Then
				Me.OnIS_SHOWChanging(value)
				Me.SendPropertyChanging
				Me._IS_SHOW = value
				Me.SendPropertyChanged("IS_SHOW")
				Me.OnIS_SHOWChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.genno_temp")>  _
Partial Public Class genno_temp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _GENNO As String
	
	Private _create_date As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As String)
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub Oncreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreate_dateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property GENNO() As String
		Get
			Return Me._GENNO
		End Get
		Set
			If (String.Equals(Me._GENNO, value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_create_date", DbType:="DateTime")>  _
	Public Property create_date() As System.Nullable(Of Date)
		Get
			Return Me._create_date
		End Get
		Set
			If (Me._create_date.Equals(value) = false) Then
				Me.Oncreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._create_date = value
				Me.SendPropertyChanged("create_date")
				Me.Oncreate_dateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_11PM")>  _
Partial Public Class LOG_11PM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _REF01 As String
	
	Private _REF02 As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnREF01Changing(value As String)
    End Sub
    Partial Private Sub OnREF01Changed()
    End Sub
    Partial Private Sub OnREF02Changing(value As String)
    End Sub
    Partial Private Sub OnREF02Changed()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF01", DbType:="NVarChar(50)")>  _
	Public Property REF01() As String
		Get
			Return Me._REF01
		End Get
		Set
			If (String.Equals(Me._REF01, value) = false) Then
				Me.OnREF01Changing(value)
				Me.SendPropertyChanging
				Me._REF01 = value
				Me.SendPropertyChanged("REF01")
				Me.OnREF01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF02", DbType:="NVarChar(50)")>  _
	Public Property REF02() As String
		Get
			Return Me._REF02
		End Get
		Set
			If (String.Equals(Me._REF02, value) = false) Then
				Me.OnREF02Changing(value)
				Me.SendPropertyChanging
				Me._REF02 = value
				Me.SendPropertyChanged("REF02")
				Me.OnREF02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TEMP_UPDATE_QR")>  _
Partial Public Class TEMP_UPDATE_QR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _R_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnR_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnR_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_IDA", DbType:="Int")>  _
	Public Property R_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._R_IDA
		End Get
		Set
			If (Me._R_IDA.Equals(value) = false) Then
				Me.OnR_IDAChanging(value)
				Me.SendPropertyChanging
				Me._R_IDA = value
				Me.SendPropertyChanged("R_IDA")
				Me.OnR_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_CONFIRM_SCB")>  _
Partial Public Class LOG_CONFIRM_SCB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _REF01 As String
	
	Private _REF02 As String
	
	Private _CREATEDATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnREF01Changing(value As String)
    End Sub
    Partial Private Sub OnREF01Changed()
    End Sub
    Partial Private Sub OnREF02Changing(value As String)
    End Sub
    Partial Private Sub OnREF02Changed()
    End Sub
    Partial Private Sub OnCREATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATEDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF01", DbType:="NVarChar(MAX)")>  _
	Public Property REF01() As String
		Get
			Return Me._REF01
		End Get
		Set
			If (String.Equals(Me._REF01, value) = false) Then
				Me.OnREF01Changing(value)
				Me.SendPropertyChanging
				Me._REF01 = value
				Me.SendPropertyChanged("REF01")
				Me.OnREF01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF02", DbType:="NVarChar(MAX)")>  _
	Public Property REF02() As String
		Get
			Return Me._REF02
		End Get
		Set
			If (String.Equals(Me._REF02, value) = false) Then
				Me.OnREF02Changing(value)
				Me.SendPropertyChanging
				Me._REF02 = value
				Me.SendPropertyChanged("REF02")
				Me.OnREF02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATEDATE", DbType:="DateTime")>  _
	Public Property CREATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATEDATE
		End Get
		Set
			If (Me._CREATEDATE.Equals(value) = false) Then
				Me.OnCREATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATEDATE = value
				Me.SendPropertyChanged("CREATEDATE")
				Me.OnCREATEDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_WAIT_RECEIPT")>  _
Partial Public Class LOG_WAIT_RECEIPT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _REF01 As String
	
	Private _REF02 As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _STATUS_RECEIPT As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnREF01Changing(value As String)
    End Sub
    Partial Private Sub OnREF01Changed()
    End Sub
    Partial Private Sub OnREF02Changing(value As String)
    End Sub
    Partial Private Sub OnREF02Changed()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUS_RECEIPTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_RECEIPTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF01", DbType:="NVarChar(50)")>  _
	Public Property REF01() As String
		Get
			Return Me._REF01
		End Get
		Set
			If (String.Equals(Me._REF01, value) = false) Then
				Me.OnREF01Changing(value)
				Me.SendPropertyChanging
				Me._REF01 = value
				Me.SendPropertyChanged("REF01")
				Me.OnREF01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF02", DbType:="NVarChar(50)")>  _
	Public Property REF02() As String
		Get
			Return Me._REF02
		End Get
		Set
			If (String.Equals(Me._REF02, value) = false) Then
				Me.OnREF02Changing(value)
				Me.SendPropertyChanging
				Me._REF02 = value
				Me.SendPropertyChanged("REF02")
				Me.OnREF02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_RECEIPT", DbType:="Int")>  _
	Public Property STATUS_RECEIPT() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_RECEIPT
		End Get
		Set
			If (Me._STATUS_RECEIPT.Equals(value) = false) Then
				Me.OnSTATUS_RECEIPTChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_RECEIPT = value
				Me.SendPropertyChanged("STATUS_RECEIPT")
				Me.OnSTATUS_RECEIPTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_WAIT_QUEUE_LIST")>  _
Partial Public Class LOG_WAIT_QUEUE_LIST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _REF01 As String
	
	Private _REF02 As String
	
	Private _CREATEDATE As System.Nullable(Of Date)
	
	Private _ROW_ID As System.Nullable(Of Integer)
	
	Private _FK_FDL_IDA As System.Nullable(Of Integer)
	
	Private _FK_ID As System.Nullable(Of Integer)
	
	Private _DVCD As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As String
	
	Private _FK_REF_STATUS As System.Nullable(Of Integer)
	
	Private _STATUS_SEND As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnREF01Changing(value As String)
    End Sub
    Partial Private Sub OnREF01Changed()
    End Sub
    Partial Private Sub OnREF02Changing(value As String)
    End Sub
    Partial Private Sub OnREF02Changed()
    End Sub
    Partial Private Sub OnCREATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATEDATEChanged()
    End Sub
    Partial Private Sub OnROW_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnROW_IDChanged()
    End Sub
    Partial Private Sub OnFK_FDL_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_FDL_IDAChanged()
    End Sub
    Partial Private Sub OnFK_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDChanged()
    End Sub
    Partial Private Sub OnDVCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDVCDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnFK_REF_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_REF_STATUSChanged()
    End Sub
    Partial Private Sub OnSTATUS_SENDChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_SENDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF01", DbType:="NVarChar(MAX)")>  _
	Public Property REF01() As String
		Get
			Return Me._REF01
		End Get
		Set
			If (String.Equals(Me._REF01, value) = false) Then
				Me.OnREF01Changing(value)
				Me.SendPropertyChanging
				Me._REF01 = value
				Me.SendPropertyChanged("REF01")
				Me.OnREF01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF02", DbType:="NVarChar(MAX)")>  _
	Public Property REF02() As String
		Get
			Return Me._REF02
		End Get
		Set
			If (String.Equals(Me._REF02, value) = false) Then
				Me.OnREF02Changing(value)
				Me.SendPropertyChanging
				Me._REF02 = value
				Me.SendPropertyChanged("REF02")
				Me.OnREF02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATEDATE", DbType:="DateTime")>  _
	Public Property CREATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATEDATE
		End Get
		Set
			If (Me._CREATEDATE.Equals(value) = false) Then
				Me.OnCREATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATEDATE = value
				Me.SendPropertyChanged("CREATEDATE")
				Me.OnCREATEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROW_ID", DbType:="Int")>  _
	Public Property ROW_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ROW_ID
		End Get
		Set
			If (Me._ROW_ID.Equals(value) = false) Then
				Me.OnROW_IDChanging(value)
				Me.SendPropertyChanging
				Me._ROW_ID = value
				Me.SendPropertyChanged("ROW_ID")
				Me.OnROW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_FDL_IDA", DbType:="Int")>  _
	Public Property FK_FDL_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_FDL_IDA
		End Get
		Set
			If (Me._FK_FDL_IDA.Equals(value) = false) Then
				Me.OnFK_FDL_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_FDL_IDA = value
				Me.SendPropertyChanged("FK_FDL_IDA")
				Me.OnFK_FDL_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_ID", DbType:="Int")>  _
	Public Property FK_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_ID
		End Get
		Set
			If (Me._FK_ID.Equals(value) = false) Then
				Me.OnFK_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_ID = value
				Me.SendPropertyChanged("FK_ID")
				Me.OnFK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DVCD", DbType:="Int")>  _
	Public Property DVCD() As System.Nullable(Of Integer)
		Get
			Return Me._DVCD
		End Get
		Set
			If (Me._DVCD.Equals(value) = false) Then
				Me.OnDVCDChanging(value)
				Me.SendPropertyChanging
				Me._DVCD = value
				Me.SendPropertyChanged("DVCD")
				Me.OnDVCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_REF_STATUS", DbType:="Int")>  _
	Public Property FK_REF_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._FK_REF_STATUS
		End Get
		Set
			If (Me._FK_REF_STATUS.Equals(value) = false) Then
				Me.OnFK_REF_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._FK_REF_STATUS = value
				Me.SendPropertyChanged("FK_REF_STATUS")
				Me.OnFK_REF_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_SEND", DbType:="NVarChar(50)")>  _
	Public Property STATUS_SEND() As String
		Get
			Return Me._STATUS_SEND
		End Get
		Set
			If (String.Equals(Me._STATUS_SEND, value) = false) Then
				Me.OnSTATUS_SENDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_SEND = value
				Me.SendPropertyChanged("STATUS_SEND")
				Me.OnSTATUS_SENDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
