'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="DTAM_USER")>  _
Partial Public Class LINQ_USERDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Inserttbl_USER_GROUP(instance As tbl_USER_GROUP)
    End Sub
  Partial Private Sub Updatetbl_USER_GROUP(instance As tbl_USER_GROUP)
    End Sub
  Partial Private Sub Deletetbl_USER_GROUP(instance As tbl_USER_GROUP)
    End Sub
  Partial Private Sub Inserttbl_USER_MANAGE(instance As tbl_USER_MANAGE)
    End Sub
  Partial Private Sub Updatetbl_USER_MANAGE(instance As tbl_USER_MANAGE)
    End Sub
  Partial Private Sub Deletetbl_USER_MANAGE(instance As tbl_USER_MANAGE)
    End Sub
  Partial Private Sub Inserttbl_USER_PERMISSION(instance As tbl_USER_PERMISSION)
    End Sub
  Partial Private Sub Updatetbl_USER_PERMISSION(instance As tbl_USER_PERMISSION)
    End Sub
  Partial Private Sub Deletetbl_USER_PERMISSION(instance As tbl_USER_PERMISSION)
    End Sub
  Partial Private Sub Inserttbl_USER(instance As tbl_USER)
    End Sub
  Partial Private Sub Updatetbl_USER(instance As tbl_USER)
    End Sub
  Partial Private Sub Deletetbl_USER(instance As tbl_USER)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("DTAM_USERConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tbl_USER_GROUPs() As System.Data.Linq.Table(Of tbl_USER_GROUP)
		Get
			Return Me.GetTable(Of tbl_USER_GROUP)
		End Get
	End Property
	
	Public ReadOnly Property tbl_USER_MANAGEs() As System.Data.Linq.Table(Of tbl_USER_MANAGE)
		Get
			Return Me.GetTable(Of tbl_USER_MANAGE)
		End Get
	End Property
	
	Public ReadOnly Property tbl_USER_PERMISSIONs() As System.Data.Linq.Table(Of tbl_USER_PERMISSION)
		Get
			Return Me.GetTable(Of tbl_USER_PERMISSION)
		End Get
	End Property
	
	Public ReadOnly Property tbl_USERs() As System.Data.Linq.Table(Of tbl_USER)
		Get
			Return Me.GetTable(Of tbl_USER)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_USER_GROUP")>  _
Partial Public Class tbl_USER_GROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _GROUP_ID As Integer
	
	Private _GROUP_NAME As String
	
	Private _GROUP_POSITION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGROUP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnGROUP_IDChanged()
    End Sub
    Partial Private Sub OnGROUP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NAMEChanged()
    End Sub
    Partial Private Sub OnGROUP_POSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_POSITIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property GROUP_ID() As Integer
		Get
			Return Me._GROUP_ID
		End Get
		Set
			If ((Me._GROUP_ID = value)  _
						= false) Then
				Me.OnGROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_ID = value
				Me.SendPropertyChanged("GROUP_ID")
				Me.OnGROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NAME", DbType:="NVarChar(255)")>  _
	Public Property GROUP_NAME() As String
		Get
			Return Me._GROUP_NAME
		End Get
		Set
			If (String.Equals(Me._GROUP_NAME, value) = false) Then
				Me.OnGROUP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NAME = value
				Me.SendPropertyChanged("GROUP_NAME")
				Me.OnGROUP_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_POSITION", DbType:="NVarChar(255)")>  _
	Public Property GROUP_POSITION() As String
		Get
			Return Me._GROUP_POSITION
		End Get
		Set
			If (String.Equals(Me._GROUP_POSITION, value) = false) Then
				Me.OnGROUP_POSITIONChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_POSITION = value
				Me.SendPropertyChanged("GROUP_POSITION")
				Me.OnGROUP_POSITIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_USER_MANAGE")>  _
Partial Public Class tbl_USER_MANAGE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _USER_MANAGE_ID As Integer
	
	Private _USER_ID As System.Nullable(Of Integer)
	
	Private _GROUP_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUSER_MANAGE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUSER_MANAGE_IDChanged()
    End Sub
    Partial Private Sub OnUSER_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUSER_IDChanged()
    End Sub
    Partial Private Sub OnGROUP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USER_MANAGE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property USER_MANAGE_ID() As Integer
		Get
			Return Me._USER_MANAGE_ID
		End Get
		Set
			If ((Me._USER_MANAGE_ID = value)  _
						= false) Then
				Me.OnUSER_MANAGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._USER_MANAGE_ID = value
				Me.SendPropertyChanged("USER_MANAGE_ID")
				Me.OnUSER_MANAGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USER_ID", DbType:="Int")>  _
	Public Property USER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._USER_ID
		End Get
		Set
			If (Me._USER_ID.Equals(value) = false) Then
				Me.OnUSER_IDChanging(value)
				Me.SendPropertyChanging
				Me._USER_ID = value
				Me.SendPropertyChanged("USER_ID")
				Me.OnUSER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_ID", DbType:="Int")>  _
	Public Property GROUP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_ID
		End Get
		Set
			If (Me._GROUP_ID.Equals(value) = false) Then
				Me.OnGROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_ID = value
				Me.SendPropertyChanged("GROUP_ID")
				Me.OnGROUP_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_USER_PERMISSION")>  _
Partial Public Class tbl_USER_PERMISSION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PERMISSION_ID As Integer
	
	Private _PERMISSION_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPERMISSION_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPERMISSION_IDChanged()
    End Sub
    Partial Private Sub OnPERMISSION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPERMISSION_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERMISSION_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PERMISSION_ID() As Integer
		Get
			Return Me._PERMISSION_ID
		End Get
		Set
			If ((Me._PERMISSION_ID = value)  _
						= false) Then
				Me.OnPERMISSION_IDChanging(value)
				Me.SendPropertyChanging
				Me._PERMISSION_ID = value
				Me.SendPropertyChanged("PERMISSION_ID")
				Me.OnPERMISSION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERMISSION_NAME", DbType:="NVarChar(255)")>  _
	Public Property PERMISSION_NAME() As String
		Get
			Return Me._PERMISSION_NAME
		End Get
		Set
			If (String.Equals(Me._PERMISSION_NAME, value) = false) Then
				Me.OnPERMISSION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PERMISSION_NAME = value
				Me.SendPropertyChanged("PERMISSION_NAME")
				Me.OnPERMISSION_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_USER")>  _
Partial Public Class tbl_USER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _PREFIX As String
	
	Private _NAME As String
	
	Private _SURNAME As String
	
	Private _GENDER As System.Nullable(Of Integer)
	
	Private _IDENTITY_NUMBER As String
	
	Private _BIRTHDATE As System.Nullable(Of Date)
	
	Private _PERSONAL_TYPE As String
	
	Private _DEPARTMENT As String
	
	Private _POSITION As String
	
	Private _TELEPHONE As String
	
	Private _TELEPHONE_TABLE As String
	
	Private _ADDRESS As String
	
	Private _AD_NAME As String
	
	Private _USERNAME As String
	
	Private _PASSWORD As String
	
	Private _DEPARTMENT_ID As System.Nullable(Of Integer)
	
	Private _PERMISSION_ID As System.Nullable(Of Integer)
	
	Private _GROUP_ID As System.Nullable(Of Integer)
	
	Private _PERMISSION_P As System.Nullable(Of Integer)
	
	Private _PERMISSION_A As System.Nullable(Of Integer)
	
	Private _SELECT_DEPT As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnPREFIXChanging(value As String)
    End Sub
    Partial Private Sub OnPREFIXChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnSURNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSURNAMEChanged()
    End Sub
    Partial Private Sub OnGENDERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENDERChanged()
    End Sub
    Partial Private Sub OnIDENTITY_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTITY_NUMBERChanged()
    End Sub
    Partial Private Sub OnBIRTHDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBIRTHDATEChanged()
    End Sub
    Partial Private Sub OnPERSONAL_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPERSONAL_TYPEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnPOSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITIONChanged()
    End Sub
    Partial Private Sub OnTELEPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnTELEPHONEChanged()
    End Sub
    Partial Private Sub OnTELEPHONE_TABLEChanging(value As String)
    End Sub
    Partial Private Sub OnTELEPHONE_TABLEChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnAD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnAD_NAMEChanged()
    End Sub
    Partial Private Sub OnUSERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUSERNAMEChanged()
    End Sub
    Partial Private Sub OnPASSWORDChanging(value As String)
    End Sub
    Partial Private Sub OnPASSWORDChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnPERMISSION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERMISSION_IDChanged()
    End Sub
    Partial Private Sub OnGROUP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_IDChanged()
    End Sub
    Partial Private Sub OnPERMISSION_PChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERMISSION_PChanged()
    End Sub
    Partial Private Sub OnPERMISSION_AChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERMISSION_AChanged()
    End Sub
    Partial Private Sub OnSELECT_DEPTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSELECT_DEPTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX", DbType:="NVarChar(255)")>  _
	Public Property PREFIX() As String
		Get
			Return Me._PREFIX
		End Get
		Set
			If (String.Equals(Me._PREFIX, value) = false) Then
				Me.OnPREFIXChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX = value
				Me.SendPropertyChanged("PREFIX")
				Me.OnPREFIXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(255)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURNAME", DbType:="NVarChar(255)")>  _
	Public Property SURNAME() As String
		Get
			Return Me._SURNAME
		End Get
		Set
			If (String.Equals(Me._SURNAME, value) = false) Then
				Me.OnSURNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SURNAME = value
				Me.SendPropertyChanged("SURNAME")
				Me.OnSURNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENDER", DbType:="Int")>  _
	Public Property GENDER() As System.Nullable(Of Integer)
		Get
			Return Me._GENDER
		End Get
		Set
			If (Me._GENDER.Equals(value) = false) Then
				Me.OnGENDERChanging(value)
				Me.SendPropertyChanging
				Me._GENDER = value
				Me.SendPropertyChanged("GENDER")
				Me.OnGENDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTITY_NUMBER", DbType:="NVarChar(50)")>  _
	Public Property IDENTITY_NUMBER() As String
		Get
			Return Me._IDENTITY_NUMBER
		End Get
		Set
			If (String.Equals(Me._IDENTITY_NUMBER, value) = false) Then
				Me.OnIDENTITY_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._IDENTITY_NUMBER = value
				Me.SendPropertyChanged("IDENTITY_NUMBER")
				Me.OnIDENTITY_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIRTHDATE", DbType:="Date")>  _
	Public Property BIRTHDATE() As System.Nullable(Of Date)
		Get
			Return Me._BIRTHDATE
		End Get
		Set
			If (Me._BIRTHDATE.Equals(value) = false) Then
				Me.OnBIRTHDATEChanging(value)
				Me.SendPropertyChanging
				Me._BIRTHDATE = value
				Me.SendPropertyChanged("BIRTHDATE")
				Me.OnBIRTHDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSONAL_TYPE", DbType:="NVarChar(255)")>  _
	Public Property PERSONAL_TYPE() As String
		Get
			Return Me._PERSONAL_TYPE
		End Get
		Set
			If (String.Equals(Me._PERSONAL_TYPE, value) = false) Then
				Me.OnPERSONAL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PERSONAL_TYPE = value
				Me.SendPropertyChanged("PERSONAL_TYPE")
				Me.OnPERSONAL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="NVarChar(255)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION", DbType:="NVarChar(255)")>  _
	Public Property POSITION() As String
		Get
			Return Me._POSITION
		End Get
		Set
			If (String.Equals(Me._POSITION, value) = false) Then
				Me.OnPOSITIONChanging(value)
				Me.SendPropertyChanging
				Me._POSITION = value
				Me.SendPropertyChanged("POSITION")
				Me.OnPOSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TELEPHONE", DbType:="NVarChar(50)")>  _
	Public Property TELEPHONE() As String
		Get
			Return Me._TELEPHONE
		End Get
		Set
			If (String.Equals(Me._TELEPHONE, value) = false) Then
				Me.OnTELEPHONEChanging(value)
				Me.SendPropertyChanging
				Me._TELEPHONE = value
				Me.SendPropertyChanged("TELEPHONE")
				Me.OnTELEPHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TELEPHONE_TABLE", DbType:="NVarChar(50)")>  _
	Public Property TELEPHONE_TABLE() As String
		Get
			Return Me._TELEPHONE_TABLE
		End Get
		Set
			If (String.Equals(Me._TELEPHONE_TABLE, value) = false) Then
				Me.OnTELEPHONE_TABLEChanging(value)
				Me.SendPropertyChanging
				Me._TELEPHONE_TABLE = value
				Me.SendPropertyChanged("TELEPHONE_TABLE")
				Me.OnTELEPHONE_TABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="NVarChar(255)")>  _
	Public Property ADDRESS() As String
		Get
			Return Me._ADDRESS
		End Get
		Set
			If (String.Equals(Me._ADDRESS, value) = false) Then
				Me.OnADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS = value
				Me.SendPropertyChanged("ADDRESS")
				Me.OnADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AD_NAME", DbType:="NVarChar(50)")>  _
	Public Property AD_NAME() As String
		Get
			Return Me._AD_NAME
		End Get
		Set
			If (String.Equals(Me._AD_NAME, value) = false) Then
				Me.OnAD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._AD_NAME = value
				Me.SendPropertyChanged("AD_NAME")
				Me.OnAD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USERNAME", DbType:="NVarChar(50)")>  _
	Public Property USERNAME() As String
		Get
			Return Me._USERNAME
		End Get
		Set
			If (String.Equals(Me._USERNAME, value) = false) Then
				Me.OnUSERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._USERNAME = value
				Me.SendPropertyChanged("USERNAME")
				Me.OnUSERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PASSWORD", DbType:="NVarChar(50)")>  _
	Public Property PASSWORD() As String
		Get
			Return Me._PASSWORD
		End Get
		Set
			If (String.Equals(Me._PASSWORD, value) = false) Then
				Me.OnPASSWORDChanging(value)
				Me.SendPropertyChanging
				Me._PASSWORD = value
				Me.SendPropertyChanged("PASSWORD")
				Me.OnPASSWORDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ID", DbType:="Int")>  _
	Public Property DEPARTMENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_ID
		End Get
		Set
			If (Me._DEPARTMENT_ID.Equals(value) = false) Then
				Me.OnDEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ID = value
				Me.SendPropertyChanged("DEPARTMENT_ID")
				Me.OnDEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERMISSION_ID", DbType:="Int")>  _
	Public Property PERMISSION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PERMISSION_ID
		End Get
		Set
			If (Me._PERMISSION_ID.Equals(value) = false) Then
				Me.OnPERMISSION_IDChanging(value)
				Me.SendPropertyChanging
				Me._PERMISSION_ID = value
				Me.SendPropertyChanged("PERMISSION_ID")
				Me.OnPERMISSION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_ID", DbType:="Int")>  _
	Public Property GROUP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_ID
		End Get
		Set
			If (Me._GROUP_ID.Equals(value) = false) Then
				Me.OnGROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_ID = value
				Me.SendPropertyChanged("GROUP_ID")
				Me.OnGROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERMISSION_P", DbType:="Int")>  _
	Public Property PERMISSION_P() As System.Nullable(Of Integer)
		Get
			Return Me._PERMISSION_P
		End Get
		Set
			If (Me._PERMISSION_P.Equals(value) = false) Then
				Me.OnPERMISSION_PChanging(value)
				Me.SendPropertyChanging
				Me._PERMISSION_P = value
				Me.SendPropertyChanged("PERMISSION_P")
				Me.OnPERMISSION_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERMISSION_A", DbType:="Int")>  _
	Public Property PERMISSION_A() As System.Nullable(Of Integer)
		Get
			Return Me._PERMISSION_A
		End Get
		Set
			If (Me._PERMISSION_A.Equals(value) = false) Then
				Me.OnPERMISSION_AChanging(value)
				Me.SendPropertyChanging
				Me._PERMISSION_A = value
				Me.SendPropertyChanged("PERMISSION_A")
				Me.OnPERMISSION_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SELECT_DEPT", DbType:="Bit")>  _
	Public Property SELECT_DEPT() As System.Nullable(Of Boolean)
		Get
			Return Me._SELECT_DEPT
		End Get
		Set
			If (Me._SELECT_DEPT.Equals(value) = false) Then
				Me.OnSELECT_DEPTChanging(value)
				Me.SendPropertyChanging
				Me._SELECT_DEPT = value
				Me.SendPropertyChanged("SELECT_DEPT")
				Me.OnSELECT_DEPTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
