'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FDA_BG")>  _
Partial Public Class LINQ_BUDGETDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertBUDGET_ADJUST(instance As BUDGET_ADJUST)
    End Sub
  Partial Private Sub UpdateBUDGET_ADJUST(instance As BUDGET_ADJUST)
    End Sub
  Partial Private Sub DeleteBUDGET_ADJUST(instance As BUDGET_ADJUST)
    End Sub
  Partial Private Sub InsertMAS_BUDGET_TYPE(instance As MAS_BUDGET_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_BUDGET_TYPE(instance As MAS_BUDGET_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_BUDGET_TYPE(instance As MAS_BUDGET_TYPE)
    End Sub
  Partial Private Sub InsertBUDGET_ADJUST_DETAIL(instance As BUDGET_ADJUST_DETAIL)
    End Sub
  Partial Private Sub UpdateBUDGET_ADJUST_DETAIL(instance As BUDGET_ADJUST_DETAIL)
    End Sub
  Partial Private Sub DeleteBUDGET_ADJUST_DETAIL(instance As BUDGET_ADJUST_DETAIL)
    End Sub
  Partial Private Sub InsertBUDGET_TRANSFER_DETAIL(instance As BUDGET_TRANSFER_DETAIL)
    End Sub
  Partial Private Sub UpdateBUDGET_TRANSFER_DETAIL(instance As BUDGET_TRANSFER_DETAIL)
    End Sub
  Partial Private Sub DeleteBUDGET_TRANSFER_DETAIL(instance As BUDGET_TRANSFER_DETAIL)
    End Sub
  Partial Private Sub InsertBUDGET_PO_OVERLAP(instance As BUDGET_PO_OVERLAP)
    End Sub
  Partial Private Sub UpdateBUDGET_PO_OVERLAP(instance As BUDGET_PO_OVERLAP)
    End Sub
  Partial Private Sub DeleteBUDGET_PO_OVERLAP(instance As BUDGET_PO_OVERLAP)
    End Sub
  Partial Private Sub InsertBUDGET_TRANSFER(instance As BUDGET_TRANSFER)
    End Sub
  Partial Private Sub UpdateBUDGET_TRANSFER(instance As BUDGET_TRANSFER)
    End Sub
  Partial Private Sub DeleteBUDGET_TRANSFER(instance As BUDGET_TRANSFER)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("DTAMConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property BUDGET_ADJUSTs() As System.Data.Linq.Table(Of BUDGET_ADJUST)
		Get
			Return Me.GetTable(Of BUDGET_ADJUST)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BUDGET_TYPEs() As System.Data.Linq.Table(Of MAS_BUDGET_TYPE)
		Get
			Return Me.GetTable(Of MAS_BUDGET_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property BUDGET_ADJUST_DETAILs() As System.Data.Linq.Table(Of BUDGET_ADJUST_DETAIL)
		Get
			Return Me.GetTable(Of BUDGET_ADJUST_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property BUDGET_TRANSFER_DETAILs() As System.Data.Linq.Table(Of BUDGET_TRANSFER_DETAIL)
		Get
			Return Me.GetTable(Of BUDGET_TRANSFER_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property BUDGET_PO_OVERLAPs() As System.Data.Linq.Table(Of BUDGET_PO_OVERLAP)
		Get
			Return Me.GetTable(Of BUDGET_PO_OVERLAP)
		End Get
	End Property
	
	Public ReadOnly Property BUDGET_TRANSFERs() As System.Data.Linq.Table(Of BUDGET_TRANSFER)
		Get
			Return Me.GetTable(Of BUDGET_TRANSFER)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="BUDGETS.BUDGET_ADJUST")>  _
Partial Public Class BUDGET_ADJUST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BUDGET_ADJUST_ID As Integer
	
	Private _BUDGET_PLAN_ID As System.Nullable(Of Integer)
	
	Private _BUDGET_DEPARTMENT_MONEY As System.Nullable(Of Decimal)
	
	Private _DEPARTMENT_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBUDGET_ADJUST_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBUDGET_ADJUST_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_PLAN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_PLAN_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_DEPARTMENT_MONEYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBUDGET_DEPARTMENT_MONEYChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_ADJUST_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BUDGET_ADJUST_ID() As Integer
		Get
			Return Me._BUDGET_ADJUST_ID
		End Get
		Set
			If ((Me._BUDGET_ADJUST_ID = value)  _
						= false) Then
				Me.OnBUDGET_ADJUST_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_ADJUST_ID = value
				Me.SendPropertyChanged("BUDGET_ADJUST_ID")
				Me.OnBUDGET_ADJUST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_PLAN_ID", DbType:="Int")>  _
	Public Property BUDGET_PLAN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_PLAN_ID
		End Get
		Set
			If (Me._BUDGET_PLAN_ID.Equals(value) = false) Then
				Me.OnBUDGET_PLAN_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_PLAN_ID = value
				Me.SendPropertyChanged("BUDGET_PLAN_ID")
				Me.OnBUDGET_PLAN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_DEPARTMENT_MONEY", DbType:="Money")>  _
	Public Property BUDGET_DEPARTMENT_MONEY() As System.Nullable(Of Decimal)
		Get
			Return Me._BUDGET_DEPARTMENT_MONEY
		End Get
		Set
			If (Me._BUDGET_DEPARTMENT_MONEY.Equals(value) = false) Then
				Me.OnBUDGET_DEPARTMENT_MONEYChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_DEPARTMENT_MONEY = value
				Me.SendPropertyChanged("BUDGET_DEPARTMENT_MONEY")
				Me.OnBUDGET_DEPARTMENT_MONEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_ID", DbType:="Int")>  _
	Public Property DEPARTMENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_ID
		End Get
		Set
			If (Me._DEPARTMENT_ID.Equals(value) = false) Then
				Me.OnDEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_ID = value
				Me.SendPropertyChanged("DEPARTMENT_ID")
				Me.OnDEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="BUDGETS.MAS_BUDGET_TYPE")>  _
Partial Public Class MAS_BUDGET_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BUDGET_TYPE_ID As Integer
	
	Private _BUDGET_TYPE_NAME As String
	
	Private _BUDGET_YEAR As System.Nullable(Of Integer)
	
	Private _BUDGET_TYPE_AMOUNT As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBUDGET_TYPE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBUDGET_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_TYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_TYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnBUDGET_YEARChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_YEARChanged()
    End Sub
    Partial Private Sub OnBUDGET_TYPE_AMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBUDGET_TYPE_AMOUNTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TYPE_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BUDGET_TYPE_ID() As Integer
		Get
			Return Me._BUDGET_TYPE_ID
		End Get
		Set
			If ((Me._BUDGET_TYPE_ID = value)  _
						= false) Then
				Me.OnBUDGET_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TYPE_ID = value
				Me.SendPropertyChanged("BUDGET_TYPE_ID")
				Me.OnBUDGET_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BUDGET_TYPE_NAME() As String
		Get
			Return Me._BUDGET_TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._BUDGET_TYPE_NAME, value) = false) Then
				Me.OnBUDGET_TYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TYPE_NAME = value
				Me.SendPropertyChanged("BUDGET_TYPE_NAME")
				Me.OnBUDGET_TYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_YEAR", DbType:="Int")>  _
	Public Property BUDGET_YEAR() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_YEAR
		End Get
		Set
			If (Me._BUDGET_YEAR.Equals(value) = false) Then
				Me.OnBUDGET_YEARChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_YEAR = value
				Me.SendPropertyChanged("BUDGET_YEAR")
				Me.OnBUDGET_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TYPE_AMOUNT", DbType:="Money")>  _
	Public Property BUDGET_TYPE_AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._BUDGET_TYPE_AMOUNT
		End Get
		Set
			If (Me._BUDGET_TYPE_AMOUNT.Equals(value) = false) Then
				Me.OnBUDGET_TYPE_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TYPE_AMOUNT = value
				Me.SendPropertyChanged("BUDGET_TYPE_AMOUNT")
				Me.OnBUDGET_TYPE_AMOUNTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="BUDGETS.BUDGET_ADJUST_DETAIL")>  _
Partial Public Class BUDGET_ADJUST_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ADJUST_DETAIL_ID As Integer
	
	Private _BUDGET_ADJUST_ID As System.Nullable(Of Integer)
	
	Private _DOC_NUMBER As String
	
	Private _DOC_DATE As System.Nullable(Of Date)
	
	Private _SUB_DEPARTMENT_NAME As String
	
	Private _EXPORT_DATE As System.Nullable(Of Date)
	
	Private _PERIOD_COUNT As System.Nullable(Of Integer)
	
	Private _COUNT As System.Nullable(Of Integer)
	
	Private _DESCRIPTION As String
	
	Private _APPROVE_AMOUNT As System.Nullable(Of Decimal)
	
	Private _ACTIVE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnADJUST_DETAIL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnADJUST_DETAIL_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_ADJUST_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_ADJUST_IDChanged()
    End Sub
    Partial Private Sub OnDOC_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnDOC_NUMBERChanged()
    End Sub
    Partial Private Sub OnDOC_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOC_DATEChanged()
    End Sub
    Partial Private Sub OnSUB_DEPARTMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSUB_DEPARTMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnEXPORT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXPORT_DATEChanged()
    End Sub
    Partial Private Sub OnPERIOD_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERIOD_COUNTChanged()
    End Sub
    Partial Private Sub OnCOUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnAPPROVE_AMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAPPROVE_AMOUNTChanged()
    End Sub
    Partial Private Sub OnACTIVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnACTIVE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADJUST_DETAIL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ADJUST_DETAIL_ID() As Integer
		Get
			Return Me._ADJUST_DETAIL_ID
		End Get
		Set
			If ((Me._ADJUST_DETAIL_ID = value)  _
						= false) Then
				Me.OnADJUST_DETAIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._ADJUST_DETAIL_ID = value
				Me.SendPropertyChanged("ADJUST_DETAIL_ID")
				Me.OnADJUST_DETAIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_ADJUST_ID", DbType:="Int")>  _
	Public Property BUDGET_ADJUST_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_ADJUST_ID
		End Get
		Set
			If (Me._BUDGET_ADJUST_ID.Equals(value) = false) Then
				Me.OnBUDGET_ADJUST_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_ADJUST_ID = value
				Me.SendPropertyChanged("BUDGET_ADJUST_ID")
				Me.OnBUDGET_ADJUST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_NUMBER", DbType:="NVarChar(255)")>  _
	Public Property DOC_NUMBER() As String
		Get
			Return Me._DOC_NUMBER
		End Get
		Set
			If (String.Equals(Me._DOC_NUMBER, value) = false) Then
				Me.OnDOC_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._DOC_NUMBER = value
				Me.SendPropertyChanged("DOC_NUMBER")
				Me.OnDOC_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOC_DATE", DbType:="DateTime")>  _
	Public Property DOC_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOC_DATE
		End Get
		Set
			If (Me._DOC_DATE.Equals(value) = false) Then
				Me.OnDOC_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOC_DATE = value
				Me.SendPropertyChanged("DOC_DATE")
				Me.OnDOC_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_DEPARTMENT_NAME", DbType:="NVarChar(255)")>  _
	Public Property SUB_DEPARTMENT_NAME() As String
		Get
			Return Me._SUB_DEPARTMENT_NAME
		End Get
		Set
			If (String.Equals(Me._SUB_DEPARTMENT_NAME, value) = false) Then
				Me.OnSUB_DEPARTMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_DEPARTMENT_NAME = value
				Me.SendPropertyChanged("SUB_DEPARTMENT_NAME")
				Me.OnSUB_DEPARTMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPORT_DATE", DbType:="DateTime")>  _
	Public Property EXPORT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._EXPORT_DATE
		End Get
		Set
			If (Me._EXPORT_DATE.Equals(value) = false) Then
				Me.OnEXPORT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._EXPORT_DATE = value
				Me.SendPropertyChanged("EXPORT_DATE")
				Me.OnEXPORT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERIOD_COUNT", DbType:="Int")>  _
	Public Property PERIOD_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._PERIOD_COUNT
		End Get
		Set
			If (Me._PERIOD_COUNT.Equals(value) = false) Then
				Me.OnPERIOD_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._PERIOD_COUNT = value
				Me.SendPropertyChanged("PERIOD_COUNT")
				Me.OnPERIOD_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNT", DbType:="Int")>  _
	Public Property COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._COUNT
		End Get
		Set
			If (Me._COUNT.Equals(value) = false) Then
				Me.OnCOUNTChanging(value)
				Me.SendPropertyChanging
				Me._COUNT = value
				Me.SendPropertyChanged("COUNT")
				Me.OnCOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(255)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_AMOUNT", DbType:="Money")>  _
	Public Property APPROVE_AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._APPROVE_AMOUNT
		End Get
		Set
			If (Me._APPROVE_AMOUNT.Equals(value) = false) Then
				Me.OnAPPROVE_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_AMOUNT = value
				Me.SendPropertyChanged("APPROVE_AMOUNT")
				Me.OnAPPROVE_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE_DATE", DbType:="DateTime")>  _
	Public Property ACTIVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._ACTIVE_DATE
		End Get
		Set
			If (Me._ACTIVE_DATE.Equals(value) = false) Then
				Me.OnACTIVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE_DATE = value
				Me.SendPropertyChanged("ACTIVE_DATE")
				Me.OnACTIVE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="BUDGETS.BUDGET_TRANSFER_DETAIL")>  _
Partial Public Class BUDGET_TRANSFER_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TRANSFER_OUT_DETAIL_ID As Integer
	
	Private _BUDGET_TRANSFER_ID As System.Nullable(Of Integer)
	
	Private _AMOUNT As System.Nullable(Of Decimal)
	
	Private _TYPE_TRANSFER As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTRANSFER_OUT_DETAIL_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRANSFER_OUT_DETAIL_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_IDChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnTYPE_TRANSFERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_TRANSFERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSFER_OUT_DETAIL_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TRANSFER_OUT_DETAIL_ID() As Integer
		Get
			Return Me._TRANSFER_OUT_DETAIL_ID
		End Get
		Set
			If ((Me._TRANSFER_OUT_DETAIL_ID = value)  _
						= false) Then
				Me.OnTRANSFER_OUT_DETAIL_IDChanging(value)
				Me.SendPropertyChanging
				Me._TRANSFER_OUT_DETAIL_ID = value
				Me.SendPropertyChanged("TRANSFER_OUT_DETAIL_ID")
				Me.OnTRANSFER_OUT_DETAIL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TRANSFER_ID", DbType:="Int")>  _
	Public Property BUDGET_TRANSFER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_TRANSFER_ID
		End Get
		Set
			If (Me._BUDGET_TRANSFER_ID.Equals(value) = false) Then
				Me.OnBUDGET_TRANSFER_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TRANSFER_ID = value
				Me.SendPropertyChanged("BUDGET_TRANSFER_ID")
				Me.OnBUDGET_TRANSFER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="Money")>  _
	Public Property AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (Me._AMOUNT.Equals(value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_TRANSFER", DbType:="Int")>  _
	Public Property TYPE_TRANSFER() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_TRANSFER
		End Get
		Set
			If (Me._TYPE_TRANSFER.Equals(value) = false) Then
				Me.OnTYPE_TRANSFERChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_TRANSFER = value
				Me.SendPropertyChanged("TYPE_TRANSFER")
				Me.OnTYPE_TRANSFERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="BUDGETS.BUDGET_PO_OVERLAP")>  _
Partial Public Class BUDGET_PO_OVERLAP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OVERLAP_ID As Integer
	
	Private _BUDGET_DISBURSE_BILL_ID As System.Nullable(Of Integer)
	
	Private _IS_USE As System.Nullable(Of Boolean)
	
	Private _OVERLAP_DATE As System.Nullable(Of Date)
	
	Private _IS_OVERLAP_ADD As System.Nullable(Of Boolean)
	
	Private _OVERLAP_ADD_DATE As System.Nullable(Of Date)
	
	Private _IS_USE_OVERLAP_ADD As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOVERLAP_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOVERLAP_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_DISBURSE_BILL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_DISBURSE_BILL_IDChanged()
    End Sub
    Partial Private Sub OnIS_USEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USEChanged()
    End Sub
    Partial Private Sub OnOVERLAP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnOVERLAP_DATEChanged()
    End Sub
    Partial Private Sub OnIS_OVERLAP_ADDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_OVERLAP_ADDChanged()
    End Sub
    Partial Private Sub OnOVERLAP_ADD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnOVERLAP_ADD_DATEChanged()
    End Sub
    Partial Private Sub OnIS_USE_OVERLAP_ADDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USE_OVERLAP_ADDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OVERLAP_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property OVERLAP_ID() As Integer
		Get
			Return Me._OVERLAP_ID
		End Get
		Set
			If ((Me._OVERLAP_ID = value)  _
						= false) Then
				Me.OnOVERLAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._OVERLAP_ID = value
				Me.SendPropertyChanged("OVERLAP_ID")
				Me.OnOVERLAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_DISBURSE_BILL_ID", DbType:="Int")>  _
	Public Property BUDGET_DISBURSE_BILL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_DISBURSE_BILL_ID
		End Get
		Set
			If (Me._BUDGET_DISBURSE_BILL_ID.Equals(value) = false) Then
				Me.OnBUDGET_DISBURSE_BILL_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_DISBURSE_BILL_ID = value
				Me.SendPropertyChanged("BUDGET_DISBURSE_BILL_ID")
				Me.OnBUDGET_DISBURSE_BILL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE", DbType:="Bit")>  _
	Public Property IS_USE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USE
		End Get
		Set
			If (Me._IS_USE.Equals(value) = false) Then
				Me.OnIS_USEChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE = value
				Me.SendPropertyChanged("IS_USE")
				Me.OnIS_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OVERLAP_DATE", DbType:="DateTime")>  _
	Public Property OVERLAP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._OVERLAP_DATE
		End Get
		Set
			If (Me._OVERLAP_DATE.Equals(value) = false) Then
				Me.OnOVERLAP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._OVERLAP_DATE = value
				Me.SendPropertyChanged("OVERLAP_DATE")
				Me.OnOVERLAP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_OVERLAP_ADD", DbType:="Bit")>  _
	Public Property IS_OVERLAP_ADD() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_OVERLAP_ADD
		End Get
		Set
			If (Me._IS_OVERLAP_ADD.Equals(value) = false) Then
				Me.OnIS_OVERLAP_ADDChanging(value)
				Me.SendPropertyChanging
				Me._IS_OVERLAP_ADD = value
				Me.SendPropertyChanged("IS_OVERLAP_ADD")
				Me.OnIS_OVERLAP_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OVERLAP_ADD_DATE", DbType:="DateTime")>  _
	Public Property OVERLAP_ADD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._OVERLAP_ADD_DATE
		End Get
		Set
			If (Me._OVERLAP_ADD_DATE.Equals(value) = false) Then
				Me.OnOVERLAP_ADD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._OVERLAP_ADD_DATE = value
				Me.SendPropertyChanged("OVERLAP_ADD_DATE")
				Me.OnOVERLAP_ADD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE_OVERLAP_ADD", DbType:="Bit")>  _
	Public Property IS_USE_OVERLAP_ADD() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USE_OVERLAP_ADD
		End Get
		Set
			If (Me._IS_USE_OVERLAP_ADD.Equals(value) = false) Then
				Me.OnIS_USE_OVERLAP_ADDChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE_OVERLAP_ADD = value
				Me.SendPropertyChanged("IS_USE_OVERLAP_ADD")
				Me.OnIS_USE_OVERLAP_ADDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="BUDGETS.BUDGET_TRANSFER")>  _
Partial Public Class BUDGET_TRANSFER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BUDGET_TRANSFER_ID As Integer
	
	Private _BUDGET_TRANSFER_BUDGET_YEAR As System.Nullable(Of Integer)
	
	Private _BUDGET_TRANSFER_DATE As System.Nullable(Of Date)
	
	Private _BUDGET_TRANSFER_DOC_NUMBER As String
	
	Private _BUDGET_TRANSFER_DOC_DATE As System.Nullable(Of Date)
	
	Private _BUDGET_TRANSFER_COUNT As System.Nullable(Of Integer)
	
	Private _FROM_BUDGET_PLAN_ID As System.Nullable(Of Integer)
	
	Private _TO_BUDGET_PLAN_ID As System.Nullable(Of Integer)
	
	Private _FROM_DEPARTMENT_ID As System.Nullable(Of Integer)
	
	Private _BUDGET_FROM_TRANSFER_DESCRIPTION As String
	
	Private _TO_DEPARTMENT_ID As System.Nullable(Of Integer)
	
	Private _BUDGET_TO_TRANSFER_DESCRIPTION As String
	
	Private _BUDGET_TRANSFER_AMOUNT As System.Nullable(Of Decimal)
	
	Private _TRANSFER_TYPE_ID As System.Nullable(Of Integer)
	
	Private _BUDGET_TRANSFER_IS_ENABLE As System.Nullable(Of Boolean)
	
	Private _IS_APPROVE As System.Nullable(Of Boolean)
	
	Private _APPROVE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_BUDGET_YEARChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_BUDGET_YEARChanged()
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_DATEChanged()
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_DOC_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_DOC_NUMBERChanged()
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_DOC_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_DOC_DATEChanged()
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_COUNTChanged()
    End Sub
    Partial Private Sub OnFROM_BUDGET_PLAN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFROM_BUDGET_PLAN_IDChanged()
    End Sub
    Partial Private Sub OnTO_BUDGET_PLAN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTO_BUDGET_PLAN_IDChanged()
    End Sub
    Partial Private Sub OnFROM_DEPARTMENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFROM_DEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_FROM_TRANSFER_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_FROM_TRANSFER_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnTO_DEPARTMENT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTO_DEPARTMENT_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_TO_TRANSFER_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnBUDGET_TO_TRANSFER_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_AMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_AMOUNTChanged()
    End Sub
    Partial Private Sub OnTRANSFER_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRANSFER_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_IS_ENABLEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBUDGET_TRANSFER_IS_ENABLEChanged()
    End Sub
    Partial Private Sub OnIS_APPROVEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_APPROVEChanged()
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPROVE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TRANSFER_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BUDGET_TRANSFER_ID() As Integer
		Get
			Return Me._BUDGET_TRANSFER_ID
		End Get
		Set
			If ((Me._BUDGET_TRANSFER_ID = value)  _
						= false) Then
				Me.OnBUDGET_TRANSFER_IDChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TRANSFER_ID = value
				Me.SendPropertyChanged("BUDGET_TRANSFER_ID")
				Me.OnBUDGET_TRANSFER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TRANSFER_BUDGET_YEAR", DbType:="Int")>  _
	Public Property BUDGET_TRANSFER_BUDGET_YEAR() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_TRANSFER_BUDGET_YEAR
		End Get
		Set
			If (Me._BUDGET_TRANSFER_BUDGET_YEAR.Equals(value) = false) Then
				Me.OnBUDGET_TRANSFER_BUDGET_YEARChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TRANSFER_BUDGET_YEAR = value
				Me.SendPropertyChanged("BUDGET_TRANSFER_BUDGET_YEAR")
				Me.OnBUDGET_TRANSFER_BUDGET_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TRANSFER_DATE", DbType:="DateTime")>  _
	Public Property BUDGET_TRANSFER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._BUDGET_TRANSFER_DATE
		End Get
		Set
			If (Me._BUDGET_TRANSFER_DATE.Equals(value) = false) Then
				Me.OnBUDGET_TRANSFER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TRANSFER_DATE = value
				Me.SendPropertyChanged("BUDGET_TRANSFER_DATE")
				Me.OnBUDGET_TRANSFER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TRANSFER_DOC_NUMBER", DbType:="NVarChar(255)")>  _
	Public Property BUDGET_TRANSFER_DOC_NUMBER() As String
		Get
			Return Me._BUDGET_TRANSFER_DOC_NUMBER
		End Get
		Set
			If (String.Equals(Me._BUDGET_TRANSFER_DOC_NUMBER, value) = false) Then
				Me.OnBUDGET_TRANSFER_DOC_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TRANSFER_DOC_NUMBER = value
				Me.SendPropertyChanged("BUDGET_TRANSFER_DOC_NUMBER")
				Me.OnBUDGET_TRANSFER_DOC_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TRANSFER_DOC_DATE", DbType:="DateTime")>  _
	Public Property BUDGET_TRANSFER_DOC_DATE() As System.Nullable(Of Date)
		Get
			Return Me._BUDGET_TRANSFER_DOC_DATE
		End Get
		Set
			If (Me._BUDGET_TRANSFER_DOC_DATE.Equals(value) = false) Then
				Me.OnBUDGET_TRANSFER_DOC_DATEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TRANSFER_DOC_DATE = value
				Me.SendPropertyChanged("BUDGET_TRANSFER_DOC_DATE")
				Me.OnBUDGET_TRANSFER_DOC_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TRANSFER_COUNT", DbType:="Int")>  _
	Public Property BUDGET_TRANSFER_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._BUDGET_TRANSFER_COUNT
		End Get
		Set
			If (Me._BUDGET_TRANSFER_COUNT.Equals(value) = false) Then
				Me.OnBUDGET_TRANSFER_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TRANSFER_COUNT = value
				Me.SendPropertyChanged("BUDGET_TRANSFER_COUNT")
				Me.OnBUDGET_TRANSFER_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FROM_BUDGET_PLAN_ID", DbType:="Int")>  _
	Public Property FROM_BUDGET_PLAN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FROM_BUDGET_PLAN_ID
		End Get
		Set
			If (Me._FROM_BUDGET_PLAN_ID.Equals(value) = false) Then
				Me.OnFROM_BUDGET_PLAN_IDChanging(value)
				Me.SendPropertyChanging
				Me._FROM_BUDGET_PLAN_ID = value
				Me.SendPropertyChanged("FROM_BUDGET_PLAN_ID")
				Me.OnFROM_BUDGET_PLAN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TO_BUDGET_PLAN_ID", DbType:="Int")>  _
	Public Property TO_BUDGET_PLAN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TO_BUDGET_PLAN_ID
		End Get
		Set
			If (Me._TO_BUDGET_PLAN_ID.Equals(value) = false) Then
				Me.OnTO_BUDGET_PLAN_IDChanging(value)
				Me.SendPropertyChanging
				Me._TO_BUDGET_PLAN_ID = value
				Me.SendPropertyChanged("TO_BUDGET_PLAN_ID")
				Me.OnTO_BUDGET_PLAN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FROM_DEPARTMENT_ID", DbType:="Int")>  _
	Public Property FROM_DEPARTMENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FROM_DEPARTMENT_ID
		End Get
		Set
			If (Me._FROM_DEPARTMENT_ID.Equals(value) = false) Then
				Me.OnFROM_DEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._FROM_DEPARTMENT_ID = value
				Me.SendPropertyChanged("FROM_DEPARTMENT_ID")
				Me.OnFROM_DEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_FROM_TRANSFER_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property BUDGET_FROM_TRANSFER_DESCRIPTION() As String
		Get
			Return Me._BUDGET_FROM_TRANSFER_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._BUDGET_FROM_TRANSFER_DESCRIPTION, value) = false) Then
				Me.OnBUDGET_FROM_TRANSFER_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_FROM_TRANSFER_DESCRIPTION = value
				Me.SendPropertyChanged("BUDGET_FROM_TRANSFER_DESCRIPTION")
				Me.OnBUDGET_FROM_TRANSFER_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TO_DEPARTMENT_ID", DbType:="Int")>  _
	Public Property TO_DEPARTMENT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TO_DEPARTMENT_ID
		End Get
		Set
			If (Me._TO_DEPARTMENT_ID.Equals(value) = false) Then
				Me.OnTO_DEPARTMENT_IDChanging(value)
				Me.SendPropertyChanging
				Me._TO_DEPARTMENT_ID = value
				Me.SendPropertyChanged("TO_DEPARTMENT_ID")
				Me.OnTO_DEPARTMENT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TO_TRANSFER_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property BUDGET_TO_TRANSFER_DESCRIPTION() As String
		Get
			Return Me._BUDGET_TO_TRANSFER_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._BUDGET_TO_TRANSFER_DESCRIPTION, value) = false) Then
				Me.OnBUDGET_TO_TRANSFER_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TO_TRANSFER_DESCRIPTION = value
				Me.SendPropertyChanged("BUDGET_TO_TRANSFER_DESCRIPTION")
				Me.OnBUDGET_TO_TRANSFER_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TRANSFER_AMOUNT", DbType:="Money")>  _
	Public Property BUDGET_TRANSFER_AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._BUDGET_TRANSFER_AMOUNT
		End Get
		Set
			If (Me._BUDGET_TRANSFER_AMOUNT.Equals(value) = false) Then
				Me.OnBUDGET_TRANSFER_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TRANSFER_AMOUNT = value
				Me.SendPropertyChanged("BUDGET_TRANSFER_AMOUNT")
				Me.OnBUDGET_TRANSFER_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSFER_TYPE_ID", DbType:="Int")>  _
	Public Property TRANSFER_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TRANSFER_TYPE_ID
		End Get
		Set
			If (Me._TRANSFER_TYPE_ID.Equals(value) = false) Then
				Me.OnTRANSFER_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TRANSFER_TYPE_ID = value
				Me.SendPropertyChanged("TRANSFER_TYPE_ID")
				Me.OnTRANSFER_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUDGET_TRANSFER_IS_ENABLE", DbType:="Bit")>  _
	Public Property BUDGET_TRANSFER_IS_ENABLE() As System.Nullable(Of Boolean)
		Get
			Return Me._BUDGET_TRANSFER_IS_ENABLE
		End Get
		Set
			If (Me._BUDGET_TRANSFER_IS_ENABLE.Equals(value) = false) Then
				Me.OnBUDGET_TRANSFER_IS_ENABLEChanging(value)
				Me.SendPropertyChanging
				Me._BUDGET_TRANSFER_IS_ENABLE = value
				Me.SendPropertyChanged("BUDGET_TRANSFER_IS_ENABLE")
				Me.OnBUDGET_TRANSFER_IS_ENABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_APPROVE", DbType:="Bit")>  _
	Public Property IS_APPROVE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_APPROVE
		End Get
		Set
			If (Me._IS_APPROVE.Equals(value) = false) Then
				Me.OnIS_APPROVEChanging(value)
				Me.SendPropertyChanging
				Me._IS_APPROVE = value
				Me.SendPropertyChanged("IS_APPROVE")
				Me.OnIS_APPROVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_DATE", DbType:="DateTime")>  _
	Public Property APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APPROVE_DATE
		End Get
		Set
			If (Me._APPROVE_DATE.Equals(value) = false) Then
				Me.OnAPPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_DATE = value
				Me.SendPropertyChanged("APPROVE_DATE")
				Me.OnAPPROVE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
